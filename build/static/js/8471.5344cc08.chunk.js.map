{"version":3,"file":"static/js/8471.5344cc08.chunk.js","mappings":"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","sources":["components/custom-breadcrumbs/link-item.tsx","components/custom-breadcrumbs/custom-breadcrumbs.tsx","components/image/utils.ts","components/image/image.tsx","components/map/styles.tsx","components/map/map-popup.tsx","components/map/map-marker.tsx","components/map/map-control.tsx","_mock/map/cities.ts","_mock/map/countries.ts","sections/_examples/extra/map-view/heatmap/control-panel.tsx","sections/_examples/extra/map-view/heatmap/map-style.ts","sections/_examples/extra/map-view/heatmap/index.tsx","sections/_examples/extra/map-view/clusters/layers.ts","sections/_examples/extra/map-view/clusters/index.tsx","sections/_examples/extra/map-view/interaction/control-panel.tsx","sections/_examples/extra/map-view/interaction/index.tsx","sections/_examples/extra/map-view/side-by-side/control-panel.tsx","sections/_examples/extra/map-view/side-by-side/index.tsx","sections/_examples/extra/map-view/change-theme/control-panel.tsx","sections/_examples/extra/map-view/change-theme/index.tsx","sections/_examples/extra/map-view/map-markers-popups.tsx","sections/_examples/extra/map-view/draggable-markers/control-panel.tsx","sections/_examples/extra/map-view/draggable-markers/index.tsx","sections/_examples/extra/map-view/viewport-animation/control-panel.tsx","sections/_examples/extra/map-view/viewport-animation/index.tsx","sections/_examples/extra/map-view/map-geo-json-animation.tsx","sections/_examples/extra/map-view/map-highlight-by-filter.tsx","sections/_examples/extra/map-view/index.tsx","pages/components/extra/map.tsx","utils/mapboxgl.ts"],"sourcesContent":["// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\n// routes\nimport { RouterLink } from 'src/routes/components';\n//\nimport { BreadcrumbsLinkProps } from './types';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  link: BreadcrumbsLinkProps;\n  activeLast?: boolean;\n  disabled: boolean;\n};\n\nexport default function BreadcrumbsLink({ link, activeLast, disabled }: Props) {\n  const { name, href, icon } = link;\n\n  const styles = {\n    typography: 'body2',\n    alignItems: 'center',\n    color: 'text.primary',\n    display: 'inline-flex',\n    ...(disabled &&\n      !activeLast && {\n        cursor: 'default',\n        pointerEvents: 'none',\n        color: 'text.disabled',\n      }),\n  };\n\n  const renderContent = (\n    <>\n      {icon && (\n        <Box\n          component=\"span\"\n          sx={{\n            mr: 1,\n            display: 'inherit',\n            '& svg': { width: 20, height: 20 },\n          }}\n        >\n          {icon}\n        </Box>\n      )}\n\n      {name}\n    </>\n  );\n\n  if (href) {\n    return (\n      <Link component={RouterLink} href={href} sx={styles}>\n        {renderContent}\n      </Link>\n    );\n  }\n\n  return <Box sx={styles}> {renderContent} </Box>;\n}\n","// @mui\nimport Box from '@mui/material/Box';\nimport Link from '@mui/material/Link';\nimport Stack from '@mui/material/Stack';\nimport Typography from '@mui/material/Typography';\nimport Breadcrumbs from '@mui/material/Breadcrumbs';\n//\nimport { CustomBreadcrumbsProps } from './types';\nimport LinkItem from './link-item';\n\n// ----------------------------------------------------------------------\n\nexport default function CustomBreadcrumbs({\n  links,\n  action,\n  heading,\n  moreLink,\n  activeLast,\n  sx,\n  ...other\n}: CustomBreadcrumbsProps) {\n  const lastLink = links[links.length - 1].name;\n\n  return (\n    <Box sx={{ ...sx }}>\n      <Stack direction=\"row\" alignItems=\"center\">\n        <Box sx={{ flexGrow: 1 }}>\n          {/* HEADING */}\n          {heading && (\n            <Typography variant=\"h4\" gutterBottom>\n              {heading}\n            </Typography>\n          )}\n\n          {/* BREADCRUMBS */}\n          {!!links.length && (\n            <Breadcrumbs separator={<Separator />} {...other}>\n              {links.map((link) => (\n                <LinkItem\n                  key={link.name || ''}\n                  link={link}\n                  activeLast={activeLast}\n                  disabled={link.name === lastLink}\n                />\n              ))}\n            </Breadcrumbs>\n          )}\n        </Box>\n\n        {action && <Box sx={{ flexShrink: 0 }}> {action} </Box>}\n      </Stack>\n\n      {/* MORE LINK */}\n      {!!moreLink && (\n        <Box sx={{ mt: 2 }}>\n          {moreLink.map((href) => (\n            <Link\n              key={href}\n              href={href}\n              variant=\"body2\"\n              target=\"_blank\"\n              rel=\"noopener\"\n              sx={{ display: 'table' }}\n            >\n              {href}\n            </Link>\n          ))}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\n// ----------------------------------------------------------------------\n\nfunction Separator() {\n  return (\n    <Box\n      component=\"span\"\n      sx={{\n        width: 4,\n        height: 4,\n        borderRadius: '50%',\n        bgcolor: 'text.disabled',\n      }}\n    />\n  );\n}\n","// ----------------------------------------------------------------------\n\nexport function getRatio(ratio = '1/1') {\n  return {\n    '4/3': 'calc(100% / 4 * 3)',\n    '3/4': 'calc(100% / 3 * 4)',\n    '6/4': 'calc(100% / 6 * 4)',\n    '4/6': 'calc(100% / 4 * 6)',\n    '16/9': 'calc(100% / 16 * 9)',\n    '9/16': 'calc(100% / 9 * 16)',\n    '21/9': 'calc(100% / 21 * 9)',\n    '9/21': 'calc(100% / 9 * 21)',\n    '1/1': '100%',\n  }[ratio];\n}\n","import { forwardRef } from 'react';\nimport { LazyLoadImage } from 'react-lazy-load-image-component';\n// @mui\nimport { alpha, useTheme } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\n//\nimport { getRatio } from './utils';\nimport { ImageProps } from './types';\n\n// ----------------------------------------------------------------------\n\nconst Image = forwardRef<HTMLSpanElement, ImageProps>(\n  (\n    {\n      ratio,\n      overlay,\n      disabledEffect = false,\n      //\n      alt,\n      src,\n      afterLoad,\n      delayTime,\n      threshold,\n      beforeLoad,\n      delayMethod,\n      placeholder,\n      wrapperProps,\n      scrollPosition,\n      effect = 'blur',\n      visibleByDefault,\n      wrapperClassName,\n      useIntersectionObserver,\n      sx,\n      ...other\n    },\n    ref\n  ) => {\n    const theme = useTheme();\n\n    const overlayStyles = !!overlay && {\n      '&:before': {\n        content: \"''\",\n        top: 0,\n        left: 0,\n        width: 1,\n        height: 1,\n        zIndex: 1,\n        position: 'absolute',\n        background: overlay || alpha(theme.palette.grey[900], 0.48),\n      },\n    };\n\n    const content = (\n      <Box\n        component={LazyLoadImage}\n        //\n        alt={alt}\n        src={src}\n        afterLoad={afterLoad}\n        delayTime={delayTime}\n        threshold={threshold}\n        beforeLoad={beforeLoad}\n        delayMethod={delayMethod}\n        placeholder={placeholder}\n        wrapperProps={wrapperProps}\n        scrollPosition={scrollPosition}\n        visibleByDefault={visibleByDefault}\n        effect={disabledEffect ? undefined : effect}\n        useIntersectionObserver={useIntersectionObserver}\n        wrapperClassName={wrapperClassName || 'component-image-wrapper'}\n        placeholderSrc={disabledEffect ? '/assets/transparent.png' : '/assets/placeholder.svg'}\n        //\n        sx={{\n          width: 1,\n          height: 1,\n          objectFit: 'cover',\n          verticalAlign: 'bottom',\n          ...(!!ratio && {\n            top: 0,\n            left: 0,\n            position: 'absolute',\n          }),\n        }}\n      />\n    );\n\n    return (\n      <Box\n        ref={ref}\n        component=\"span\"\n        className=\"component-image\"\n        sx={{\n          overflow: 'hidden',\n          position: 'relative',\n          verticalAlign: 'bottom',\n          display: 'inline-block',\n          ...(!!ratio && {\n            width: 1,\n          }),\n          '& span.component-image-wrapper': {\n            width: 1,\n            height: 1,\n            verticalAlign: 'bottom',\n            backgroundSize: 'cover !important',\n            ...(!!ratio && {\n              pt: getRatio(ratio),\n            }),\n          },\n          ...overlayStyles,\n          ...sx,\n        }}\n        {...other}\n      >\n        {content}\n      </Box>\n    );\n  }\n);\n\nexport default Image;\n","import { Popup } from 'react-map-gl';\n// @mui\nimport { useTheme, styled } from '@mui/material/styles';\nimport GlobalStyles from '@mui/material/GlobalStyles';\n// theme\nimport { bgBlur } from 'src/theme/css';\n\n// ----------------------------------------------------------------------\n\nexport function StyledMapControls() {\n  const theme = useTheme();\n\n  const inputGlobalStyles = (\n    <GlobalStyles\n      styles={{\n        '.mapboxgl-ctrl.mapboxgl-ctrl-group': {\n          borderRadius: '8px',\n          boxShadow: theme.customShadows.z8,\n        },\n        '.mapboxgl-ctrl-zoom-in': {\n          borderRadius: '8px 8px 0 0',\n        },\n        '.mapboxgl-ctrl-compass': {\n          borderRadius: '0 0 8px 8px',\n        },\n        '.mapboxgl-ctrl-fullscreen': {\n          '.mapboxgl-ctrl-icon': {\n            transform: ' scale(0.75)',\n          },\n        },\n        '.mapboxgl-ctrl-group button+button': {\n          borderTop: `1px solid ${theme.palette.divider}`,\n        },\n        '.mapboxgl-ctrl.mapboxgl-ctrl-scale': {\n          border: 'none',\n          lineHeight: '14px',\n          borderRadius: '4px',\n          color: theme.palette.common.white,\n          fontWeight: theme.typography.fontWeightBold,\n          backgroundImage: `linear-gradient(to right, #8a2387, #e94057, #f27121)`,\n        },\n      }}\n    />\n  );\n\n  return inputGlobalStyles;\n}\n\n// ----------------------------------------------------------------------\n\nexport const StyledPopup = styled(Popup)(({ theme }) => {\n  const isRTL = theme.direction === 'rtl';\n\n  return {\n    '& .mapboxgl-popup-content': {\n      maxWidth: 180,\n      padding: theme.spacing(1),\n      boxShadow: theme.customShadows.z20,\n      borderRadius: theme.shape.borderRadius,\n      backgroundColor: theme.palette.grey[800],\n    },\n    '& .mapboxgl-popup-close-button': {\n      width: 24,\n      height: 24,\n      fontSize: 16,\n      opacity: 0.48,\n      color: theme.palette.common.white,\n      right: isRTL && '0',\n      left: isRTL && 'auto',\n      '&:hover': {\n        opacity: 1,\n      },\n      '&:focus': {\n        outline: 'none',\n      },\n    },\n    '&.mapboxgl-popup-anchor-top .mapboxgl-popup-tip': {\n      marginBottom: -1,\n      borderBottomColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-right .mapboxgl-popup-tip': {\n      marginLeft: -1,\n      borderLeftColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-bottom .mapboxgl-popup-tip': {\n      marginTop: -1,\n      borderTopColor: theme.palette.grey[800],\n    },\n    '&.mapboxgl-popup-anchor-left .mapboxgl-popup-tip': {\n      marginRight: -1,\n      borderRightColor: theme.palette.grey[800],\n    },\n  };\n});\n\n// ----------------------------------------------------------------------\n\nexport const StyledControlPanel = styled('div')(({ theme }) => ({\n  ...bgBlur({ color: theme.palette.grey[900] }),\n  zIndex: 9,\n  minWidth: 200,\n  position: 'absolute',\n  top: theme.spacing(1),\n  right: theme.spacing(1),\n  padding: theme.spacing(2),\n  borderRadius: theme.shape.borderRadius,\n}));\n","import { PopupProps } from 'react-map-gl';\n// @mui\nimport { Theme, SxProps } from '@mui/material/styles';\n//\nimport { StyledPopup } from './styles';\n\n// ----------------------------------------------------------------------\n\ninterface MapControlPopupProps extends PopupProps {\n  sx?: SxProps<Theme>;\n}\n\n// ----------------------------------------------------------------------\n\nexport default function MapPopup({ sx, children, ...other }: MapControlPopupProps) {\n  return (\n    <StyledPopup anchor=\"bottom\" sx={sx} {...other}>\n      {children}\n    </StyledPopup>\n  );\n}\n","import { Marker, MarkerProps } from 'react-map-gl';\n// @mui\nimport Box from '@mui/material/Box';\n\n// ----------------------------------------------------------------------\n\nconst SIZE = 20;\n\nconst ICON = `M20.2,15.7L20.2,15.7c1.1-1.6,1.8-3.6,1.8-5.7c0-5.6-4.5-10-10-10S2,4.5,2,10c0,2,0.6,3.9,1.6,5.4c0,0.1,0.1,0.2,0.2,0.3\n  c0,0,0.1,0.1,0.1,0.2c0.2,0.3,0.4,0.6,0.7,0.9c2.6,3.1,7.4,7.6,7.4,7.6s4.8-4.5,7.4-7.5c0.2-0.3,0.5-0.6,0.7-0.9\n  C20.1,15.8,20.2,15.8,20.2,15.7z`;\n\n// ----------------------------------------------------------------------\n\nexport default function MapMarker({ ...other }: MarkerProps) {\n  return (\n    <Marker {...other}>\n      <Box\n        component=\"svg\"\n        viewBox=\"0 0 24 24\"\n        sx={{\n          height: SIZE,\n          stroke: 'none',\n          cursor: 'pointer',\n          fill: (theme) => theme.palette.error.main,\n          transform: `translate(${-SIZE / 2}px,${-SIZE}px)`,\n        }}\n      >\n        <path d={ICON} />\n      </Box>\n    </Marker>\n  );\n}\n","import { NavigationControl, FullscreenControl, ScaleControl, GeolocateControl } from 'react-map-gl';\n//\nimport { StyledMapControls } from './styles';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  hideScaleControl?: boolean;\n  hideGeolocateControl?: boolean;\n  hideFullscreenControl?: boolean;\n  hideNavigationnControl?: boolean;\n};\n\nexport default function MapControl({\n  hideScaleControl,\n  hideGeolocateControl,\n  hideFullscreenControl,\n  hideNavigationnControl,\n}: Props) {\n  return (\n    <>\n      <StyledMapControls />\n\n      {!hideGeolocateControl && (\n        <GeolocateControl position=\"top-left\" positionOptions={{ enableHighAccuracy: true }} />\n      )}\n\n      {!hideFullscreenControl && <FullscreenControl position=\"top-left\" />}\n\n      {!hideScaleControl && <ScaleControl position=\"bottom-left\" />}\n\n      {!hideNavigationnControl && <NavigationControl position=\"bottom-left\" />}\n    </>\n  );\n}\n","export const cities = [\n  {\n    city: 'New York',\n    population: '8,175,133',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Above_Gotham.jpg/240px-Above_Gotham.jpg',\n    state: 'New York',\n    latitude: 40.6643,\n    longitude: -73.9385,\n  },\n  {\n    city: 'Los Angeles',\n    population: '3,792,621',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/5/57/LA_Skyline_Mountains2.jpg/240px-LA_Skyline_Mountains2.jpg',\n    state: 'California',\n    latitude: 34.0194,\n    longitude: -118.4108,\n  },\n  {\n    city: 'Chicago',\n    population: '2,695,598',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/8/85/2008-06-10_3000x1000_chicago_skyline.jpg/240px-2008-06-10_3000x1000_chicago_skyline.jpg',\n    state: 'Illinois',\n    latitude: 41.8376,\n    longitude: -87.6818,\n  },\n  {\n    city: 'Houston',\n    population: '2,100,263',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/60/Aerial_views_of_the_Houston%2C_Texas%2C_28005u.jpg/240px-Aerial_views_of_the_Houston%2C_Texas%2C_28005u.jpg',\n    state: 'Texas',\n    latitude: 29.7805,\n    longitude: -95.3863,\n  },\n  {\n    city: 'Phoenix',\n    population: '1,445,632',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/b/b9/Downtown_Phoenix_Aerial_Looking_Northeast.jpg/207px-Downtown_Phoenix_Aerial_Looking_Northeast.jpg',\n    state: 'Arizona',\n    latitude: 33.5722,\n    longitude: -112.088,\n  },\n  {\n    city: 'Philadelphia',\n    population: '1,526,006',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/4/4d/Philly_skyline.jpg/240px-Philly_skyline.jpg',\n    state: 'Pennsylvania',\n    latitude: 40.0094,\n    longitude: -75.1333,\n  },\n  {\n    city: 'San Antonio',\n    population: '1,327,407',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/ff/Downtown_San_Antonio_View.JPG/240px-Downtown_San_Antonio_View.JPG',\n    state: 'Texas',\n    latitude: 29.4724,\n    longitude: -98.5251,\n  },\n  {\n    city: 'San Diego',\n    population: '1,307,402',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/5/53/US_Navy_110604-N-NS602-574_Navy_and_Marine_Corps_personnel%2C_along_with_community_leaders_from_the_greater_San_Diego_area_come_together_to_commemora.jpg/240px-US_Navy_110604-N-NS602-574_Navy_and_Marine_Corps_personnel%2C_along_with_community_leaders_from_the_greater_San_Diego_area_come_together_to_commemora.jpg',\n    state: 'California',\n    latitude: 32.8153,\n    longitude: -117.135,\n  },\n  {\n    city: 'Dallas',\n    population: '1,197,816',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/a/ab/Dallas_skyline_daytime.jpg/240px-Dallas_skyline_daytime.jpg',\n    state: 'Texas',\n    latitude: 32.7757,\n    longitude: -96.7967,\n  },\n  {\n    city: 'San Jose',\n    population: '945,942',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/1/1e/Downtown_San_Jose_skyline.PNG/240px-Downtown_San_Jose_skyline.PNG',\n    state: 'California',\n    latitude: 37.2969,\n    longitude: -121.8193,\n  },\n  {\n    city: 'Austin',\n    population: '790,390',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/9/97/Austin2012-12-01.JPG/240px-Austin2012-12-01.JPG',\n    state: 'Texas',\n    latitude: 30.3072,\n    longitude: -97.756,\n  },\n  {\n    city: 'Jacksonville',\n    population: '821,784',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/f3/Skyline_of_Jacksonville_FL%2C_South_view_20160706_1.jpg/240px-Skyline_of_Jacksonville_FL%2C_South_view_20160706_1.jpg',\n    state: 'Florida',\n    latitude: 30.337,\n    longitude: -81.6613,\n  },\n  {\n    city: 'San Francisco',\n    population: '805,235',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6a/San_Francisco_skyline_from_Coit_Tower.jpg/240px-San_Francisco_skyline_from_Coit_Tower.jpg',\n    state: 'California',\n    latitude: 37.7751,\n    longitude: -122.4193,\n  },\n  {\n    city: 'Columbus',\n    population: '787,033',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/f/fc/Columbus-ohio-skyline-panorama.jpg/240px-Columbus-ohio-skyline-panorama.jpg',\n    state: 'Ohio',\n    latitude: 39.9848,\n    longitude: -82.985,\n  },\n  {\n    city: 'Indianapolis',\n    population: '820,445',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/1/16/Downtown_indy_from_parking_garage_zoom.JPG/213px-Downtown_indy_from_parking_garage_zoom.JPG',\n    state: 'Indiana',\n    latitude: 39.7767,\n    longitude: -86.1459,\n  },\n  {\n    city: 'Fort Worth',\n    population: '741,206',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/d/db/FortWorthTexasSkylineW.jpg/240px-FortWorthTexasSkylineW.jpg',\n    state: 'Texas',\n    latitude: 32.7795,\n    longitude: -97.3463,\n  },\n  {\n    city: 'Charlotte',\n    population: '731,424',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/7/7d/Charlotte_skyline45647.jpg/222px-Charlotte_skyline45647.jpg',\n    state: 'North Carolina',\n    latitude: 35.2087,\n    longitude: -80.8307,\n  },\n  {\n    city: 'Seattle',\n    population: '608,660',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/3/36/SeattleI5Skyline.jpg/240px-SeattleI5Skyline.jpg',\n    state: 'Washington',\n    latitude: 47.6205,\n    longitude: -122.3509,\n  },\n  {\n    city: 'Denver',\n    population: '600,158',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/0/0b/DenverCP.JPG/240px-DenverCP.JPG',\n    state: 'Colorado',\n    latitude: 39.7618,\n    longitude: -104.8806,\n  },\n  {\n    city: 'El Paso',\n    population: '649,121',\n    photoUrl:\n      'http://upload.wikimedia.org/wikipedia/commons/thumb/6/6d/Downtown_El_Paso_at_sunset.jpeg/240px-Downtown_El_Paso_at_sunset.jpeg',\n    state: 'Texas',\n    latitude: 31.8484,\n    longitude: -106.427,\n  },\n];\n","import { _mock } from '../_mock';\n\n// ----------------------------------------------------------------------\n\nexport const countries = [\n  {\n    timezones: ['America/Aruba'],\n    latlng: [12.5, -69.96666666],\n    name: 'Aruba',\n    country_code: 'AW',\n    capital: 'Oranjestad',\n    photoUrl: _mock.image.cover(1),\n  },\n  {\n    timezones: ['Asia/Kabul'],\n    latlng: [33, 65],\n    name: 'Afghanistan',\n    country_code: 'AF',\n    capital: 'Kabul',\n    photoUrl: _mock.image.cover(2),\n  },\n  {\n    timezones: ['Africa/Luanda'],\n    latlng: [-12.5, 18.5],\n    name: 'Angola',\n    country_code: 'AO',\n    capital: 'Luanda',\n    photoUrl: _mock.image.cover(3),\n  },\n  {\n    timezones: ['Pacific/Efate'],\n    latlng: [-16, 167],\n    name: 'Vanuatu',\n    country_code: 'VU',\n    capital: 'Port Vila',\n    photoUrl: _mock.image.cover(4),\n  },\n  {\n    timezones: ['Pacific/Wallis'],\n    latlng: [-13.3, -176.2],\n    name: 'Wallis and Futuna',\n    country_code: 'WF',\n    capital: 'Mata-Utu',\n    photoUrl: _mock.image.cover(5),\n  },\n  {\n    timezones: ['Pacific/Apia'],\n    latlng: [-13.58333333, -172.33333333],\n    name: 'Samoa',\n    country_code: 'WS',\n    capital: 'Apia',\n    photoUrl: _mock.image.cover(6),\n  },\n  {\n    timezones: ['Asia/Aden'],\n    latlng: [15, 48],\n    name: 'Yemen',\n    country_code: 'YE',\n    capital: \"Sana'a\",\n    photoUrl: _mock.image.cover(7),\n  },\n  {\n    timezones: ['Africa/Johannesburg'],\n    latlng: [-29, 24],\n    name: 'South Africa',\n    country_code: 'ZA',\n    capital: 'Pretoria',\n    photoUrl: _mock.image.cover(8),\n  },\n  {\n    timezones: ['Africa/Lusaka'],\n    latlng: [-15, 30],\n    name: 'Zambia',\n    country_code: 'ZM',\n    capital: 'Lusaka',\n    photoUrl: _mock.image.cover(9),\n  },\n  {\n    timezones: ['Africa/Harare'],\n    latlng: [-20, 30],\n    name: 'Zimbabwe',\n    country_code: 'ZW',\n    capital: 'Harare',\n    photoUrl: _mock.image.cover(10),\n  },\n];\n","import { memo } from 'react';\n// @mui\nimport Slider from '@mui/material/Slider';\nimport Switch from '@mui/material/Switch';\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n// utils\nimport { fDate } from 'src/utils/format-time';\n// components\nimport { StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  startTime: number;\n  endTime: number;\n  allDays: boolean;\n  selectedTime: number;\n  onChangeTime: (value: number) => void;\n  onChangeAllDays: (value: boolean) => void;\n};\n\nfunction ControlPanel({\n  startTime,\n  endTime,\n  allDays,\n  selectedTime,\n  onChangeTime,\n  onChangeAllDays,\n}: Props) {\n  const day = 24 * 60 * 60 * 1000;\n\n  const days = Math.round((endTime - startTime) / day);\n\n  const selectedDay = Math.round((selectedTime - startTime) / day);\n\n  const handleChangeDays = (value: number) => {\n    const daysToAdd = value;\n\n    const newTime = startTime + daysToAdd * day;\n\n    onChangeTime(newTime);\n  };\n\n  return (\n    <StyledControlPanel>\n      <Box\n        sx={{\n          width: '100%',\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'space-between',\n        }}\n      >\n        <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n          All Days\n        </Typography>\n\n        <Switch\n          size=\"small\"\n          checked={allDays}\n          onChange={(event) => onChangeAllDays(event.target.checked)}\n        />\n      </Box>\n\n      <br />\n\n      <Typography\n        gutterBottom\n        variant=\"body2\"\n        sx={{ color: allDays ? 'text.disabled' : 'common.white' }}\n      >\n        Each Day: {fDate(selectedTime)}\n      </Typography>\n\n      <Slider\n        min={1}\n        step={1}\n        max={days}\n        disabled={allDays}\n        value={selectedDay}\n        onChange={(event, newValue) => {\n          if (typeof newValue === 'number') handleChangeDays(newValue);\n        }}\n      />\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import type { HeatmapLayer } from 'react-map-gl';\n\n// ----------------------------------------------------------------------\n\nconst MAX_ZOOM_LEVEL = 9;\n\nexport const heatmapLayer: Omit<HeatmapLayer, 'source'> = {\n  id: 'heatmap',\n  maxzoom: MAX_ZOOM_LEVEL,\n  type: 'heatmap',\n  paint: {\n    // Increase the heatmap weight based on frequency and property magnitude\n    'heatmap-weight': ['interpolate', ['linear'], ['get', 'mag'], 0, 0, 6, 1],\n    // Increase the heatmap color weight weight by zoom level\n    // heatmap-intensity is a multiplier on top of heatmap-weight\n    'heatmap-intensity': ['interpolate', ['linear'], ['zoom'], 0, 1, MAX_ZOOM_LEVEL, 3],\n    // Color ramp for heatmap.  Domain is 0 (low) to 1 (high).\n    // Begin color ramp at 0-stop with a 0-transparancy color\n    // to create a blur-like effect.\n    'heatmap-color': [\n      'interpolate',\n      ['linear'],\n      ['heatmap-density'],\n      0,\n      'rgba(33,102,172,0)',\n      0.2,\n      'rgb(103,169,207)',\n      0.4,\n      'rgb(209,229,240)',\n      0.6,\n      'rgb(253,219,199)',\n      0.8,\n      'rgb(239,138,98)',\n      0.9,\n      'rgb(255,201,101)',\n    ],\n    // Adjust the heatmap radius by zoom level\n    'heatmap-radius': ['interpolate', ['linear'], ['zoom'], 0, 2, MAX_ZOOM_LEVEL, 20],\n    // Transition from heatmap to circle layer by zoom level\n    'heatmap-opacity': ['interpolate', ['linear'], ['zoom'], 7, 1, 9, 0],\n  },\n};\n","import { useState, useEffect, useMemo, memo } from 'react';\nimport Map, { Source, Layer } from 'react-map-gl';\n// components\nimport { MapBoxProps } from 'src/components/map';\n//\nimport ControlPanel from './control-panel';\nimport { heatmapLayer } from './map-style';\n\n// ----------------------------------------------------------------------\n\nfunction MapHeatmap({ ...other }: MapBoxProps) {\n  const [allDays, useAllDays] = useState(true);\n\n  const [timeRange, setTimeRange] = useState([0, 0]);\n\n  const [selectedTime, selectTime] = useState(0);\n\n  const [earthquakes, setEarthQuakes] = useState();\n\n  useEffect(() => {\n    fetch('https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson')\n      .then((resp) => resp.json())\n      .then((json) => {\n        const { features } = json;\n\n        const endTime = features[0].properties.time;\n\n        const startTime = features[features.length - 1].properties.time;\n\n        setTimeRange([startTime, endTime]);\n\n        setEarthQuakes(json);\n\n        selectTime(endTime);\n      })\n      .catch((error) => console.error('Could not load data', error));\n  }, []);\n\n  const data: any = useMemo(\n    () => (allDays ? earthquakes : filterFeaturesByDay(earthquakes, selectedTime)),\n    [earthquakes, allDays, selectedTime]\n  );\n\n  return (\n    <>\n      <Map\n        initialViewState={{\n          latitude: 40,\n          longitude: -100,\n          zoom: 3,\n        }}\n        {...other}\n      >\n        {data && (\n          <Source type=\"geojson\" data={data}>\n            <Layer {...heatmapLayer} />\n          </Source>\n        )}\n      </Map>\n\n      <ControlPanel\n        startTime={timeRange[0]}\n        endTime={timeRange[1]}\n        selectedTime={selectedTime}\n        allDays={allDays}\n        onChangeTime={selectTime}\n        onChangeAllDays={useAllDays}\n      />\n    </>\n  );\n}\n\nexport default memo(MapHeatmap);\n\n// ----------------------------------------------------------------------\n\nfunction filterFeaturesByDay(\n  featureCollection:\n    | {\n        features: any[];\n      }\n    | undefined,\n  time: number\n) {\n  const date = new Date(time);\n\n  const year = date.getFullYear();\n\n  const month = date.getMonth();\n\n  const day = date.getDate();\n\n  const features = featureCollection?.features.filter((feature) => {\n    const featureDate = new Date(feature.properties?.time);\n\n    return (\n      featureDate.getFullYear() === year &&\n      featureDate.getMonth() === month &&\n      featureDate.getDate() === day\n    );\n  });\n  return { type: 'FeatureCollection', features };\n}\n","import type { LayerProps } from 'react-map-gl';\n\n// ----------------------------------------------------------------------\n\nexport const clusterLayer: LayerProps = {\n  id: 'clusters',\n  type: 'circle',\n  source: 'earthquakes',\n  filter: ['has', 'point_count'],\n  paint: {\n    'circle-color': ['step', ['get', 'point_count'], '#51bbd6', 100, '#f1f075', 750, '#f28cb1'],\n    'circle-radius': ['step', ['get', 'point_count'], 20, 100, 30, 750, 40],\n  },\n};\n\nexport const clusterCountLayer: LayerProps = {\n  id: 'cluster-count',\n  type: 'symbol',\n  source: 'earthquakes',\n  filter: ['has', 'point_count'],\n  layout: {\n    'text-field': '{point_count_abbreviated}',\n    'text-font': ['DIN Offc Pro Medium', 'Arial Unicode MS Bold'],\n    'text-size': 12,\n  },\n};\n\nexport const unclusteredPointLayer: LayerProps = {\n  id: 'unclustered-point',\n  type: 'circle',\n  source: 'earthquakes',\n  filter: ['!', ['has', 'point_count']],\n  paint: {\n    'circle-color': '#11b4da',\n    'circle-radius': 4,\n    'circle-stroke-width': 1,\n    'circle-stroke-color': '#FFFFFF',\n  },\n};\n","import { useRef, memo } from 'react';\nimport Map, { Layer, Source, MapRef, LngLatLike, MapLayerMouseEvent } from 'react-map-gl';\n// components\nimport { MapBoxProps } from 'src/components/map';\n//\nimport { clusterLayer, clusterCountLayer, unclusteredPointLayer } from './layers';\n\n// ----------------------------------------------------------------------\n\nfunction MapClusters({ ...other }: MapBoxProps) {\n  const mapRef = useRef<MapRef>(null);\n\n  const onClick = (event: MapLayerMouseEvent) => {\n    const feature = event.features?.[0];\n\n    const clusterId = feature?.properties?.cluster_id;\n\n    const mapboxSource: any = mapRef.current?.getSource('earthquakes');\n\n    mapboxSource.getClusterExpansionZoom(clusterId, (error: any, zoom: number) => {\n      if (error) {\n        return;\n      }\n\n      if (feature?.geometry.type === 'Point') {\n        mapRef.current?.easeTo({\n          center: feature?.geometry.coordinates as LngLatLike | undefined,\n          zoom: Number.isNaN(zoom) ? 3 : zoom,\n          duration: 500,\n        });\n      }\n    });\n  };\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 40.67,\n        longitude: -103.59,\n        zoom: 3,\n      }}\n      interactiveLayerIds={[clusterLayer.id || '']}\n      onClick={onClick}\n      ref={mapRef}\n      {...other}\n    >\n      <Source\n        id=\"earthquakes\"\n        type=\"geojson\"\n        data=\"https://docs.mapbox.com/mapbox-gl-js/assets/earthquakes.geojson\"\n        cluster\n        clusterMaxZoom={14}\n        clusterRadius={50}\n      >\n        <Layer {...clusterLayer} />\n        <Layer {...clusterCountLayer} />\n        <Layer {...unclusteredPointLayer} />\n      </Source>\n    </Map>\n  );\n}\n\nexport default memo(MapClusters);\n","import { memo } from 'react';\n// @mui\nimport { styled, alpha } from '@mui/material/styles';\nimport Switch from '@mui/material/Switch';\nimport InputBase from '@mui/material/InputBase';\nimport Typography from '@mui/material/Typography';\n// components\nimport { MapSettingKeys, MapSettings, StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nconst StyledRow = styled('div')(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  textTransform: 'capitalize',\n  justifyContent: 'space-between',\n  color: theme.palette.common.white,\n  '&:not(:last-of-type)': {\n    marginBottom: theme.spacing(1),\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nconst camelPattern = /(^|[A-Z])[a-z]*/g;\n\nfunction formatSettingName(name: string) {\n  return name.match(camelPattern)?.join(' ');\n}\n\ntype Props = {\n  settings: MapSettings;\n  onChange: (name: MapSettingKeys, value: boolean | number) => void;\n};\n\nfunction ControlPanel({ settings, onChange }: Props) {\n  const renderSetting = (name: MapSettingKeys, value: boolean | number) => {\n    switch (typeof value) {\n      case 'boolean':\n        return (\n          <StyledRow key={name}>\n            <Typography variant=\"body2\">{formatSettingName(name)}</Typography>\n            <Switch\n              size=\"small\"\n              checked={value}\n              onChange={(event) => onChange(name, event.target.checked)}\n            />\n          </StyledRow>\n        );\n      case 'number':\n        return (\n          <StyledRow key={name}>\n            <Typography variant=\"body2\">{formatSettingName(name)}</Typography>\n            <InputBase\n              value={value}\n              onChange={(event) => onChange(name, Number(event.target.value))}\n              inputProps={{ type: 'number' }}\n              sx={{\n                '& input': {\n                  py: 0.25,\n                  width: 40,\n                  fontSize: 14,\n                  borderRadius: 0.5,\n                  textAlign: 'center',\n                  color: 'common.white',\n                  bgcolor: (theme) => alpha(theme.palette.grey[500], 0.12),\n                },\n              }}\n            />\n          </StyledRow>\n        );\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <StyledControlPanel>\n      {Object.keys(settings).map((name) =>\n        renderSetting(name as MapSettingKeys, settings[name as MapSettingKeys])\n      )}\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import { useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapControl, MapBoxProps } from 'src/components/map';\n//\nimport ControlPanel from './control-panel';\n\n// ----------------------------------------------------------------------\n\nfunction MapInteraction({ ...other }: MapBoxProps) {\n  const [settings, setSettings] = useState({\n    minZoom: 0,\n    maxZoom: 20,\n    minPitch: 0,\n    maxPitch: 85,\n    dragPan: true,\n    boxZoom: true,\n    keyboard: true,\n    touchZoom: true,\n    dragRotate: true,\n    scrollZoom: true,\n    touchPitch: true,\n    touchRotate: true,\n    doubleClickZoom: true,\n    touchZoomRotate: true,\n  });\n\n  const updateSettings = useCallback(\n    (name: string, value: boolean | number) =>\n      setSettings((prevSettings) => ({\n        ...prevSettings,\n        [name]: value,\n      })),\n    []\n  );\n\n  return (\n    <Map\n      {...settings}\n      initialViewState={{\n        latitude: 37.729,\n        longitude: -122.36,\n        zoom: 11,\n        bearing: 0,\n        pitch: 50,\n      }}\n      {...other}\n    >\n      <MapControl />\n\n      <ControlPanel settings={settings} onChange={updateSettings} />\n    </Map>\n  );\n}\n\nexport default memo(MapInteraction);\n","import { memo } from 'react';\n// @mui\nimport ToggleButton from '@mui/material/ToggleButton';\nimport ToggleButtonGroup from '@mui/material/ToggleButtonGroup';\n// components\nimport { StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nexport type ModeProps = 'side-by-side' | 'split-screen';\n\ntype Props = {\n  mode: ModeProps;\n  onModeChange: (event: React.MouseEvent<HTMLElement>, newMode: ModeProps | null) => void;\n};\n\nfunction ControlPanel({ mode, onModeChange }: Props) {\n  return (\n    <StyledControlPanel>\n      <ToggleButtonGroup color=\"primary\" value={mode} exclusive onChange={onModeChange}>\n        <ToggleButton value=\"side-by-side\">Side by side</ToggleButton>\n\n        <ToggleButton value=\"split-screen\">Split screen</ToggleButton>\n      </ToggleButtonGroup>\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import { useState, useCallback, useMemo, memo } from 'react';\nimport Map, { ViewStateChangeEvent } from 'react-map-gl';\n// components\nimport { MapBoxProps } from 'src/components/map';\n//\nimport ControlPanel, { ModeProps } from './control-panel';\n\n// ----------------------------------------------------------------------\n\nconst LeftMapStyle: React.CSSProperties = {\n  position: 'absolute',\n  width: '50%',\n  height: '100%',\n};\n\nconst RightMapStyle: React.CSSProperties = {\n  position: 'absolute',\n  left: '50%',\n  width: '50%',\n  height: '100%',\n};\n\n// ----------------------------------------------------------------------\n\nfunction MapSideBySide({ ...other }: MapBoxProps) {\n  const [viewState, setViewState] = useState({\n    longitude: -122.43,\n    latitude: 37.78,\n    zoom: 12,\n    pitch: 30,\n  });\n\n  const [mode, setMode] = useState<ModeProps>('side-by-side');\n\n  const [activeMap, setActiveMap] = useState<'left' | 'right'>('left');\n\n  const onLeftMoveStart = useCallback(() => setActiveMap('left'), []);\n\n  const onRightMoveStart = useCallback(() => setActiveMap('right'), []);\n\n  const onMove = useCallback((event: ViewStateChangeEvent) => setViewState(event.viewState), []);\n\n  const width = typeof window === 'undefined' ? 100 : window.innerWidth;\n\n  const leftMapPadding = useMemo(\n    () => ({\n      left: mode === 'split-screen' ? width / 2 : 0,\n      top: 0,\n      right: 0,\n      bottom: 0,\n    }),\n    [width, mode]\n  );\n\n  const rightMapPadding = useMemo(\n    () => ({\n      right: mode === 'split-screen' ? width / 2 : 0,\n      top: 0,\n      left: 0,\n      bottom: 0,\n    }),\n    [width, mode]\n  );\n\n  const handleChangeMode = (event: React.MouseEvent<HTMLElement>, newMode: ModeProps | null) => {\n    if (newMode !== null) {\n      setMode(newMode);\n    }\n  };\n\n  return (\n    <>\n      <Map\n        id=\"left-map\"\n        {...viewState}\n        padding={leftMapPadding}\n        onMoveStart={onLeftMoveStart}\n        onMove={(event) => {\n          if (activeMap === 'left') {\n            onMove(event);\n          }\n        }}\n        style={LeftMapStyle}\n        mapStyle=\"mapbox://styles/mapbox/light-v10\"\n        {...other}\n      />\n\n      <Map\n        id=\"right-map\"\n        {...viewState}\n        padding={rightMapPadding}\n        onMoveStart={onRightMoveStart}\n        onMove={(event) => {\n          if (activeMap === 'right') {\n            onMove(event);\n          }\n        }}\n        style={RightMapStyle}\n        mapStyle=\"mapbox://styles/mapbox/dark-v10\"\n        {...other}\n      />\n\n      <ControlPanel mode={mode} onModeChange={handleChangeMode} />\n    </>\n  );\n}\n\nexport default memo(MapSideBySide);\n","import { memo } from 'react';\n// @mui\nimport Radio from '@mui/material/Radio';\nimport Typography from '@mui/material/Typography';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n// components\nimport { StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  themes: {\n    [key: string]: string;\n  };\n  selectTheme: string;\n  onChangeTheme: (theme: string) => void;\n};\n\nfunction ControlPanel({ themes, selectTheme, onChangeTheme }: Props) {\n  return (\n    <StyledControlPanel>\n      <Typography gutterBottom variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n        Select Theme:\n      </Typography>\n\n      <RadioGroup value={selectTheme} onChange={(event, newValue) => onChangeTheme(newValue)}>\n        {Object.keys(themes).map((item) => (\n          <FormControlLabel\n            key={item}\n            value={item}\n            control={<Radio size=\"small\" />}\n            label={item}\n            sx={{ color: 'common.white', textTransform: 'capitalize' }}\n          />\n        ))}\n      </RadioGroup>\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import { useState, useCallback, memo } from 'react';\nimport Map from 'react-map-gl';\n// components\nimport { MapControl, MapBoxProps } from 'src/components/map';\n//\nimport ControlPanel from './control-panel';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends MapBoxProps {\n  themes: {\n    [key: string]: string;\n  };\n}\n\nfunction MapChangeTheme({ themes, ...other }: Props) {\n  const [selectTheme, setSelectTheme] = useState('outdoors');\n\n  const handleChangeTheme = useCallback((value: string) => setSelectTheme(value), []);\n\n  return (\n    <>\n      <Map\n        initialViewState={{\n          latitude: 37.785164,\n          longitude: -100,\n          zoom: 3.5,\n          bearing: 0,\n          pitch: 0,\n        }}\n        mapStyle={themes?.[selectTheme]}\n        {...other}\n      >\n        <MapControl />\n      </Map>\n\n      <ControlPanel themes={themes} selectTheme={selectTheme} onChangeTheme={handleChangeTheme} />\n    </>\n  );\n}\n\nexport default memo(MapChangeTheme);\n","import { useState, memo } from 'react';\nimport Map from 'react-map-gl';\n// @mui\nimport Box from '@mui/material/Box';\nimport Typography from '@mui/material/Typography';\n// components\nimport Image from 'src/components/image';\nimport { MapPopup, MapMarker, MapControl, MapBoxProps } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\ntype CountryProps = {\n  name: string;\n  capital: string;\n  latlng: number[];\n  photoUrl: string;\n  timezones: string[];\n  country_code: string;\n};\n\ninterface Props extends MapBoxProps {\n  data: CountryProps[];\n}\n\nfunction MapMarkersPopups({ data, ...other }: Props) {\n  const [popupInfo, setPopupInfo] = useState<CountryProps | null>(null);\n\n  return (\n    <Map\n      initialViewState={{\n        zoom: 2,\n      }}\n      {...other}\n    >\n      <MapControl />\n\n      {data.map((city, index) => (\n        <MapMarker\n          key={`marker-${index}`}\n          latitude={city.latlng[0]}\n          longitude={city.latlng[1]}\n          onClick={(event) => {\n            event.originalEvent.stopPropagation();\n            setPopupInfo(city);\n          }}\n        />\n      ))}\n\n      {popupInfo && (\n        <MapPopup\n          latitude={popupInfo.latlng[0]}\n          longitude={popupInfo.latlng[1]}\n          onClose={() => setPopupInfo(null)}\n        >\n          <Box sx={{ color: 'common.white' }}>\n            <Box\n              sx={{\n                mb: 1,\n                display: 'flex',\n                alignItems: 'center',\n              }}\n            >\n              <Box\n                sx={{\n                  height: '18px',\n                  minWidth: '28px',\n                  marginRight: '8px',\n                  borderRadius: '4px',\n                  backgroundSize: 'cover',\n                  backgroundPosition: 'center',\n                  backgroundRepeat: 'no-repeat',\n                  backgroundImage: `url(https://cdn.staticaly.com/gh/hjnilsson/country-flags/master/svg/${popupInfo.country_code.toLowerCase()}.svg)`,\n                }}\n              />\n              <Typography variant=\"subtitle2\">{popupInfo.name}</Typography>\n            </Box>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Timezones: {popupInfo.timezones}\n            </Typography>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Lat: {popupInfo.latlng[0]}\n            </Typography>\n\n            <Typography component=\"div\" variant=\"caption\">\n              Long: {popupInfo.latlng[1]}\n            </Typography>\n\n            <Image\n              alt={popupInfo.name}\n              src={popupInfo.photoUrl}\n              ratio=\"4/3\"\n              sx={{ mt: 1, borderRadius: 1 }}\n            />\n          </Box>\n        </MapPopup>\n      )}\n    </Map>\n  );\n}\n\nexport default memo(MapMarkersPopups);\n","import { memo } from 'react';\nimport { LngLat } from 'react-map-gl';\n// @mui\nimport Typography from '@mui/material/Typography';\n// components\nimport { StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nconst EVENT_NAMES = ['onDragStart', 'onDrag', 'onDragEnd'] as const;\n\nfunction round5(value: number) {\n  return (Math.round(value * 1e5) / 1e5).toFixed(5);\n}\n\n// ----------------------------------------------------------------------\n\ntype Props = {\n  events: Record<string, LngLat>;\n};\n\nfunction ControlPanel({ events = {} }: Props) {\n  return (\n    <StyledControlPanel>\n      {EVENT_NAMES.map((event) => {\n        const lngLat = events[event];\n\n        return (\n          <div key={event}>\n            <Typography variant=\"subtitle2\" sx={{ color: 'common.white' }}>\n              {event}:\n            </Typography>\n\n            {lngLat ? (\n              <Typography variant=\"subtitle2\" sx={{ color: 'primary.main' }}>\n                {`${round5(lngLat.lng)}, ${round5(lngLat.lat)}`}\n              </Typography>\n            ) : (\n              <Typography variant=\"body2\" component=\"em\" sx={{ color: 'error.main' }}>\n                null\n              </Typography>\n            )}\n          </div>\n        );\n      })}\n    </StyledControlPanel>\n  );\n}\nexport default memo(ControlPanel);\n","import { useState, useCallback, memo } from 'react';\nimport Map, { MarkerDragEvent, LngLat } from 'react-map-gl';\n// components\nimport { MapMarker, MapControl, MapBoxProps } from 'src/components/map';\n//\nimport ControlPanel from './control-panel';\n\n// ----------------------------------------------------------------------\n\nfunction MapDraggableMarkers({ ...other }: MapBoxProps) {\n  const [marker, setMarker] = useState({\n    latitude: 40,\n    longitude: -100,\n  });\n\n  const [events, logEvents] = useState<Record<string, LngLat>>({});\n\n  const onMarkerDragStart = useCallback((event: MarkerDragEvent) => {\n    logEvents((_events) => ({ ..._events, onDragStart: event.lngLat }));\n  }, []);\n\n  const onMarkerDrag = useCallback((event: MarkerDragEvent) => {\n    logEvents((_events) => ({ ..._events, onDrag: event.lngLat }));\n\n    setMarker({\n      longitude: event.lngLat.lng,\n      latitude: event.lngLat.lat,\n    });\n  }, []);\n\n  const onMarkerDragEnd = useCallback((event: MarkerDragEvent) => {\n    logEvents((_events) => ({ ..._events, onDragEnd: event.lngLat }));\n  }, []);\n\n  return (\n    <>\n      <Map initialViewState={{ latitude: 40, longitude: -100, zoom: 3.5 }} {...other}>\n        <MapControl />\n\n        <MapMarker\n          longitude={marker.longitude}\n          latitude={marker.latitude}\n          anchor=\"bottom\"\n          draggable\n          onDragStart={onMarkerDragStart}\n          onDrag={onMarkerDrag}\n          onDragEnd={onMarkerDragEnd}\n        />\n      </Map>\n\n      <ControlPanel events={events} />\n    </>\n  );\n}\n\nexport default memo(MapDraggableMarkers);\n","import { memo } from 'react';\n// @mui\nimport Radio from '@mui/material/Radio';\nimport RadioGroup from '@mui/material/RadioGroup';\nimport FormControlLabel from '@mui/material/FormControlLabel';\n// components\nimport { StyledControlPanel } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nexport type CityProps = {\n  city: string;\n  population: string;\n  photoUrl: string;\n  state: string;\n  latitude: number;\n  longitude: number;\n};\n\ntype Props = {\n  data: CityProps[];\n  selectedCity: string;\n  onSelectCity: (event: React.ChangeEvent<HTMLInputElement>, city: CityProps) => void;\n};\n\nfunction ControlPanel({ data, selectedCity, onSelectCity }: Props) {\n  return (\n    <StyledControlPanel>\n      {data.map((city) => (\n        <RadioGroup\n          key={city.city}\n          value={selectedCity}\n          onChange={(event) => onSelectCity(event, city)}\n        >\n          <FormControlLabel\n            value={city.city}\n            label={city.city}\n            control={<Radio size=\"small\" />}\n            sx={{ color: 'common.white' }}\n          />\n        </RadioGroup>\n      ))}\n    </StyledControlPanel>\n  );\n}\n\nexport default memo(ControlPanel);\n","import { useRef, useState, useCallback, memo } from 'react';\nimport Map, { MapRef } from 'react-map-gl';\n// components\nimport { MapControl, MapBoxProps } from 'src/components/map';\n//\nimport ControlPanel, { CityProps } from './control-panel';\n\n// ----------------------------------------------------------------------\n\ninterface Props extends MapBoxProps {\n  data: CityProps[];\n}\n\nfunction MapViewportAnimation({ data, ...other }: Props) {\n  const mapRef = useRef<MapRef>(null);\n\n  const [selectedCity, setSelectedCity] = useState(data[2].city);\n\n  const onSelectCity = useCallback(\n    (\n      event: React.ChangeEvent<HTMLInputElement>,\n      { longitude, latitude }: { longitude: number; latitude: number }\n    ) => {\n      setSelectedCity(event.target.value);\n      mapRef.current?.flyTo({ center: [longitude, latitude], duration: 2000 });\n    },\n    []\n  );\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 37.7751,\n        longitude: -122.4193,\n        zoom: 11,\n        bearing: 0,\n        pitch: 0,\n      }}\n      ref={mapRef}\n      {...other}\n    >\n      <MapControl />\n\n      <ControlPanel data={data} selectedCity={selectedCity} onSelectCity={onSelectCity} />\n    </Map>\n  );\n}\n\nexport default memo(MapViewportAnimation);\n","import { useState, useEffect, memo } from 'react';\nimport Map, { Layer, LayerProps, Source } from 'react-map-gl';\n// @mui\nimport { useTheme } from '@mui/material/styles';\n// components\nimport { MapControl, MapBoxProps } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nfunction MapGeoJSONAnimation({ ...other }: MapBoxProps) {\n  const theme = useTheme();\n\n  const pointLayer: LayerProps = {\n    id: 'point',\n    type: 'circle',\n    paint: {\n      'circle-radius': 10,\n      'circle-color': theme.palette.error.main,\n    },\n  };\n\n  const [pointData, setPointData] = useState<\n    | {\n        type: string;\n        coordinates: number[];\n      }\n    | any\n  >(null);\n\n  useEffect(() => {\n    const animation = window.requestAnimationFrame(() =>\n      setPointData(\n        pointOnCircle({\n          center: [-100, 0],\n          angle: Date.now() / 1000,\n          radius: 20,\n        })\n      )\n    );\n\n    return () => window.cancelAnimationFrame(animation);\n  });\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 0,\n        longitude: -100,\n        zoom: 3,\n      }}\n      mapStyle=\"mapbox://styles/mapbox/satellite-streets-v11\"\n      {...other}\n    >\n      <MapControl />\n\n      {pointData && (\n        <Source type=\"geojson\" data={pointData}>\n          <Layer {...pointLayer} />\n        </Source>\n      )}\n    </Map>\n  );\n}\n\nexport default memo(MapGeoJSONAnimation);\n\n// ----------------------------------------------------------------------\n\nfunction pointOnCircle({\n  center,\n  angle,\n  radius,\n}: {\n  center: [number, number];\n  angle: number;\n  radius: number;\n}) {\n  return {\n    type: 'Point',\n    coordinates: [center[0] + Math.cos(angle) * radius, center[1] + Math.sin(angle) * radius],\n  };\n}\n","import { useState, useCallback, useMemo, memo } from 'react';\nimport Map, { Layer, Source, FillLayer, MapLayerMouseEvent } from 'react-map-gl';\n// @mui\nimport { useTheme } from '@mui/material/styles';\nimport Typography from '@mui/material/Typography';\n// components\nimport { MapPopup, MapControl, MapBoxProps } from 'src/components/map';\n\n// ----------------------------------------------------------------------\n\nfunction MapHighlightByFilter({ ...other }: MapBoxProps) {\n  const theme = useTheme();\n\n  const countiesLayer: Omit<FillLayer, 'source'> = {\n    id: 'counties',\n    type: 'fill',\n    'source-layer': 'original',\n    paint: {\n      'fill-outline-color': theme.palette.grey[900],\n      'fill-color': theme.palette.grey[900],\n      'fill-opacity': 0.12,\n    },\n  };\n\n  const highlightLayer: FillLayer = {\n    id: 'counties-highlighted',\n    type: 'fill',\n    source: 'counties',\n    'source-layer': 'original',\n    paint: {\n      'fill-outline-color': theme.palette.error.main,\n      'fill-color': theme.palette.error.main,\n      'fill-opacity': 0.48,\n    },\n  };\n\n  const [hoverInfo, setHoverInfo] = useState<{\n    countyName: string;\n    longitude: number;\n    latitude: number;\n  } | null>(null);\n\n  const onHover = useCallback((event: MapLayerMouseEvent) => {\n    const county = event.features && event.features[0];\n\n    setHoverInfo({\n      longitude: event.lngLat.lng,\n      latitude: event.lngLat.lat,\n      countyName: county && county.properties?.COUNTY,\n    });\n  }, []);\n\n  const selectedCounty = (hoverInfo && hoverInfo.countyName) || '';\n\n  const filter: any = useMemo(() => ['in', 'COUNTY', selectedCounty], [selectedCounty]);\n\n  return (\n    <Map\n      initialViewState={{\n        latitude: 38.88,\n        longitude: -98,\n        zoom: 3,\n      }}\n      minZoom={2}\n      onMouseMove={onHover}\n      interactiveLayerIds={['counties']}\n      {...other}\n    >\n      <MapControl />\n\n      <Source type=\"vector\" url=\"mapbox://mapbox.82pkq93d\">\n        <Layer beforeId=\"waterway-label\" {...countiesLayer} />\n        <Layer beforeId=\"waterway-label\" {...highlightLayer} filter={filter} />\n      </Source>\n\n      {selectedCounty && hoverInfo && (\n        <MapPopup longitude={hoverInfo.longitude} latitude={hoverInfo.latitude} closeButton={false}>\n          <Typography variant=\"body2\" sx={{ color: 'common.white' }}>\n            {selectedCounty}\n          </Typography>\n        </MapPopup>\n      )}\n    </Map>\n  );\n}\n\nexport default memo(MapHighlightByFilter);\n","import 'src/utils/mapboxgl';\n// @mui\nimport { styled } from '@mui/material/styles';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport Stack from '@mui/material/Stack';\nimport Container from '@mui/material/Container';\nimport CardHeader from '@mui/material/CardHeader';\nimport CardContent from '@mui/material/CardContent';\n// routes\nimport { paths } from 'src/routes/paths';\n// config\nimport { MAPBOX_API } from 'src/config-global';\n// _mock\nimport { cities as CITIES } from 'src/_mock/map/cities';\nimport { countries as COUNTRIES } from 'src/_mock/map/countries';\n// components\nimport CustomBreadcrumbs from 'src/components/custom-breadcrumbs';\n//\nimport MapHeatmap from './heatmap';\nimport MapClusters from './clusters';\nimport MapInteraction from './interaction';\nimport MapSideBySide from './side-by-side';\nimport MapChangeTheme from './change-theme';\nimport MapMarkersPopups from './map-markers-popups';\nimport MapDraggableMarkers from './draggable-markers';\nimport MapViewportAnimation from './viewport-animation';\nimport MapGeoJSONAnimation from './map-geo-json-animation';\nimport MapHighlightByFilter from './map-highlight-by-filter';\n\n// ----------------------------------------------------------------------\n\nconst THEMES = {\n  streets: 'mapbox://styles/mapbox/streets-v11',\n  outdoors: 'mapbox://styles/mapbox/outdoors-v11',\n  light: 'mapbox://styles/mapbox/light-v10',\n  dark: 'mapbox://styles/mapbox/dark-v10',\n  satellite: 'mapbox://styles/mapbox/satellite-v9',\n  satelliteStreets: 'mapbox://styles/mapbox/satellite-streets-v11',\n};\n\nconst baseSettings = {\n  mapboxAccessToken: MAPBOX_API,\n  minZoom: 1,\n};\n\nconst StyledMapContainer = styled('div')(({ theme }) => ({\n  zIndex: 0,\n  height: 560,\n  overflow: 'hidden',\n  position: 'relative',\n  borderRadius: theme.shape.borderRadius,\n  '& .mapboxgl-ctrl-logo, .mapboxgl-ctrl-bottom-right': {\n    display: 'none',\n  },\n}));\n\n// ----------------------------------------------------------------------\n\nexport default function MapView() {\n  return (\n    <>\n      <Box\n        sx={{\n          py: 5,\n          bgcolor: (theme) => (theme.palette.mode === 'light' ? 'grey.200' : 'grey.800'),\n        }}\n      >\n        <Container>\n          <CustomBreadcrumbs\n            heading=\"Map\"\n            links={[\n              {\n                name: 'Components',\n                href: paths.components,\n              },\n              { name: 'Map' },\n            ]}\n            moreLink={[\n              'http://visgl.github.io/react-map-gl',\n              'http://visgl.github.io/react-map-gl/examples',\n            ]}\n          />\n        </Container>\n      </Box>\n\n      <Container sx={{ my: 10 }}>\n        <Stack spacing={5}>\n          <Card>\n            <CardHeader title=\"Change Theme\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapChangeTheme {...baseSettings} themes={THEMES} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Markers & Popups\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapMarkersPopups {...baseSettings} data={COUNTRIES} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Draggable Markers\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapDraggableMarkers {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Geojson Animation\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapGeoJSONAnimation {...baseSettings} mapStyle={THEMES.satelliteStreets} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Clusters\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapClusters {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Interaction\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapInteraction {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Viewport Animation\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapViewportAnimation\n                  {...baseSettings}\n                  data={CITIES.filter((city) => city.state === 'Texas')}\n                  mapStyle={THEMES.light}\n                />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Highlight By Filter\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapHighlightByFilter {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Heatmap\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapHeatmap {...baseSettings} mapStyle={THEMES.light} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n\n          <Card>\n            <CardHeader title=\"Side By Side\" />\n            <CardContent>\n              <StyledMapContainer>\n                <MapSideBySide {...baseSettings} />\n              </StyledMapContainer>\n            </CardContent>\n          </Card>\n        </Stack>\n      </Container>\n    </>\n  );\n}\n","import { Helmet } from 'react-helmet-async';\n// sections\nimport MapView from 'src/sections/_examples/extra/map-view';\n\n// ----------------------------------------------------------------------\n\nexport default function MapPage() {\n  return (\n    <>\n      <Helmet>\n        <title> Extra: Map</title>\n      </Helmet>\n\n      <MapView />\n    </>\n  );\n}\n","import mapboxgl from 'mapbox-gl';\n\n// @ts-ignore\n// eslint-disable-next-line\nmapboxgl.workerClass = require('worker-loader!mapbox-gl/dist/mapbox-gl-csp-worker')?.default;\n"],"names":["BreadcrumbsLink","_ref","link","activeLast","disabled","name","href","icon","styles","_objectSpread","typography","alignItems","color","display","cursor","pointerEvents","renderContent","_jsxs","_Fragment","children","_jsx","Box","component","sx","mr","width","height","Link","RouterLink","CustomBreadcrumbs","links","action","heading","moreLink","other","_objectWithoutProperties","_excluded","lastLink","length","Stack","direction","flexGrow","Typography","variant","gutterBottom","Breadcrumbs","separator","Separator","map","LinkItem","flexShrink","mt","target","rel","borderRadius","bgcolor","getRatio","arguments","undefined","forwardRef","ref","ratio","overlay","_ref$disabledEffect","disabledEffect","alt","src","afterLoad","delayTime","threshold","beforeLoad","delayMethod","placeholder","wrapperProps","scrollPosition","_ref$effect","effect","visibleByDefault","wrapperClassName","useIntersectionObserver","theme","useTheme","overlayStyles","content","top","left","zIndex","position","background","alpha","palette","grey","LazyLoadImage","placeholderSrc","objectFit","verticalAlign","className","overflow","backgroundSize","pt","StyledMapControls","GlobalStyles","boxShadow","customShadows","z8","transform","borderTop","concat","divider","border","lineHeight","common","white","fontWeight","fontWeightBold","backgroundImage","StyledPopup","styled","Popup","isRTL","maxWidth","padding","spacing","z20","shape","backgroundColor","fontSize","opacity","right","outline","marginBottom","borderBottomColor","marginLeft","borderLeftColor","marginTop","borderTopColor","marginRight","borderRightColor","StyledControlPanel","_ref2","bgBlur","minWidth","MapPopup","anchor","SIZE","ICON","MapMarker","Object","assign","_objectDestructuringEmpty","Marker","viewBox","stroke","fill","error","main","d","MapControl","hideScaleControl","hideGeolocateControl","hideFullscreenControl","hideNavigationnControl","GeolocateControl","positionOptions","enableHighAccuracy","FullscreenControl","ScaleControl","NavigationControl","cities","city","population","photoUrl","state","latitude","longitude","countries","timezones","latlng","country_code","capital","_mock","image","cover","ControlPanel","startTime","endTime","allDays","selectedTime","onChangeTime","onChangeAllDays","day","days","Math","round","selectedDay","justifyContent","Switch","size","checked","onChange","event","fDate","Slider","min","step","max","value","newValue","memo","heatmapLayer","id","maxzoom","type","paint","MapHeatmap","_useState","useState","_useState2","_slicedToArray","useAllDays","_useState3","_useState4","timeRange","setTimeRange","_useState5","_useState6","selectTime","_useState7","_useState8","earthquakes","setEarthQuakes","useEffect","fetch","then","resp","json","features","properties","time","catch","console","data","useMemo","featureCollection","date","Date","year","getFullYear","month","getMonth","getDate","filter","feature","_feature$properties","featureDate","filterFeaturesByDay","Map","initialViewState","zoom","Source","Layer","clusterLayer","source","clusterCountLayer","layout","unclusteredPointLayer","MapClusters","mapRef","useRef","interactiveLayerIds","onClick","_event$features","_mapRef$current","clusterId","cluster_id","current","getSource","getClusterExpansionZoom","_mapRef$current2","geometry","easeTo","center","coordinates","Number","isNaN","duration","cluster","clusterMaxZoom","clusterRadius","StyledRow","textTransform","camelPattern","formatSettingName","_name$match","match","join","settings","keys","InputBase","inputProps","py","textAlign","renderSetting","MapInteraction","minZoom","maxZoom","minPitch","maxPitch","dragPan","boxZoom","keyboard","touchZoom","dragRotate","scrollZoom","touchPitch","touchRotate","doubleClickZoom","touchZoomRotate","setSettings","updateSettings","useCallback","prevSettings","_defineProperty","bearing","pitch","mode","onModeChange","ToggleButtonGroup","exclusive","ToggleButton","LeftMapStyle","RightMapStyle","MapSideBySide","viewState","setViewState","setMode","activeMap","setActiveMap","onLeftMoveStart","onRightMoveStart","onMove","window","innerWidth","leftMapPadding","bottom","rightMapPadding","onMoveStart","style","mapStyle","newMode","themes","selectTheme","onChangeTheme","RadioGroup","item","FormControlLabel","control","Radio","label","MapChangeTheme","setSelectTheme","handleChangeTheme","MapMarkersPopups","popupInfo","setPopupInfo","index","originalEvent","stopPropagation","onClose","mb","backgroundPosition","backgroundRepeat","toLowerCase","Image","EVENT_NAMES","round5","toFixed","_ref$events","events","lngLat","lng","lat","MapDraggableMarkers","marker","setMarker","logEvents","onMarkerDragStart","_events","onDragStart","onMarkerDrag","onDrag","onMarkerDragEnd","onDragEnd","draggable","selectedCity","onSelectCity","MapViewportAnimation","setSelectedCity","flyTo","MapGeoJSONAnimation","pointLayer","pointData","setPointData","animation","requestAnimationFrame","angle","radius","cos","sin","pointOnCircle","now","cancelAnimationFrame","MapHighlightByFilter","countiesLayer","highlightLayer","hoverInfo","setHoverInfo","onHover","_county$properties","county","countyName","COUNTY","selectedCounty","onMouseMove","url","beforeId","closeButton","THEMES","streets","outdoors","light","dark","satellite","satelliteStreets","baseSettings","mapboxAccessToken","MAPBOX_API","StyledMapContainer","MapView","Container","paths","components","my","Card","CardHeader","title","CardContent","COUNTRIES","CITIES","MapPage","Helmet","mapboxgl","_require","require","default"],"sourceRoot":""}