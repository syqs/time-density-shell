{"version":3,"file":"static/js/3714.fa9fd72e.chunk.js","mappings":"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","sources":["../node_modules/@babel/runtime/helpers/esm/get.js","../node_modules/@babel/runtime/helpers/esm/superPropBase.js","../node_modules/framer-motion/dist/es/motion/features/Feature.mjs","../node_modules/framer-motion/dist/es/events/utils/is-primary-pointer.mjs","../node_modules/framer-motion/dist/es/events/event-info.mjs","../node_modules/framer-motion/dist/es/events/add-dom-event.mjs","../node_modules/framer-motion/dist/es/events/add-pointer-event.mjs","../node_modules/framer-motion/dist/es/utils/distance.mjs","../node_modules/framer-motion/dist/es/gestures/pan/PanSession.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/lock.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-calc.mjs","../node_modules/framer-motion/dist/es/gestures/drag/utils/constraints.mjs","../node_modules/framer-motion/dist/es/projection/geometry/models.mjs","../node_modules/framer-motion/dist/es/projection/utils/each-axis.mjs","../node_modules/framer-motion/dist/es/projection/geometry/conversion.mjs","../node_modules/framer-motion/dist/es/projection/utils/has-transform.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-apply.mjs","../node_modules/framer-motion/dist/es/projection/utils/measure.mjs","../node_modules/framer-motion/dist/es/utils/use-instant-transition-state.mjs","../node_modules/framer-motion/dist/es/easing/utils/is-bezier-definition.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/easing.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/supports.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/create-accelerated-animation.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/index.mjs","../node_modules/framer-motion/dist/es/animation/animators/waapi/utils/get-final-keyframe.mjs","../node_modules/framer-motion/dist/es/animation/utils/default-transitions.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-animatable.mjs","../node_modules/framer-motion/dist/es/value/types/complex/filter.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/defaults.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/animatable-none.mjs","../node_modules/framer-motion/dist/es/utils/is-zero-value-string.mjs","../node_modules/framer-motion/dist/es/animation/utils/is-none.mjs","../node_modules/framer-motion/dist/es/animation/utils/transitions.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/motion-value.mjs","../node_modules/framer-motion/dist/es/animation/utils/keyframes.mjs","../node_modules/framer-motion/dist/es/animation/animators/instant.mjs","../node_modules/framer-motion/dist/es/gestures/drag/VisualElementDragControls.mjs","../node_modules/framer-motion/dist/es/gestures/drag/index.mjs","../node_modules/framer-motion/dist/es/gestures/pan/index.mjs","../node_modules/framer-motion/dist/es/projection/node/state.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-border-radius.mjs","../node_modules/framer-motion/dist/es/projection/styles/scale-box-shadow.mjs","../node_modules/framer-motion/dist/es/motion/features/layout/MeasureLayout.mjs","../node_modules/framer-motion/dist/es/components/AnimatePresence/use-presence.mjs","../node_modules/framer-motion/dist/es/projection/animation/mix-values.mjs","../node_modules/framer-motion/dist/es/projection/geometry/copy.mjs","../node_modules/framer-motion/dist/es/projection/geometry/delta-remove.mjs","../node_modules/framer-motion/dist/es/projection/geometry/utils.mjs","../node_modules/framer-motion/dist/es/projection/shared/stack.mjs","../node_modules/framer-motion/dist/es/projection/styles/transform.mjs","../node_modules/framer-motion/dist/es/render/utils/compare-by-depth.mjs","../node_modules/framer-motion/dist/es/render/utils/flat-tree.mjs","../node_modules/framer-motion/dist/es/projection/node/create-projection-node.mjs","../node_modules/framer-motion/dist/es/debug/record.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/is-svg-element.mjs","../node_modules/framer-motion/dist/es/utils/delay.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/single-value.mjs","../node_modules/framer-motion/dist/es/projection/node/DocumentProjectionNode.mjs","../node_modules/framer-motion/dist/es/projection/node/HTMLProjectionNode.mjs","../node_modules/framer-motion/dist/es/motion/features/drag.mjs","../node_modules/framer-motion/dist/es/motion/features/layout.mjs","../node_modules/framer-motion/dist/es/utils/shallow-compare.mjs","../node_modules/framer-motion/dist/es/render/utils/resolve-dynamic-variants.mjs","../node_modules/framer-motion/dist/es/animation/optimized-appear/data-id.mjs","../node_modules/framer-motion/dist/es/value/use-will-change/is.mjs","../node_modules/framer-motion/dist/es/utils/is-numerical-string.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/test.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/dimensions.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/type-auto.mjs","../node_modules/framer-motion/dist/es/render/dom/value-types/find.mjs","../node_modules/framer-motion/dist/es/render/utils/setters.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-target.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element-variant.mjs","../node_modules/framer-motion/dist/es/render/utils/animation-state.mjs","../node_modules/framer-motion/dist/es/animation/interfaces/visual-element.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/index.mjs","../node_modules/framer-motion/dist/es/motion/features/animation/exit.mjs","../node_modules/framer-motion/dist/es/motion/features/animations.mjs","../node_modules/framer-motion/dist/es/gestures/hover.mjs","../node_modules/framer-motion/dist/es/gestures/focus.mjs","../node_modules/framer-motion/dist/es/gestures/utils/is-node-or-child.mjs","../node_modules/framer-motion/dist/es/gestures/press.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/observers.mjs","../node_modules/framer-motion/dist/es/motion/features/viewport/index.mjs","../node_modules/framer-motion/dist/es/motion/features/gestures.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/css-variables-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/unit-conversion.mjs","../node_modules/framer-motion/dist/es/render/dom/utils/parse-dom-variant.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/state.mjs","../node_modules/framer-motion/dist/es/render/store.mjs","../node_modules/framer-motion/dist/es/render/VisualElement.mjs","../node_modules/framer-motion/dist/es/utils/reduced-motion/index.mjs","../node_modules/framer-motion/dist/es/render/utils/motion-values.mjs","../node_modules/framer-motion/dist/es/render/dom/DOMVisualElement.mjs","../node_modules/framer-motion/dist/es/render/html/HTMLVisualElement.mjs","../node_modules/framer-motion/dist/es/render/svg/SVGVisualElement.mjs","../node_modules/framer-motion/dist/es/render/dom/features-animation.mjs","../node_modules/framer-motion/dist/es/render/dom/create-visual-element.mjs","../node_modules/framer-motion/dist/es/render/dom/features-max.mjs"],"sourcesContent":["import superPropBase from \"./superPropBase.js\";\nexport default function _get() {\n  if (typeof Reflect !== \"undefined\" && Reflect.get) {\n    _get = Reflect.get.bind();\n  } else {\n    _get = function _get(target, property, receiver) {\n      var base = superPropBase(target, property);\n      if (!base) return;\n      var desc = Object.getOwnPropertyDescriptor(base, property);\n      if (desc.get) {\n        return desc.get.call(arguments.length < 3 ? target : receiver);\n      }\n      return desc.value;\n    };\n  }\n  return _get.apply(this, arguments);\n}","import getPrototypeOf from \"./getPrototypeOf.js\";\nexport default function _superPropBase(object, property) {\n  while (!Object.prototype.hasOwnProperty.call(object, property)) {\n    object = getPrototypeOf(object);\n    if (object === null) break;\n  }\n  return object;\n}","class Feature {\n    constructor(node) {\n        this.isMounted = false;\n        this.node = node;\n    }\n    update() { }\n}\n\nexport { Feature };\n","const isPrimaryPointer = (event) => {\n    if (event.pointerType === \"mouse\") {\n        return typeof event.button !== \"number\" || event.button <= 0;\n    }\n    else {\n        /**\n         * isPrimary is true for all mice buttons, whereas every touch point\n         * is regarded as its own input. So subsequent concurrent touch points\n         * will be false.\n         *\n         * Specifically match against false here as incomplete versions of\n         * PointerEvents in very old browser might have it set as undefined.\n         */\n        return event.isPrimary !== false;\n    }\n};\n\nexport { isPrimaryPointer };\n","import { isPrimaryPointer } from './utils/is-primary-pointer.mjs';\n\nfunction extractEventInfo(event, pointType = \"page\") {\n    return {\n        point: {\n            x: event[pointType + \"X\"],\n            y: event[pointType + \"Y\"],\n        },\n    };\n}\nconst addPointerInfo = (handler) => {\n    return (event) => isPrimaryPointer(event) && handler(event, extractEventInfo(event));\n};\n\nexport { addPointerInfo, extractEventInfo };\n","function addDomEvent(target, eventName, handler, options = { passive: true }) {\n    target.addEventListener(eventName, handler, options);\n    return () => target.removeEventListener(eventName, handler);\n}\n\nexport { addDomEvent };\n","import { addDomEvent } from './add-dom-event.mjs';\nimport { addPointerInfo } from './event-info.mjs';\n\nfunction addPointerEvent(target, eventName, handler, options) {\n    return addDomEvent(target, eventName, addPointerInfo(handler), options);\n}\n\nexport { addPointerEvent };\n","const distance = (a, b) => Math.abs(a - b);\nfunction distance2D(a, b) {\n    // Multi-dimensional\n    const xDelta = distance(a.x, b.x);\n    const yDelta = distance(a.y, b.y);\n    return Math.sqrt(xDelta ** 2 + yDelta ** 2);\n}\n\nexport { distance, distance2D };\n","import { extractEventInfo } from '../../events/event-info.mjs';\nimport { frame, cancelFrame } from '../../frameloop/index.mjs';\nimport { secondsToMilliseconds, millisecondsToSeconds } from '../../utils/time-conversion.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { pipe } from '../../utils/pipe.mjs';\nimport { distance2D } from '../../utils/distance.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\nimport { isPrimaryPointer } from '../../events/utils/is-primary-pointer.mjs';\n\n/**\n * @internal\n */\nclass PanSession {\n    constructor(event, handlers, { transformPagePoint } = {}) {\n        /**\n         * @internal\n         */\n        this.startEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEvent = null;\n        /**\n         * @internal\n         */\n        this.lastMoveEventInfo = null;\n        /**\n         * @internal\n         */\n        this.handlers = {};\n        this.updatePoint = () => {\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const info = getPanInfo(this.lastMoveEventInfo, this.history);\n            const isPanStarted = this.startEvent !== null;\n            // Only start panning if the offset is larger than 3 pixels. If we make it\n            // any larger than this we'll want to reset the pointer history\n            // on the first update to avoid visual snapping to the cursoe.\n            const isDistancePastThreshold = distance2D(info.offset, { x: 0, y: 0 }) >= 3;\n            if (!isPanStarted && !isDistancePastThreshold)\n                return;\n            const { point } = info;\n            const { timestamp } = frameData;\n            this.history.push({ ...point, timestamp });\n            const { onStart, onMove } = this.handlers;\n            if (!isPanStarted) {\n                onStart && onStart(this.lastMoveEvent, info);\n                this.startEvent = this.lastMoveEvent;\n            }\n            onMove && onMove(this.lastMoveEvent, info);\n        };\n        this.handlePointerMove = (event, info) => {\n            this.lastMoveEvent = event;\n            this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\n            // Throttle mouse move event to once per frame\n            frame.update(this.updatePoint, true);\n        };\n        this.handlePointerUp = (event, info) => {\n            this.end();\n            if (!(this.lastMoveEvent && this.lastMoveEventInfo))\n                return;\n            const { onEnd, onSessionEnd } = this.handlers;\n            const panInfo = getPanInfo(event.type === \"pointercancel\"\n                ? this.lastMoveEventInfo\n                : transformPoint(info, this.transformPagePoint), this.history);\n            if (this.startEvent && onEnd) {\n                onEnd(event, panInfo);\n            }\n            onSessionEnd && onSessionEnd(event, panInfo);\n        };\n        // If we have more than one touch, don't start detecting this gesture\n        if (!isPrimaryPointer(event))\n            return;\n        this.handlers = handlers;\n        this.transformPagePoint = transformPagePoint;\n        const info = extractEventInfo(event);\n        const initialInfo = transformPoint(info, this.transformPagePoint);\n        const { point } = initialInfo;\n        const { timestamp } = frameData;\n        this.history = [{ ...point, timestamp }];\n        const { onSessionStart } = handlers;\n        onSessionStart &&\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\n        this.removeListeners = pipe(addPointerEvent(window, \"pointermove\", this.handlePointerMove), addPointerEvent(window, \"pointerup\", this.handlePointerUp), addPointerEvent(window, \"pointercancel\", this.handlePointerUp));\n    }\n    updateHandlers(handlers) {\n        this.handlers = handlers;\n    }\n    end() {\n        this.removeListeners && this.removeListeners();\n        cancelFrame(this.updatePoint);\n    }\n}\nfunction transformPoint(info, transformPagePoint) {\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\n}\nfunction subtractPoint(a, b) {\n    return { x: a.x - b.x, y: a.y - b.y };\n}\nfunction getPanInfo({ point }, history) {\n    return {\n        point,\n        delta: subtractPoint(point, lastDevicePoint(history)),\n        offset: subtractPoint(point, startDevicePoint(history)),\n        velocity: getVelocity(history, 0.1),\n    };\n}\nfunction startDevicePoint(history) {\n    return history[0];\n}\nfunction lastDevicePoint(history) {\n    return history[history.length - 1];\n}\nfunction getVelocity(history, timeDelta) {\n    if (history.length < 2) {\n        return { x: 0, y: 0 };\n    }\n    let i = history.length - 1;\n    let timestampedPoint = null;\n    const lastPoint = lastDevicePoint(history);\n    while (i >= 0) {\n        timestampedPoint = history[i];\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\n            secondsToMilliseconds(timeDelta)) {\n            break;\n        }\n        i--;\n    }\n    if (!timestampedPoint) {\n        return { x: 0, y: 0 };\n    }\n    const time = millisecondsToSeconds(lastPoint.timestamp - timestampedPoint.timestamp);\n    if (time === 0) {\n        return { x: 0, y: 0 };\n    }\n    const currentVelocity = {\n        x: (lastPoint.x - timestampedPoint.x) / time,\n        y: (lastPoint.y - timestampedPoint.y) / time,\n    };\n    if (currentVelocity.x === Infinity) {\n        currentVelocity.x = 0;\n    }\n    if (currentVelocity.y === Infinity) {\n        currentVelocity.y = 0;\n    }\n    return currentVelocity;\n}\n\nexport { PanSession };\n","function createLock(name) {\n    let lock = null;\n    return () => {\n        const openLock = () => {\n            lock = null;\n        };\n        if (lock === null) {\n            lock = name;\n            return openLock;\n        }\n        return false;\n    };\n}\nconst globalHorizontalLock = createLock(\"dragHorizontal\");\nconst globalVerticalLock = createLock(\"dragVertical\");\nfunction getGlobalLock(drag) {\n    let lock = false;\n    if (drag === \"y\") {\n        lock = globalVerticalLock();\n    }\n    else if (drag === \"x\") {\n        lock = globalHorizontalLock();\n    }\n    else {\n        const openHorizontal = globalHorizontalLock();\n        const openVertical = globalVerticalLock();\n        if (openHorizontal && openVertical) {\n            lock = () => {\n                openHorizontal();\n                openVertical();\n            };\n        }\n        else {\n            // Release the locks because we don't use them\n            if (openHorizontal)\n                openHorizontal();\n            if (openVertical)\n                openVertical();\n        }\n    }\n    return lock;\n}\nfunction isDragActive() {\n    // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n    const openGestureLock = getGlobalLock(true);\n    if (!openGestureLock)\n        return true;\n    openGestureLock();\n    return false;\n}\n\nexport { createLock, getGlobalLock, isDragActive };\n","import { mix } from '../../utils/mix.mjs';\n\nfunction calcLength(axis) {\n    return axis.max - axis.min;\n}\nfunction isNear(value, target = 0, maxDistance = 0.01) {\n    return Math.abs(value - target) <= maxDistance;\n}\nfunction calcAxisDelta(delta, source, target, origin = 0.5) {\n    delta.origin = origin;\n    delta.originPoint = mix(source.min, source.max, delta.origin);\n    delta.scale = calcLength(target) / calcLength(source);\n    if (isNear(delta.scale, 1, 0.0001) || isNaN(delta.scale))\n        delta.scale = 1;\n    delta.translate =\n        mix(target.min, target.max, delta.origin) - delta.originPoint;\n    if (isNear(delta.translate) || isNaN(delta.translate))\n        delta.translate = 0;\n}\nfunction calcBoxDelta(delta, source, target, origin) {\n    calcAxisDelta(delta.x, source.x, target.x, origin ? origin.originX : undefined);\n    calcAxisDelta(delta.y, source.y, target.y, origin ? origin.originY : undefined);\n}\nfunction calcRelativeAxis(target, relative, parent) {\n    target.min = parent.min + relative.min;\n    target.max = target.min + calcLength(relative);\n}\nfunction calcRelativeBox(target, relative, parent) {\n    calcRelativeAxis(target.x, relative.x, parent.x);\n    calcRelativeAxis(target.y, relative.y, parent.y);\n}\nfunction calcRelativeAxisPosition(target, layout, parent) {\n    target.min = layout.min - parent.min;\n    target.max = target.min + calcLength(layout);\n}\nfunction calcRelativePosition(target, layout, parent) {\n    calcRelativeAxisPosition(target.x, layout.x, parent.x);\n    calcRelativeAxisPosition(target.y, layout.y, parent.y);\n}\n\nexport { calcAxisDelta, calcBoxDelta, calcLength, calcRelativeAxis, calcRelativeAxisPosition, calcRelativeBox, calcRelativePosition, isNear };\n","import { progress } from '../../../utils/progress.mjs';\nimport { calcLength } from '../../../projection/geometry/delta-calc.mjs';\nimport { clamp } from '../../../utils/clamp.mjs';\nimport { mix } from '../../../utils/mix.mjs';\n\n/**\n * Apply constraints to a point. These constraints are both physical along an\n * axis, and an elastic factor that determines how much to constrain the point\n * by if it does lie outside the defined parameters.\n */\nfunction applyConstraints(point, { min, max }, elastic) {\n    if (min !== undefined && point < min) {\n        // If we have a min point defined, and this is outside of that, constrain\n        point = elastic ? mix(min, point, elastic.min) : Math.max(point, min);\n    }\n    else if (max !== undefined && point > max) {\n        // If we have a max point defined, and this is outside of that, constrain\n        point = elastic ? mix(max, point, elastic.max) : Math.min(point, max);\n    }\n    return point;\n}\n/**\n * Calculate constraints in terms of the viewport when defined relatively to the\n * measured axis. This is measured from the nearest edge, so a max constraint of 200\n * on an axis with a max value of 300 would return a constraint of 500 - axis length\n */\nfunction calcRelativeAxisConstraints(axis, min, max) {\n    return {\n        min: min !== undefined ? axis.min + min : undefined,\n        max: max !== undefined\n            ? axis.max + max - (axis.max - axis.min)\n            : undefined,\n    };\n}\n/**\n * Calculate constraints in terms of the viewport when\n * defined relatively to the measured bounding box.\n */\nfunction calcRelativeConstraints(layoutBox, { top, left, bottom, right }) {\n    return {\n        x: calcRelativeAxisConstraints(layoutBox.x, left, right),\n        y: calcRelativeAxisConstraints(layoutBox.y, top, bottom),\n    };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative axis\n */\nfunction calcViewportAxisConstraints(layoutAxis, constraintsAxis) {\n    let min = constraintsAxis.min - layoutAxis.min;\n    let max = constraintsAxis.max - layoutAxis.max;\n    // If the constraints axis is actually smaller than the layout axis then we can\n    // flip the constraints\n    if (constraintsAxis.max - constraintsAxis.min <\n        layoutAxis.max - layoutAxis.min) {\n        [min, max] = [max, min];\n    }\n    return { min, max };\n}\n/**\n * Calculate viewport constraints when defined as another viewport-relative box\n */\nfunction calcViewportConstraints(layoutBox, constraintsBox) {\n    return {\n        x: calcViewportAxisConstraints(layoutBox.x, constraintsBox.x),\n        y: calcViewportAxisConstraints(layoutBox.y, constraintsBox.y),\n    };\n}\n/**\n * Calculate a transform origin relative to the source axis, between 0-1, that results\n * in an asthetically pleasing scale/transform needed to project from source to target.\n */\nfunction calcOrigin(source, target) {\n    let origin = 0.5;\n    const sourceLength = calcLength(source);\n    const targetLength = calcLength(target);\n    if (targetLength > sourceLength) {\n        origin = progress(target.min, target.max - sourceLength, source.min);\n    }\n    else if (sourceLength > targetLength) {\n        origin = progress(source.min, source.max - targetLength, target.min);\n    }\n    return clamp(0, 1, origin);\n}\n/**\n * Rebase the calculated viewport constraints relative to the layout.min point.\n */\nfunction rebaseAxisConstraints(layout, constraints) {\n    const relativeConstraints = {};\n    if (constraints.min !== undefined) {\n        relativeConstraints.min = constraints.min - layout.min;\n    }\n    if (constraints.max !== undefined) {\n        relativeConstraints.max = constraints.max - layout.min;\n    }\n    return relativeConstraints;\n}\nconst defaultElastic = 0.35;\n/**\n * Accepts a dragElastic prop and returns resolved elastic values for each axis.\n */\nfunction resolveDragElastic(dragElastic = defaultElastic) {\n    if (dragElastic === false) {\n        dragElastic = 0;\n    }\n    else if (dragElastic === true) {\n        dragElastic = defaultElastic;\n    }\n    return {\n        x: resolveAxisElastic(dragElastic, \"left\", \"right\"),\n        y: resolveAxisElastic(dragElastic, \"top\", \"bottom\"),\n    };\n}\nfunction resolveAxisElastic(dragElastic, minLabel, maxLabel) {\n    return {\n        min: resolvePointElastic(dragElastic, minLabel),\n        max: resolvePointElastic(dragElastic, maxLabel),\n    };\n}\nfunction resolvePointElastic(dragElastic, label) {\n    return typeof dragElastic === \"number\"\n        ? dragElastic\n        : dragElastic[label] || 0;\n}\n\nexport { applyConstraints, calcOrigin, calcRelativeAxisConstraints, calcRelativeConstraints, calcViewportAxisConstraints, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, resolveAxisElastic, resolveDragElastic, resolvePointElastic };\n","const createAxisDelta = () => ({\n    translate: 0,\n    scale: 1,\n    origin: 0,\n    originPoint: 0,\n});\nconst createDelta = () => ({\n    x: createAxisDelta(),\n    y: createAxisDelta(),\n});\nconst createAxis = () => ({ min: 0, max: 0 });\nconst createBox = () => ({\n    x: createAxis(),\n    y: createAxis(),\n});\n\nexport { createAxis, createAxisDelta, createBox, createDelta };\n","function eachAxis(callback) {\n    return [callback(\"x\"), callback(\"y\")];\n}\n\nexport { eachAxis };\n","/**\n * Bounding boxes tend to be defined as top, left, right, bottom. For various operations\n * it's easier to consider each axis individually. This function returns a bounding box\n * as a map of single-axis min/max values.\n */\nfunction convertBoundingBoxToBox({ top, left, right, bottom, }) {\n    return {\n        x: { min: left, max: right },\n        y: { min: top, max: bottom },\n    };\n}\nfunction convertBoxToBoundingBox({ x, y }) {\n    return { top: y.min, right: x.max, bottom: y.max, left: x.min };\n}\n/**\n * Applies a TransformPoint function to a bounding box. TransformPoint is usually a function\n * provided by Framer to allow measured points to be corrected for device scaling. This is used\n * when measuring DOM elements and DOM event points.\n */\nfunction transformBoxPoints(point, transformPoint) {\n    if (!transformPoint)\n        return point;\n    const topLeft = transformPoint({ x: point.left, y: point.top });\n    const bottomRight = transformPoint({ x: point.right, y: point.bottom });\n    return {\n        top: topLeft.y,\n        left: topLeft.x,\n        bottom: bottomRight.y,\n        right: bottomRight.x,\n    };\n}\n\nexport { convertBoundingBoxToBox, convertBoxToBoundingBox, transformBoxPoints };\n","function isIdentityScale(scale) {\n    return scale === undefined || scale === 1;\n}\nfunction hasScale({ scale, scaleX, scaleY }) {\n    return (!isIdentityScale(scale) ||\n        !isIdentityScale(scaleX) ||\n        !isIdentityScale(scaleY));\n}\nfunction hasTransform(values) {\n    return (hasScale(values) ||\n        has2DTranslate(values) ||\n        values.z ||\n        values.rotate ||\n        values.rotateX ||\n        values.rotateY);\n}\nfunction has2DTranslate(values) {\n    return is2DTranslate(values.x) || is2DTranslate(values.y);\n}\nfunction is2DTranslate(value) {\n    return value && value !== \"0%\";\n}\n\nexport { has2DTranslate, hasScale, hasTransform };\n","import { mix } from '../../utils/mix.mjs';\nimport { hasTransform } from '../utils/has-transform.mjs';\n\n/**\n * Scales a point based on a factor and an originPoint\n */\nfunction scalePoint(point, scale, originPoint) {\n    const distanceFromOrigin = point - originPoint;\n    const scaled = scale * distanceFromOrigin;\n    return originPoint + scaled;\n}\n/**\n * Applies a translate/scale delta to a point\n */\nfunction applyPointDelta(point, translate, scale, originPoint, boxScale) {\n    if (boxScale !== undefined) {\n        point = scalePoint(point, boxScale, originPoint);\n    }\n    return scalePoint(point, scale, originPoint) + translate;\n}\n/**\n * Applies a translate/scale delta to an axis\n */\nfunction applyAxisDelta(axis, translate = 0, scale = 1, originPoint, boxScale) {\n    axis.min = applyPointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = applyPointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Applies a translate/scale delta to a box\n */\nfunction applyBoxDelta(box, { x, y }) {\n    applyAxisDelta(box.x, x.translate, x.scale, x.originPoint);\n    applyAxisDelta(box.y, y.translate, y.scale, y.originPoint);\n}\n/**\n * Apply a tree of deltas to a box. We do this to calculate the effect of all the transforms\n * in a tree upon our box before then calculating how to project it into our desired viewport-relative box\n *\n * This is the final nested loop within updateLayoutDelta for future refactoring\n */\nfunction applyTreeDeltas(box, treeScale, treePath, isSharedTransition = false) {\n    const treeLength = treePath.length;\n    if (!treeLength)\n        return;\n    // Reset the treeScale\n    treeScale.x = treeScale.y = 1;\n    let node;\n    let delta;\n    for (let i = 0; i < treeLength; i++) {\n        node = treePath[i];\n        delta = node.projectionDelta;\n        /**\n         * TODO: Prefer to remove this, but currently we have motion components with\n         * display: contents in Framer.\n         */\n        const instance = node.instance;\n        if (instance &&\n            instance.style &&\n            instance.style.display === \"contents\") {\n            continue;\n        }\n        if (isSharedTransition &&\n            node.options.layoutScroll &&\n            node.scroll &&\n            node !== node.root) {\n            transformBox(box, {\n                x: -node.scroll.offset.x,\n                y: -node.scroll.offset.y,\n            });\n        }\n        if (delta) {\n            // Incoporate each ancestor's scale into a culmulative treeScale for this component\n            treeScale.x *= delta.x.scale;\n            treeScale.y *= delta.y.scale;\n            // Apply each ancestor's calculated delta into this component's recorded layout box\n            applyBoxDelta(box, delta);\n        }\n        if (isSharedTransition && hasTransform(node.latestValues)) {\n            transformBox(box, node.latestValues);\n        }\n    }\n    /**\n     * Snap tree scale back to 1 if it's within a non-perceivable threshold.\n     * This will help reduce useless scales getting rendered.\n     */\n    treeScale.x = snapToDefault(treeScale.x);\n    treeScale.y = snapToDefault(treeScale.y);\n}\nfunction snapToDefault(scale) {\n    if (Number.isInteger(scale))\n        return scale;\n    return scale > 1.0000000000001 || scale < 0.999999999999 ? scale : 1;\n}\nfunction translateAxis(axis, distance) {\n    axis.min = axis.min + distance;\n    axis.max = axis.max + distance;\n}\n/**\n * Apply a transform to an axis from the latest resolved motion values.\n * This function basically acts as a bridge between a flat motion value map\n * and applyAxisDelta\n */\nfunction transformAxis(axis, transforms, [key, scaleKey, originKey]) {\n    const axisOrigin = transforms[originKey] !== undefined ? transforms[originKey] : 0.5;\n    const originPoint = mix(axis.min, axis.max, axisOrigin);\n    // Apply the axis delta to the final axis\n    applyAxisDelta(axis, transforms[key], transforms[scaleKey], originPoint, transforms.scale);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Apply a transform to a box from the latest resolved motion values.\n */\nfunction transformBox(box, transform) {\n    transformAxis(box.x, transform, xKeys);\n    transformAxis(box.y, transform, yKeys);\n}\n\nexport { applyAxisDelta, applyBoxDelta, applyPointDelta, applyTreeDeltas, scalePoint, transformAxis, transformBox, translateAxis };\n","import { convertBoundingBoxToBox, transformBoxPoints } from '../geometry/conversion.mjs';\nimport { translateAxis } from '../geometry/delta-apply.mjs';\n\nfunction measureViewportBox(instance, transformPoint) {\n    return convertBoundingBoxToBox(transformBoxPoints(instance.getBoundingClientRect(), transformPoint));\n}\nfunction measurePageBox(element, rootProjectionNode, transformPagePoint) {\n    const viewportBox = measureViewportBox(element, transformPagePoint);\n    const { scroll } = rootProjectionNode;\n    if (scroll) {\n        translateAxis(viewportBox.x, scroll.offset.x);\n        translateAxis(viewportBox.y, scroll.offset.y);\n    }\n    return viewportBox;\n}\n\nexport { measurePageBox, measureViewportBox };\n","const instantAnimationState = {\n    current: false,\n};\n\nexport { instantAnimationState };\n","const isBezierDefinition = (easing) => Array.isArray(easing) && typeof easing[0] === \"number\";\n\nexport { isBezierDefinition };\n","import { isBezierDefinition } from '../../../easing/utils/is-bezier-definition.mjs';\n\nfunction isWaapiSupportedEasing(easing) {\n    return Boolean(!easing ||\n        (typeof easing === \"string\" && supportedWaapiEasing[easing]) ||\n        isBezierDefinition(easing) ||\n        (Array.isArray(easing) && easing.every(isWaapiSupportedEasing)));\n}\nconst cubicBezierAsString = ([a, b, c, d]) => `cubic-bezier(${a}, ${b}, ${c}, ${d})`;\nconst supportedWaapiEasing = {\n    linear: \"linear\",\n    ease: \"ease\",\n    easeIn: \"ease-in\",\n    easeOut: \"ease-out\",\n    easeInOut: \"ease-in-out\",\n    circIn: cubicBezierAsString([0, 0.65, 0.55, 1]),\n    circOut: cubicBezierAsString([0.55, 0, 1, 0.45]),\n    backIn: cubicBezierAsString([0.31, 0.01, 0.66, -0.59]),\n    backOut: cubicBezierAsString([0.33, 1.53, 0.69, 0.99]),\n};\nfunction mapEasingToNativeEasing(easing) {\n    if (!easing)\n        return undefined;\n    return isBezierDefinition(easing)\n        ? cubicBezierAsString(easing)\n        : Array.isArray(easing)\n            ? easing.map(mapEasingToNativeEasing)\n            : supportedWaapiEasing[easing];\n}\n\nexport { cubicBezierAsString, isWaapiSupportedEasing, mapEasingToNativeEasing, supportedWaapiEasing };\n","const featureTests = {\n    waapi: () => Object.hasOwnProperty.call(Element.prototype, \"animate\"),\n};\nconst results = {};\nconst supports = {};\n/**\n * Generate features tests that cache their results.\n */\nfor (const key in featureTests) {\n    supports[key] = () => {\n        if (results[key] === undefined)\n            results[key] = featureTests[key]();\n        return results[key];\n    };\n}\n\nexport { supports };\n","import { cancelFrame, frame } from '../../../frameloop/index.mjs';\nimport { animateStyle } from './index.mjs';\nimport { isWaapiSupportedEasing } from './easing.mjs';\nimport { supports } from './supports.mjs';\nimport { getFinalKeyframe } from './utils/get-final-keyframe.mjs';\nimport { animateValue } from '../js/index.mjs';\nimport { millisecondsToSeconds, secondsToMilliseconds } from '../../../utils/time-conversion.mjs';\n\n/**\n * A list of values that can be hardware-accelerated.\n */\nconst acceleratedValues = new Set([\n    \"opacity\",\n    \"clipPath\",\n    \"filter\",\n    \"transform\",\n    \"backgroundColor\",\n]);\n/**\n * 10ms is chosen here as it strikes a balance between smooth\n * results (more than one keyframe per frame at 60fps) and\n * keyframe quantity.\n */\nconst sampleDelta = 10; //ms\n/**\n * Implement a practical max duration for keyframe generation\n * to prevent infinite loops\n */\nconst maxDuration = 20000;\nconst requiresPregeneratedKeyframes = (valueName, options) => options.type === \"spring\" ||\n    valueName === \"backgroundColor\" ||\n    !isWaapiSupportedEasing(options.ease);\nfunction createAcceleratedAnimation(value, valueName, { onUpdate, onComplete, ...options }) {\n    const canAccelerateAnimation = supports.waapi() &&\n        acceleratedValues.has(valueName) &&\n        !options.repeatDelay &&\n        options.repeatType !== \"mirror\" &&\n        options.damping !== 0 &&\n        options.type !== \"inertia\";\n    if (!canAccelerateAnimation)\n        return false;\n    /**\n     * TODO: Unify with js/index\n     */\n    let hasStopped = false;\n    let resolveFinishedPromise;\n    let currentFinishedPromise;\n    /**\n     * Resolve the current Promise every time we enter the\n     * finished state. This is WAAPI-compatible behaviour.\n     */\n    const updateFinishedPromise = () => {\n        currentFinishedPromise = new Promise((resolve) => {\n            resolveFinishedPromise = resolve;\n        });\n    };\n    // Create the first finished promise\n    updateFinishedPromise();\n    let { keyframes, duration = 300, ease, times } = options;\n    /**\n     * If this animation needs pre-generated keyframes then generate.\n     */\n    if (requiresPregeneratedKeyframes(valueName, options)) {\n        const sampleAnimation = animateValue({\n            ...options,\n            repeat: 0,\n            delay: 0,\n        });\n        let state = { done: false, value: keyframes[0] };\n        const pregeneratedKeyframes = [];\n        /**\n         * Bail after 20 seconds of pre-generated keyframes as it's likely\n         * we're heading for an infinite loop.\n         */\n        let t = 0;\n        while (!state.done && t < maxDuration) {\n            state = sampleAnimation.sample(t);\n            pregeneratedKeyframes.push(state.value);\n            t += sampleDelta;\n        }\n        times = undefined;\n        keyframes = pregeneratedKeyframes;\n        duration = t - sampleDelta;\n        ease = \"linear\";\n    }\n    const animation = animateStyle(value.owner.current, valueName, keyframes, {\n        ...options,\n        duration,\n        /**\n         * This function is currently not called if ease is provided\n         * as a function so the cast is safe.\n         *\n         * However it would be possible for a future refinement to port\n         * in easing pregeneration from Motion One for browsers that\n         * support the upcoming `linear()` easing function.\n         */\n        ease: ease,\n        times,\n    });\n    const cancelAnimation = () => animation.cancel();\n    const safeCancel = () => {\n        frame.update(cancelAnimation);\n        resolveFinishedPromise();\n        updateFinishedPromise();\n    };\n    /**\n     * Prefer the `onfinish` prop as it's more widely supported than\n     * the `finished` promise.\n     *\n     * Here, we synchronously set the provided MotionValue to the end\n     * keyframe. If we didn't, when the WAAPI animation is finished it would\n     * be removed from the element which would then revert to its old styles.\n     */\n    animation.onfinish = () => {\n        value.set(getFinalKeyframe(keyframes, options));\n        onComplete && onComplete();\n        safeCancel();\n    };\n    /**\n     * Animation interrupt callback.\n     */\n    return {\n        then(resolve, reject) {\n            return currentFinishedPromise.then(resolve, reject);\n        },\n        get time() {\n            return millisecondsToSeconds(animation.currentTime || 0);\n        },\n        set time(newTime) {\n            animation.currentTime = secondsToMilliseconds(newTime);\n        },\n        get speed() {\n            return animation.playbackRate;\n        },\n        set speed(newSpeed) {\n            animation.playbackRate = newSpeed;\n        },\n        get duration() {\n            return millisecondsToSeconds(duration);\n        },\n        play: () => {\n            if (hasStopped)\n                return;\n            animation.play();\n            /**\n             * Cancel any pending cancel tasks\n             */\n            cancelFrame(cancelAnimation);\n        },\n        pause: () => animation.pause(),\n        stop: () => {\n            hasStopped = true;\n            if (animation.playState === \"idle\")\n                return;\n            /**\n             * WAAPI doesn't natively have any interruption capabilities.\n             *\n             * Rather than read commited styles back out of the DOM, we can\n             * create a renderless JS animation and sample it twice to calculate\n             * its current value, \"previous\" value, and therefore allow\n             * Motion to calculate velocity for any subsequent animation.\n             */\n            const { currentTime } = animation;\n            if (currentTime) {\n                const sampleAnimation = animateValue({\n                    ...options,\n                    autoplay: false,\n                });\n                value.setWithVelocity(sampleAnimation.sample(currentTime - sampleDelta).value, sampleAnimation.sample(currentTime).value, sampleDelta);\n            }\n            safeCancel();\n        },\n        complete: () => animation.finish(),\n        cancel: safeCancel,\n    };\n}\n\nexport { createAcceleratedAnimation };\n","import { mapEasingToNativeEasing } from './easing.mjs';\n\nfunction animateStyle(element, valueName, keyframes, { delay = 0, duration, repeat = 0, repeatType = \"loop\", ease, times, } = {}) {\n    const keyframeOptions = { [valueName]: keyframes };\n    if (times)\n        keyframeOptions.offset = times;\n    const easing = mapEasingToNativeEasing(ease);\n    /**\n     * If this is an easing array, apply to keyframes, not animation as a whole\n     */\n    if (Array.isArray(easing))\n        keyframeOptions.easing = easing;\n    return element.animate(keyframeOptions, {\n        delay,\n        duration,\n        easing: !Array.isArray(easing) ? easing : \"linear\",\n        fill: \"both\",\n        iterations: repeat + 1,\n        direction: repeatType === \"reverse\" ? \"alternate\" : \"normal\",\n    });\n}\n\nexport { animateStyle };\n","function getFinalKeyframe(keyframes, { repeat, repeatType = \"loop\" }) {\n    const index = repeat && repeatType !== \"loop\" && repeat % 2 === 1\n        ? 0\n        : keyframes.length - 1;\n    return keyframes[index];\n}\n\nexport { getFinalKeyframe };\n","import { transformProps } from '../../render/html/utils/transform.mjs';\n\nconst underDampedSpring = {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restSpeed: 10,\n};\nconst criticallyDampedSpring = (target) => ({\n    type: \"spring\",\n    stiffness: 550,\n    damping: target === 0 ? 2 * Math.sqrt(550) : 30,\n    restSpeed: 10,\n});\nconst keyframesTransition = {\n    type: \"keyframes\",\n    duration: 0.8,\n};\n/**\n * Default easing curve is a slightly shallower version of\n * the default browser easing curve.\n */\nconst ease = {\n    type: \"keyframes\",\n    ease: [0.25, 0.1, 0.35, 1],\n    duration: 0.3,\n};\nconst getDefaultTransition = (valueKey, { keyframes }) => {\n    if (keyframes.length > 2) {\n        return keyframesTransition;\n    }\n    else if (transformProps.has(valueKey)) {\n        return valueKey.startsWith(\"scale\")\n            ? criticallyDampedSpring(keyframes[1])\n            : underDampedSpring;\n    }\n    return ease;\n};\n\nexport { getDefaultTransition };\n","import { complex } from '../../value/types/complex/index.mjs';\n\n/**\n * Check if a value is animatable. Examples:\n *\n * ✅: 100, \"100px\", \"#fff\"\n * ❌: \"block\", \"url(2.jpg)\"\n * @param value\n *\n * @internal\n */\nconst isAnimatable = (key, value) => {\n    // If the list of keys tat might be non-animatable grows, replace with Set\n    if (key === \"zIndex\")\n        return false;\n    // If it's a number or a keyframes array, we can animate it. We might at some point\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n    // but for now lets leave it like this for performance reasons\n    if (typeof value === \"number\" || Array.isArray(value))\n        return true;\n    if (typeof value === \"string\" && // It's animatable if we have a string\n        (complex.test(value) || value === \"0\") && // And it contains numbers and/or colors\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n    ) {\n        return true;\n    }\n    return false;\n};\n\nexport { isAnimatable };\n","import { complex } from './index.mjs';\nimport { floatRegex } from '../utils.mjs';\n\n/**\n * Properties that should default to 1 or 100%\n */\nconst maxDefaults = new Set([\"brightness\", \"contrast\", \"saturate\", \"opacity\"]);\nfunction applyDefaultFilter(v) {\n    const [name, value] = v.slice(0, -1).split(\"(\");\n    if (name === \"drop-shadow\")\n        return v;\n    const [number] = value.match(floatRegex) || [];\n    if (!number)\n        return v;\n    const unit = value.replace(number, \"\");\n    let defaultValue = maxDefaults.has(name) ? 1 : 0;\n    if (number !== value)\n        defaultValue *= 100;\n    return name + \"(\" + defaultValue + unit + \")\";\n}\nconst functionRegex = /([a-z-]*)\\(.*?\\)/g;\nconst filter = {\n    ...complex,\n    getAnimatableNone: (v) => {\n        const functions = v.match(functionRegex);\n        return functions ? functions.map(applyDefaultFilter).join(\" \") : v;\n    },\n};\n\nexport { filter };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { numberValueTypes } from './number.mjs';\n\n/**\n * A map of default value types for common values\n */\nconst defaultValueTypes = {\n    ...numberValueTypes,\n    // Color props\n    color,\n    backgroundColor: color,\n    outlineColor: color,\n    fill: color,\n    stroke: color,\n    // Border props\n    borderColor: color,\n    borderTopColor: color,\n    borderRightColor: color,\n    borderBottomColor: color,\n    borderLeftColor: color,\n    filter,\n    WebkitFilter: filter,\n};\n/**\n * Gets the default ValueType for the provided value key\n */\nconst getDefaultValueType = (key) => defaultValueTypes[key];\n\nexport { defaultValueTypes, getDefaultValueType };\n","import { complex } from '../../../value/types/complex/index.mjs';\nimport { filter } from '../../../value/types/complex/filter.mjs';\nimport { getDefaultValueType } from './defaults.mjs';\n\nfunction getAnimatableNone(key, value) {\n    let defaultValueType = getDefaultValueType(key);\n    if (defaultValueType !== filter)\n        defaultValueType = complex;\n    // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n    return defaultValueType.getAnimatableNone\n        ? defaultValueType.getAnimatableNone(value)\n        : undefined;\n}\n\nexport { getAnimatableNone };\n","/**\n * Check if the value is a zero value string like \"0px\" or \"0%\"\n */\nconst isZeroValueString = (v) => /^0[^.\\s]+$/.test(v);\n\nexport { isZeroValueString };\n","import { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\n\nfunction isNone(value) {\n    if (typeof value === \"number\") {\n        return value === 0;\n    }\n    else if (value !== null) {\n        return value === \"none\" || value === \"0\" || isZeroValueString(value);\n    }\n}\n\nexport { isNone };\n","/**\n * Decide whether a transition is defined on a given Transition.\n * This filters out orchestration options and returns true\n * if any options are left.\n */\nfunction isTransitionDefined({ when, delay: _delay, delayChildren, staggerChildren, staggerDirection, repeat, repeatType, repeatDelay, from, elapsed, ...transition }) {\n    return !!Object.keys(transition).length;\n}\nfunction getValueTransition(transition, key) {\n    return transition[key] || transition[\"default\"] || transition;\n}\n\nexport { getValueTransition, isTransitionDefined };\n","import { warning } from '../../utils/errors.mjs';\nimport { secondsToMilliseconds } from '../../utils/time-conversion.mjs';\nimport { instantAnimationState } from '../../utils/use-instant-transition-state.mjs';\nimport { createAcceleratedAnimation } from '../animators/waapi/create-accelerated-animation.mjs';\nimport { createInstantAnimation } from '../animators/instant.mjs';\nimport { getDefaultTransition } from '../utils/default-transitions.mjs';\nimport { isAnimatable } from '../utils/is-animatable.mjs';\nimport { getKeyframes } from '../utils/keyframes.mjs';\nimport { getValueTransition, isTransitionDefined } from '../utils/transitions.mjs';\nimport { animateValue } from '../animators/js/index.mjs';\n\nconst animateMotionValue = (valueName, value, target, transition = {}) => {\n    return (onComplete) => {\n        const valueTransition = getValueTransition(transition, valueName) || {};\n        /**\n         * Most transition values are currently completely overwritten by value-specific\n         * transitions. In the future it'd be nicer to blend these transitions. But for now\n         * delay actually does inherit from the root transition if not value-specific.\n         */\n        const delay = valueTransition.delay || transition.delay || 0;\n        /**\n         * Elapsed isn't a public transition option but can be passed through from\n         * optimized appear effects in milliseconds.\n         */\n        let { elapsed = 0 } = transition;\n        elapsed = elapsed - secondsToMilliseconds(delay);\n        const keyframes = getKeyframes(value, valueName, target, valueTransition);\n        /**\n         * Check if we're able to animate between the start and end keyframes,\n         * and throw a warning if we're attempting to animate between one that's\n         * animatable and another that isn't.\n         */\n        const originKeyframe = keyframes[0];\n        const targetKeyframe = keyframes[keyframes.length - 1];\n        const isOriginAnimatable = isAnimatable(valueName, originKeyframe);\n        const isTargetAnimatable = isAnimatable(valueName, targetKeyframe);\n        warning(isOriginAnimatable === isTargetAnimatable, `You are trying to animate ${valueName} from \"${originKeyframe}\" to \"${targetKeyframe}\". ${originKeyframe} is not an animatable value - to enable this animation set ${originKeyframe} to a value animatable to ${targetKeyframe} via the \\`style\\` property.`);\n        let options = {\n            keyframes,\n            velocity: value.getVelocity(),\n            ease: \"easeOut\",\n            ...valueTransition,\n            delay: -elapsed,\n            onUpdate: (v) => {\n                value.set(v);\n                valueTransition.onUpdate && valueTransition.onUpdate(v);\n            },\n            onComplete: () => {\n                onComplete();\n                valueTransition.onComplete && valueTransition.onComplete();\n            },\n        };\n        /**\n         * If there's no transition defined for this value, we can generate\n         * unqiue transition settings for this value.\n         */\n        if (!isTransitionDefined(valueTransition)) {\n            options = {\n                ...options,\n                ...getDefaultTransition(valueName, options),\n            };\n        }\n        /**\n         * Both WAAPI and our internal animation functions use durations\n         * as defined by milliseconds, while our external API defines them\n         * as seconds.\n         */\n        if (options.duration) {\n            options.duration = secondsToMilliseconds(options.duration);\n        }\n        if (options.repeatDelay) {\n            options.repeatDelay = secondsToMilliseconds(options.repeatDelay);\n        }\n        if (!isOriginAnimatable ||\n            !isTargetAnimatable ||\n            instantAnimationState.current ||\n            valueTransition.type === false) {\n            /**\n             * If we can't animate this value, or the global instant animation flag is set,\n             * or this is simply defined as an instant transition, return an instant transition.\n             */\n            return createInstantAnimation(instantAnimationState.current\n                ? { ...options, delay: 0 }\n                : options);\n        }\n        /**\n         * Animate via WAAPI if possible.\n         */\n        if (value.owner &&\n            value.owner.current instanceof HTMLElement &&\n            !value.owner.getProps().onUpdate) {\n            const acceleratedAnimation = createAcceleratedAnimation(value, valueName, options);\n            if (acceleratedAnimation)\n                return acceleratedAnimation;\n        }\n        /**\n         * If we didn't create an accelerated animation, create a JS animation\n         */\n        return animateValue(options);\n    };\n};\n\nexport { animateMotionValue };\n","import { getAnimatableNone } from '../../render/dom/value-types/animatable-none.mjs';\nimport { isAnimatable } from './is-animatable.mjs';\nimport { isNone } from './is-none.mjs';\n\nfunction getKeyframes(value, valueName, target, transition) {\n    const isTargetAnimatable = isAnimatable(valueName, target);\n    let keyframes;\n    if (Array.isArray(target)) {\n        keyframes = [...target];\n    }\n    else {\n        keyframes = [null, target];\n    }\n    const defaultOrigin = transition.from !== undefined ? transition.from : value.get();\n    let animatableTemplateValue = undefined;\n    const noneKeyframeIndexes = [];\n    for (let i = 0; i < keyframes.length; i++) {\n        /**\n         * Fill null/wildcard keyframes\n         */\n        if (keyframes[i] === null) {\n            keyframes[i] = i === 0 ? defaultOrigin : keyframes[i - 1];\n        }\n        if (isNone(keyframes[i])) {\n            noneKeyframeIndexes.push(i);\n        }\n        // TODO: Clean this conditional, it works for now\n        if (typeof keyframes[i] === \"string\" &&\n            keyframes[i] !== \"none\" &&\n            keyframes[i] !== \"0\") {\n            animatableTemplateValue = keyframes[i];\n        }\n    }\n    if (isTargetAnimatable &&\n        noneKeyframeIndexes.length &&\n        animatableTemplateValue) {\n        for (let i = 0; i < noneKeyframeIndexes.length; i++) {\n            const index = noneKeyframeIndexes[i];\n            keyframes[index] = getAnimatableNone(valueName, animatableTemplateValue);\n        }\n    }\n    return keyframes;\n}\n\nexport { getKeyframes };\n","import { animateValue } from './js/index.mjs';\nimport { noop } from '../../utils/noop.mjs';\n\nfunction createInstantAnimation({ keyframes, delay, onUpdate, onComplete, }) {\n    const setValue = () => {\n        onUpdate && onUpdate(keyframes[keyframes.length - 1]);\n        onComplete && onComplete();\n        /**\n         * TODO: As this API grows it could make sense to always return\n         * animateValue. This will be a bigger project as animateValue\n         * is frame-locked whereas this function resolves instantly.\n         * This is a behavioural change and also has ramifications regarding\n         * assumptions within tests.\n         */\n        return {\n            time: 0,\n            speed: 1,\n            duration: 0,\n            play: (noop),\n            pause: (noop),\n            stop: (noop),\n            then: (resolve) => {\n                resolve();\n                return Promise.resolve();\n            },\n            cancel: (noop),\n            complete: (noop),\n        };\n    };\n    return delay\n        ? animateValue({\n            keyframes: [0, 1],\n            duration: 0,\n            delay,\n            onComplete: setValue,\n        })\n        : setValue();\n}\n\nexport { createInstantAnimation };\n","import { invariant } from '../../utils/errors.mjs';\nimport { PanSession } from '../pan/PanSession.mjs';\nimport { getGlobalLock } from './utils/lock.mjs';\nimport { isRefObject } from '../../utils/is-ref-object.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { applyConstraints, calcRelativeConstraints, resolveDragElastic, calcViewportConstraints, defaultElastic, rebaseAxisConstraints, calcOrigin } from './utils/constraints.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { eachAxis } from '../../projection/utils/each-axis.mjs';\nimport { measurePageBox } from '../../projection/utils/measure.mjs';\nimport { extractEventInfo } from '../../events/event-info.mjs';\nimport { convertBoxToBoundingBox, convertBoundingBoxToBox } from '../../projection/geometry/conversion.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\nimport { calcLength } from '../../projection/geometry/delta-calc.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { animateMotionValue } from '../../animation/interfaces/motion-value.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst elementDragControls = new WeakMap();\n/**\n *\n */\n// let latestPointerEvent: PointerEvent\nclass VisualElementDragControls {\n    constructor(visualElement) {\n        // This is a reference to the global drag gesture lock, ensuring only one component\n        // can \"capture\" the drag of one or both axes.\n        // TODO: Look into moving this into pansession?\n        this.openGlobalLock = null;\n        this.isDragging = false;\n        this.currentDirection = null;\n        this.originPoint = { x: 0, y: 0 };\n        /**\n         * The permitted boundaries of travel, in pixels.\n         */\n        this.constraints = false;\n        this.hasMutatedConstraints = false;\n        /**\n         * The per-axis resolved elastic values.\n         */\n        this.elastic = createBox();\n        this.visualElement = visualElement;\n    }\n    start(originEvent, { snapToCursor = false } = {}) {\n        /**\n         * Don't start dragging if this component is exiting\n         */\n        const { presenceContext } = this.visualElement;\n        if (presenceContext && presenceContext.isPresent === false)\n            return;\n        const onSessionStart = (event) => {\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\n            // the component.\n            this.stopAnimation();\n            if (snapToCursor) {\n                this.snapToCursor(extractEventInfo(event, \"page\").point);\n            }\n        };\n        const onStart = (event, info) => {\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n            const { drag, dragPropagation, onDragStart } = this.getProps();\n            if (drag && !dragPropagation) {\n                if (this.openGlobalLock)\n                    this.openGlobalLock();\n                this.openGlobalLock = getGlobalLock(drag);\n                // If we don 't have the lock, don't start dragging\n                if (!this.openGlobalLock)\n                    return;\n            }\n            this.isDragging = true;\n            this.currentDirection = null;\n            this.resolveConstraints();\n            if (this.visualElement.projection) {\n                this.visualElement.projection.isAnimationBlocked = true;\n                this.visualElement.projection.target = undefined;\n            }\n            /**\n             * Record gesture origin\n             */\n            eachAxis((axis) => {\n                let current = this.getAxisMotionValue(axis).get() || 0;\n                /**\n                 * If the MotionValue is a percentage value convert to px\n                 */\n                if (percent.test(current)) {\n                    const { projection } = this.visualElement;\n                    if (projection && projection.layout) {\n                        const measuredAxis = projection.layout.layoutBox[axis];\n                        if (measuredAxis) {\n                            const length = calcLength(measuredAxis);\n                            current = length * (parseFloat(current) / 100);\n                        }\n                    }\n                }\n                this.originPoint[axis] = current;\n            });\n            // Fire onDragStart event\n            if (onDragStart) {\n                frame.update(() => onDragStart(event, info), false, true);\n            }\n            const { animationState } = this.visualElement;\n            animationState && animationState.setActive(\"whileDrag\", true);\n        };\n        const onMove = (event, info) => {\n            // latestPointerEvent = event\n            const { dragPropagation, dragDirectionLock, onDirectionLock, onDrag, } = this.getProps();\n            // If we didn't successfully receive the gesture lock, early return.\n            if (!dragPropagation && !this.openGlobalLock)\n                return;\n            const { offset } = info;\n            // Attempt to detect drag direction if directionLock is true\n            if (dragDirectionLock && this.currentDirection === null) {\n                this.currentDirection = getCurrentDirection(offset);\n                // If we've successfully set a direction, notify listener\n                if (this.currentDirection !== null) {\n                    onDirectionLock && onDirectionLock(this.currentDirection);\n                }\n                return;\n            }\n            // Update each point with the latest position\n            this.updateAxis(\"x\", info.point, offset);\n            this.updateAxis(\"y\", info.point, offset);\n            /**\n             * Ideally we would leave the renderer to fire naturally at the end of\n             * this frame but if the element is about to change layout as the result\n             * of a re-render we want to ensure the browser can read the latest\n             * bounding box to ensure the pointer and element don't fall out of sync.\n             */\n            this.visualElement.render();\n            /**\n             * This must fire after the render call as it might trigger a state\n             * change which itself might trigger a layout update.\n             */\n            onDrag && onDrag(event, info);\n        };\n        const onSessionEnd = (event, info) => this.stop(event, info);\n        this.panSession = new PanSession(originEvent, {\n            onSessionStart,\n            onStart,\n            onMove,\n            onSessionEnd,\n        }, { transformPagePoint: this.visualElement.getTransformPagePoint() });\n    }\n    stop(event, info) {\n        const isDragging = this.isDragging;\n        this.cancel();\n        if (!isDragging)\n            return;\n        const { velocity } = info;\n        this.startAnimation(velocity);\n        const { onDragEnd } = this.getProps();\n        if (onDragEnd) {\n            frame.update(() => onDragEnd(event, info));\n        }\n    }\n    cancel() {\n        this.isDragging = false;\n        const { projection, animationState } = this.visualElement;\n        if (projection) {\n            projection.isAnimationBlocked = false;\n        }\n        this.panSession && this.panSession.end();\n        this.panSession = undefined;\n        const { dragPropagation } = this.getProps();\n        if (!dragPropagation && this.openGlobalLock) {\n            this.openGlobalLock();\n            this.openGlobalLock = null;\n        }\n        animationState && animationState.setActive(\"whileDrag\", false);\n    }\n    updateAxis(axis, _point, offset) {\n        const { drag } = this.getProps();\n        // If we're not dragging this axis, do an early return.\n        if (!offset || !shouldDrag(axis, drag, this.currentDirection))\n            return;\n        const axisValue = this.getAxisMotionValue(axis);\n        let next = this.originPoint[axis] + offset[axis];\n        // Apply constraints\n        if (this.constraints && this.constraints[axis]) {\n            next = applyConstraints(next, this.constraints[axis], this.elastic[axis]);\n        }\n        axisValue.set(next);\n    }\n    resolveConstraints() {\n        const { dragConstraints, dragElastic } = this.getProps();\n        const { layout } = this.visualElement.projection || {};\n        const prevConstraints = this.constraints;\n        if (dragConstraints && isRefObject(dragConstraints)) {\n            if (!this.constraints) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        }\n        else {\n            if (dragConstraints && layout) {\n                this.constraints = calcRelativeConstraints(layout.layoutBox, dragConstraints);\n            }\n            else {\n                this.constraints = false;\n            }\n        }\n        this.elastic = resolveDragElastic(dragElastic);\n        /**\n         * If we're outputting to external MotionValues, we want to rebase the measured constraints\n         * from viewport-relative to component-relative.\n         */\n        if (prevConstraints !== this.constraints &&\n            layout &&\n            this.constraints &&\n            !this.hasMutatedConstraints) {\n            eachAxis((axis) => {\n                if (this.getAxisMotionValue(axis)) {\n                    this.constraints[axis] = rebaseAxisConstraints(layout.layoutBox[axis], this.constraints[axis]);\n                }\n            });\n        }\n    }\n    resolveRefConstraints() {\n        const { dragConstraints: constraints, onMeasureDragConstraints } = this.getProps();\n        if (!constraints || !isRefObject(constraints))\n            return false;\n        const constraintsElement = constraints.current;\n        invariant(constraintsElement !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n        const { projection } = this.visualElement;\n        // TODO\n        if (!projection || !projection.layout)\n            return false;\n        const constraintsBox = measurePageBox(constraintsElement, projection.root, this.visualElement.getTransformPagePoint());\n        let measuredConstraints = calcViewportConstraints(projection.layout.layoutBox, constraintsBox);\n        /**\n         * If there's an onMeasureDragConstraints listener we call it and\n         * if different constraints are returned, set constraints to that\n         */\n        if (onMeasureDragConstraints) {\n            const userConstraints = onMeasureDragConstraints(convertBoxToBoundingBox(measuredConstraints));\n            this.hasMutatedConstraints = !!userConstraints;\n            if (userConstraints) {\n                measuredConstraints = convertBoundingBoxToBox(userConstraints);\n            }\n        }\n        return measuredConstraints;\n    }\n    startAnimation(velocity) {\n        const { drag, dragMomentum, dragElastic, dragTransition, dragSnapToOrigin, onDragTransitionEnd, } = this.getProps();\n        const constraints = this.constraints || {};\n        const momentumAnimations = eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, this.currentDirection)) {\n                return;\n            }\n            let transition = (constraints && constraints[axis]) || {};\n            if (dragSnapToOrigin)\n                transition = { min: 0, max: 0 };\n            /**\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\n             * using the value of `dragElastic`.\n             */\n            const bounceStiffness = dragElastic ? 200 : 1000000;\n            const bounceDamping = dragElastic ? 40 : 10000000;\n            const inertia = {\n                type: \"inertia\",\n                velocity: dragMomentum ? velocity[axis] : 0,\n                bounceStiffness,\n                bounceDamping,\n                timeConstant: 750,\n                restDelta: 1,\n                restSpeed: 10,\n                ...dragTransition,\n                ...transition,\n            };\n            // If we're not animating on an externally-provided `MotionValue` we can use the\n            // component's animation controls which will handle interactions with whileHover (etc),\n            // otherwise we just have to animate the `MotionValue` itself.\n            return this.startAxisValueAnimation(axis, inertia);\n        });\n        // Run all animations and then resolve the new drag constraints.\n        return Promise.all(momentumAnimations).then(onDragTransitionEnd);\n    }\n    startAxisValueAnimation(axis, transition) {\n        const axisValue = this.getAxisMotionValue(axis);\n        return axisValue.start(animateMotionValue(axis, axisValue, 0, transition));\n    }\n    stopAnimation() {\n        eachAxis((axis) => this.getAxisMotionValue(axis).stop());\n    }\n    /**\n     * Drag works differently depending on which props are provided.\n     *\n     * - If _dragX and _dragY are provided, we output the gesture delta directly to those motion values.\n     * - Otherwise, we apply the delta to the x/y motion values.\n     */\n    getAxisMotionValue(axis) {\n        const dragKey = \"_drag\" + axis.toUpperCase();\n        const props = this.visualElement.getProps();\n        const externalMotionValue = props[dragKey];\n        return externalMotionValue\n            ? externalMotionValue\n            : this.visualElement.getValue(axis, (props.initial ? props.initial[axis] : undefined) || 0);\n    }\n    snapToCursor(point) {\n        eachAxis((axis) => {\n            const { drag } = this.getProps();\n            // If we're not dragging this axis, do an early return.\n            if (!shouldDrag(axis, drag, this.currentDirection))\n                return;\n            const { projection } = this.visualElement;\n            const axisValue = this.getAxisMotionValue(axis);\n            if (projection && projection.layout) {\n                const { min, max } = projection.layout.layoutBox[axis];\n                axisValue.set(point[axis] - mix(min, max, 0.5));\n            }\n        });\n    }\n    /**\n     * When the viewport resizes we want to check if the measured constraints\n     * have changed and, if so, reposition the element within those new constraints\n     * relative to where it was before the resize.\n     */\n    scalePositionWithinConstraints() {\n        if (!this.visualElement.current)\n            return;\n        const { drag, dragConstraints } = this.getProps();\n        const { projection } = this.visualElement;\n        if (!isRefObject(dragConstraints) || !projection || !this.constraints)\n            return;\n        /**\n         * Stop current animations as there can be visual glitching if we try to do\n         * this mid-animation\n         */\n        this.stopAnimation();\n        /**\n         * Record the relative position of the dragged element relative to the\n         * constraints box and save as a progress value.\n         */\n        const boxProgress = { x: 0, y: 0 };\n        eachAxis((axis) => {\n            const axisValue = this.getAxisMotionValue(axis);\n            if (axisValue) {\n                const latest = axisValue.get();\n                boxProgress[axis] = calcOrigin({ min: latest, max: latest }, this.constraints[axis]);\n            }\n        });\n        /**\n         * Update the layout of this element and resolve the latest drag constraints\n         */\n        const { transformTemplate } = this.visualElement.getProps();\n        this.visualElement.current.style.transform = transformTemplate\n            ? transformTemplate({}, \"\")\n            : \"none\";\n        projection.root && projection.root.updateScroll();\n        projection.updateLayout();\n        this.resolveConstraints();\n        /**\n         * For each axis, calculate the current progress of the layout axis\n         * within the new constraints.\n         */\n        eachAxis((axis) => {\n            if (!shouldDrag(axis, drag, null))\n                return;\n            /**\n             * Calculate a new transform based on the previous box progress\n             */\n            const axisValue = this.getAxisMotionValue(axis);\n            const { min, max } = this.constraints[axis];\n            axisValue.set(mix(min, max, boxProgress[axis]));\n        });\n    }\n    addListeners() {\n        if (!this.visualElement.current)\n            return;\n        elementDragControls.set(this.visualElement, this);\n        const element = this.visualElement.current;\n        /**\n         * Attach a pointerdown event listener on this DOM element to initiate drag tracking.\n         */\n        const stopPointerListener = addPointerEvent(element, \"pointerdown\", (event) => {\n            const { drag, dragListener = true } = this.getProps();\n            drag && dragListener && this.start(event);\n        });\n        const measureDragConstraints = () => {\n            const { dragConstraints } = this.getProps();\n            if (isRefObject(dragConstraints)) {\n                this.constraints = this.resolveRefConstraints();\n            }\n        };\n        const { projection } = this.visualElement;\n        const stopMeasureLayoutListener = projection.addEventListener(\"measure\", measureDragConstraints);\n        if (projection && !projection.layout) {\n            projection.root && projection.root.updateScroll();\n            projection.updateLayout();\n        }\n        measureDragConstraints();\n        /**\n         * Attach a window resize listener to scale the draggable target within its defined\n         * constraints as the window resizes.\n         */\n        const stopResizeListener = addDomEvent(window, \"resize\", () => this.scalePositionWithinConstraints());\n        /**\n         * If the element's layout changes, calculate the delta and apply that to\n         * the drag gesture's origin point.\n         */\n        const stopLayoutUpdateListener = projection.addEventListener(\"didUpdate\", (({ delta, hasLayoutChanged }) => {\n            if (this.isDragging && hasLayoutChanged) {\n                eachAxis((axis) => {\n                    const motionValue = this.getAxisMotionValue(axis);\n                    if (!motionValue)\n                        return;\n                    this.originPoint[axis] += delta[axis].translate;\n                    motionValue.set(motionValue.get() + delta[axis].translate);\n                });\n                this.visualElement.render();\n            }\n        }));\n        return () => {\n            stopResizeListener();\n            stopPointerListener();\n            stopMeasureLayoutListener();\n            stopLayoutUpdateListener && stopLayoutUpdateListener();\n        };\n    }\n    getProps() {\n        const props = this.visualElement.getProps();\n        const { drag = false, dragDirectionLock = false, dragPropagation = false, dragConstraints = false, dragElastic = defaultElastic, dragMomentum = true, } = props;\n        return {\n            ...props,\n            drag,\n            dragDirectionLock,\n            dragPropagation,\n            dragConstraints,\n            dragElastic,\n            dragMomentum,\n        };\n    }\n}\nfunction shouldDrag(direction, drag, currentDirection) {\n    return ((drag === true || drag === direction) &&\n        (currentDirection === null || currentDirection === direction));\n}\n/**\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\n * than the provided threshold, return `null`.\n *\n * @param offset - The x/y offset from origin.\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\n */\nfunction getCurrentDirection(offset, lockThreshold = 10) {\n    let direction = null;\n    if (Math.abs(offset.y) > lockThreshold) {\n        direction = \"y\";\n    }\n    else if (Math.abs(offset.x) > lockThreshold) {\n        direction = \"x\";\n    }\n    return direction;\n}\n\nexport { VisualElementDragControls, elementDragControls };\n","import { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { VisualElementDragControls } from './VisualElementDragControls.mjs';\n\nclass DragGesture extends Feature {\n    constructor(node) {\n        super(node);\n        this.removeGroupControls = noop;\n        this.removeListeners = noop;\n        this.controls = new VisualElementDragControls(node);\n    }\n    mount() {\n        // If we've been provided a DragControls for manual control over the drag gesture,\n        // subscribe this component to it on mount.\n        const { dragControls } = this.node.getProps();\n        if (dragControls) {\n            this.removeGroupControls = dragControls.subscribe(this.controls);\n        }\n        this.removeListeners = this.controls.addListeners() || noop;\n    }\n    unmount() {\n        this.removeGroupControls();\n        this.removeListeners();\n    }\n}\n\nexport { DragGesture };\n","import { PanSession } from './PanSession.mjs';\nimport { addPointerEvent } from '../../events/add-pointer-event.mjs';\nimport { Feature } from '../../motion/features/Feature.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { frame } from '../../frameloop/index.mjs';\n\nconst asyncHandler = (handler) => (event, info) => {\n    if (handler) {\n        frame.update(() => handler(event, info));\n    }\n};\nclass PanGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removePointerDownListener = noop;\n    }\n    onPointerDown(pointerDownEvent) {\n        this.session = new PanSession(pointerDownEvent, this.createPanHandlers(), { transformPagePoint: this.node.getTransformPagePoint() });\n    }\n    createPanHandlers() {\n        const { onPanSessionStart, onPanStart, onPan, onPanEnd } = this.node.getProps();\n        return {\n            onSessionStart: asyncHandler(onPanSessionStart),\n            onStart: asyncHandler(onPanStart),\n            onMove: onPan,\n            onEnd: (event, info) => {\n                delete this.session;\n                if (onPanEnd) {\n                    frame.update(() => onPanEnd(event, info));\n                }\n            },\n        };\n    }\n    mount() {\n        this.removePointerDownListener = addPointerEvent(this.node.current, \"pointerdown\", (event) => this.onPointerDown(event));\n    }\n    update() {\n        this.session && this.session.updateHandlers(this.createPanHandlers());\n    }\n    unmount() {\n        this.removePointerDownListener();\n        this.session && this.session.end();\n    }\n}\n\nexport { PanGesture };\n","/**\n * This should only ever be modified on the client otherwise it'll\n * persist through server requests. If we need instanced states we\n * could lazy-init via root.\n */\nconst globalProjectionState = {\n    /**\n     * Global flag as to whether the tree has animated since the last time\n     * we resized the window\n     */\n    hasAnimatedSinceResize: true,\n    /**\n     * We set this to true once, on the first update. Any nodes added to the tree beyond that\n     * update will be given a `data-projection-id` attribute.\n     */\n    hasEverUpdated: false,\n};\n\nexport { globalProjectionState };\n","import { px } from '../../value/types/numbers/units.mjs';\n\nfunction pixelsToPercent(pixels, axis) {\n    if (axis.max === axis.min)\n        return 0;\n    return (pixels / (axis.max - axis.min)) * 100;\n}\n/**\n * We always correct borderRadius as a percentage rather than pixels to reduce paints.\n * For example, if you are projecting a box that is 100px wide with a 10px borderRadius\n * into a box that is 200px wide with a 20px borderRadius, that is actually a 10%\n * borderRadius in both states. If we animate between the two in pixels that will trigger\n * a paint each time. If we animate between the two in percentage we'll avoid a paint.\n */\nconst correctBorderRadius = {\n    correct: (latest, node) => {\n        if (!node.target)\n            return latest;\n        /**\n         * If latest is a string, if it's a percentage we can return immediately as it's\n         * going to be stretched appropriately. Otherwise, if it's a pixel, convert it to a number.\n         */\n        if (typeof latest === \"string\") {\n            if (px.test(latest)) {\n                latest = parseFloat(latest);\n            }\n            else {\n                return latest;\n            }\n        }\n        /**\n         * If latest is a number, it's a pixel value. We use the current viewportBox to calculate that\n         * pixel value as a percentage of each axis\n         */\n        const x = pixelsToPercent(latest, node.target.x);\n        const y = pixelsToPercent(latest, node.target.y);\n        return `${x}% ${y}%`;\n    },\n};\n\nexport { correctBorderRadius, pixelsToPercent };\n","import { mix } from '../../utils/mix.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\n\nconst correctBoxShadow = {\n    correct: (latest, { treeScale, projectionDelta }) => {\n        const original = latest;\n        const shadow = complex.parse(latest);\n        // TODO: Doesn't support multiple shadows\n        if (shadow.length > 5)\n            return original;\n        const template = complex.createTransformer(latest);\n        const offset = typeof shadow[0] !== \"number\" ? 1 : 0;\n        // Calculate the overall context scale\n        const xScale = projectionDelta.x.scale * treeScale.x;\n        const yScale = projectionDelta.y.scale * treeScale.y;\n        shadow[0 + offset] /= xScale;\n        shadow[1 + offset] /= yScale;\n        /**\n         * Ideally we'd correct x and y scales individually, but because blur and\n         * spread apply to both we have to take a scale average and apply that instead.\n         * We could potentially improve the outcome of this by incorporating the ratio between\n         * the two scales.\n         */\n        const averageScale = mix(xScale, yScale, 0.5);\n        // Blur\n        if (typeof shadow[2 + offset] === \"number\")\n            shadow[2 + offset] /= averageScale;\n        // Spread\n        if (typeof shadow[3 + offset] === \"number\")\n            shadow[3 + offset] /= averageScale;\n        return template(shadow);\n    },\n};\n\nexport { correctBoxShadow };\n","import { frame } from '../../../frameloop/index.mjs';\nimport React__default, { useContext } from 'react';\nimport { usePresence } from '../../../components/AnimatePresence/use-presence.mjs';\nimport { LayoutGroupContext } from '../../../context/LayoutGroupContext.mjs';\nimport { SwitchLayoutGroupContext } from '../../../context/SwitchLayoutGroupContext.mjs';\nimport { globalProjectionState } from '../../../projection/node/state.mjs';\nimport { correctBorderRadius } from '../../../projection/styles/scale-border-radius.mjs';\nimport { correctBoxShadow } from '../../../projection/styles/scale-box-shadow.mjs';\nimport { addScaleCorrector } from '../../../projection/styles/scale-correction.mjs';\n\nclass MeasureLayoutWithContext extends React__default.Component {\n    /**\n     * This only mounts projection nodes for components that\n     * need measuring, we might want to do it for all components\n     * in order to incorporate transforms\n     */\n    componentDidMount() {\n        const { visualElement, layoutGroup, switchLayoutGroup, layoutId } = this.props;\n        const { projection } = visualElement;\n        addScaleCorrector(defaultScaleCorrectors);\n        if (projection) {\n            if (layoutGroup.group)\n                layoutGroup.group.add(projection);\n            if (switchLayoutGroup && switchLayoutGroup.register && layoutId) {\n                switchLayoutGroup.register(projection);\n            }\n            projection.root.didUpdate();\n            projection.addEventListener(\"animationComplete\", () => {\n                this.safeToRemove();\n            });\n            projection.setOptions({\n                ...projection.options,\n                onExitComplete: () => this.safeToRemove(),\n            });\n        }\n        globalProjectionState.hasEverUpdated = true;\n    }\n    getSnapshotBeforeUpdate(prevProps) {\n        const { layoutDependency, visualElement, drag, isPresent } = this.props;\n        const projection = visualElement.projection;\n        if (!projection)\n            return null;\n        /**\n         * TODO: We use this data in relegate to determine whether to\n         * promote a previous element. There's no guarantee its presence data\n         * will have updated by this point - if a bug like this arises it will\n         * have to be that we markForRelegation and then find a new lead some other way,\n         * perhaps in didUpdate\n         */\n        projection.isPresent = isPresent;\n        if (drag ||\n            prevProps.layoutDependency !== layoutDependency ||\n            layoutDependency === undefined) {\n            projection.willUpdate();\n        }\n        else {\n            this.safeToRemove();\n        }\n        if (prevProps.isPresent !== isPresent) {\n            if (isPresent) {\n                projection.promote();\n            }\n            else if (!projection.relegate()) {\n                /**\n                 * If there's another stack member taking over from this one,\n                 * it's in charge of the exit animation and therefore should\n                 * be in charge of the safe to remove. Otherwise we call it here.\n                 */\n                frame.postRender(() => {\n                    const stack = projection.getStack();\n                    if (!stack || !stack.members.length) {\n                        this.safeToRemove();\n                    }\n                });\n            }\n        }\n        return null;\n    }\n    componentDidUpdate() {\n        const { projection } = this.props.visualElement;\n        if (projection) {\n            projection.root.didUpdate();\n            queueMicrotask(() => {\n                if (!projection.currentAnimation && projection.isLead()) {\n                    this.safeToRemove();\n                }\n            });\n        }\n    }\n    componentWillUnmount() {\n        const { visualElement, layoutGroup, switchLayoutGroup: promoteContext, } = this.props;\n        const { projection } = visualElement;\n        if (projection) {\n            projection.scheduleCheckAfterUnmount();\n            if (layoutGroup && layoutGroup.group)\n                layoutGroup.group.remove(projection);\n            if (promoteContext && promoteContext.deregister)\n                promoteContext.deregister(projection);\n        }\n    }\n    safeToRemove() {\n        const { safeToRemove } = this.props;\n        safeToRemove && safeToRemove();\n    }\n    render() {\n        return null;\n    }\n}\nfunction MeasureLayout(props) {\n    const [isPresent, safeToRemove] = usePresence();\n    const layoutGroup = useContext(LayoutGroupContext);\n    return (React__default.createElement(MeasureLayoutWithContext, { ...props, layoutGroup: layoutGroup, switchLayoutGroup: useContext(SwitchLayoutGroupContext), isPresent: isPresent, safeToRemove: safeToRemove }));\n}\nconst defaultScaleCorrectors = {\n    borderRadius: {\n        ...correctBorderRadius,\n        applyTo: [\n            \"borderTopLeftRadius\",\n            \"borderTopRightRadius\",\n            \"borderBottomLeftRadius\",\n            \"borderBottomRightRadius\",\n        ],\n    },\n    borderTopLeftRadius: correctBorderRadius,\n    borderTopRightRadius: correctBorderRadius,\n    borderBottomLeftRadius: correctBorderRadius,\n    borderBottomRightRadius: correctBorderRadius,\n    boxShadow: correctBoxShadow,\n};\n\nexport { MeasureLayout };\n","import { useContext, useId, useEffect } from 'react';\nimport { PresenceContext } from '../../context/PresenceContext.mjs';\n\n/**\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\n * to access information about whether it's still present in the React tree.\n *\n * ```jsx\n * import { usePresence } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const [isPresent, safeToRemove] = usePresence()\n *\n *   useEffect(() => {\n *     !isPresent && setTimeout(safeToRemove, 1000)\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\n *\n * @public\n */\nfunction usePresence() {\n    const context = useContext(PresenceContext);\n    if (context === null)\n        return [true, null];\n    const { isPresent, onExitComplete, register } = context;\n    // It's safe to call the following hooks conditionally (after an early return) because the context will always\n    // either be null or non-null for the lifespan of the component.\n    const id = useId();\n    useEffect(() => register(id), []);\n    const safeToRemove = () => onExitComplete && onExitComplete(id);\n    return !isPresent && onExitComplete ? [false, safeToRemove] : [true];\n}\n/**\n * Similar to `usePresence`, except `useIsPresent` simply returns whether or not the component is present.\n * There is no `safeToRemove` function.\n *\n * ```jsx\n * import { useIsPresent } from \"framer-motion\"\n *\n * export const Component = () => {\n *   const isPresent = useIsPresent()\n *\n *   useEffect(() => {\n *     !isPresent && console.log(\"I've been removed!\")\n *   }, [isPresent])\n *\n *   return <div />\n * }\n * ```\n *\n * @public\n */\nfunction useIsPresent() {\n    return isPresent(useContext(PresenceContext));\n}\nfunction isPresent(context) {\n    return context === null ? true : context.isPresent;\n}\n\nexport { isPresent, useIsPresent, usePresence };\n","import { circOut } from '../../easing/circ.mjs';\nimport { progress } from '../../utils/progress.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { noop } from '../../utils/noop.mjs';\nimport { percent, px } from '../../value/types/numbers/units.mjs';\n\nconst borders = [\"TopLeft\", \"TopRight\", \"BottomLeft\", \"BottomRight\"];\nconst numBorders = borders.length;\nconst asNumber = (value) => typeof value === \"string\" ? parseFloat(value) : value;\nconst isPx = (value) => typeof value === \"number\" || px.test(value);\nfunction mixValues(target, follow, lead, progress, shouldCrossfadeOpacity, isOnlyMember) {\n    if (shouldCrossfadeOpacity) {\n        target.opacity = mix(0, \n        // TODO Reinstate this if only child\n        lead.opacity !== undefined ? lead.opacity : 1, easeCrossfadeIn(progress));\n        target.opacityExit = mix(follow.opacity !== undefined ? follow.opacity : 1, 0, easeCrossfadeOut(progress));\n    }\n    else if (isOnlyMember) {\n        target.opacity = mix(follow.opacity !== undefined ? follow.opacity : 1, lead.opacity !== undefined ? lead.opacity : 1, progress);\n    }\n    /**\n     * Mix border radius\n     */\n    for (let i = 0; i < numBorders; i++) {\n        const borderLabel = `border${borders[i]}Radius`;\n        let followRadius = getRadius(follow, borderLabel);\n        let leadRadius = getRadius(lead, borderLabel);\n        if (followRadius === undefined && leadRadius === undefined)\n            continue;\n        followRadius || (followRadius = 0);\n        leadRadius || (leadRadius = 0);\n        const canMix = followRadius === 0 ||\n            leadRadius === 0 ||\n            isPx(followRadius) === isPx(leadRadius);\n        if (canMix) {\n            target[borderLabel] = Math.max(mix(asNumber(followRadius), asNumber(leadRadius), progress), 0);\n            if (percent.test(leadRadius) || percent.test(followRadius)) {\n                target[borderLabel] += \"%\";\n            }\n        }\n        else {\n            target[borderLabel] = leadRadius;\n        }\n    }\n    /**\n     * Mix rotation\n     */\n    if (follow.rotate || lead.rotate) {\n        target.rotate = mix(follow.rotate || 0, lead.rotate || 0, progress);\n    }\n}\nfunction getRadius(values, radiusName) {\n    return values[radiusName] !== undefined\n        ? values[radiusName]\n        : values.borderRadius;\n}\n// /**\n//  * We only want to mix the background color if there's a follow element\n//  * that we're not crossfading opacity between. For instance with switch\n//  * AnimateSharedLayout animations, this helps the illusion of a continuous\n//  * element being animated but also cuts down on the number of paints triggered\n//  * for elements where opacity is doing that work for us.\n//  */\n// if (\n//     !hasFollowElement &&\n//     latestLeadValues.backgroundColor &&\n//     latestFollowValues.backgroundColor\n// ) {\n//     /**\n//      * This isn't ideal performance-wise as mixColor is creating a new function every frame.\n//      * We could probably create a mixer that runs at the start of the animation but\n//      * the idea behind the crossfader is that it runs dynamically between two potentially\n//      * changing targets (ie opacity or borderRadius may be animating independently via variants)\n//      */\n//     leadState.backgroundColor = followState.backgroundColor = mixColor(\n//         latestFollowValues.backgroundColor as string,\n//         latestLeadValues.backgroundColor as string\n//     )(p)\n// }\nconst easeCrossfadeIn = compress(0, 0.5, circOut);\nconst easeCrossfadeOut = compress(0.5, 0.95, noop);\nfunction compress(min, max, easing) {\n    return (p) => {\n        // Could replace ifs with clamp\n        if (p < min)\n            return 0;\n        if (p > max)\n            return 1;\n        return easing(progress(min, max, p));\n    };\n}\n\nexport { mixValues };\n","/**\n * Reset an axis to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyAxisInto(axis, originAxis) {\n    axis.min = originAxis.min;\n    axis.max = originAxis.max;\n}\n/**\n * Reset a box to the provided origin box.\n *\n * This is a mutative operation.\n */\nfunction copyBoxInto(box, originBox) {\n    copyAxisInto(box.x, originBox.x);\n    copyAxisInto(box.y, originBox.y);\n}\n\nexport { copyAxisInto, copyBoxInto };\n","import { mix } from '../../utils/mix.mjs';\nimport { percent } from '../../value/types/numbers/units.mjs';\nimport { scalePoint } from './delta-apply.mjs';\n\n/**\n * Remove a delta from a point. This is essentially the steps of applyPointDelta in reverse\n */\nfunction removePointDelta(point, translate, scale, originPoint, boxScale) {\n    point -= translate;\n    point = scalePoint(point, 1 / scale, originPoint);\n    if (boxScale !== undefined) {\n        point = scalePoint(point, 1 / boxScale, originPoint);\n    }\n    return point;\n}\n/**\n * Remove a delta from an axis. This is essentially the steps of applyAxisDelta in reverse\n */\nfunction removeAxisDelta(axis, translate = 0, scale = 1, origin = 0.5, boxScale, originAxis = axis, sourceAxis = axis) {\n    if (percent.test(translate)) {\n        translate = parseFloat(translate);\n        const relativeProgress = mix(sourceAxis.min, sourceAxis.max, translate / 100);\n        translate = relativeProgress - sourceAxis.min;\n    }\n    if (typeof translate !== \"number\")\n        return;\n    let originPoint = mix(originAxis.min, originAxis.max, origin);\n    if (axis === originAxis)\n        originPoint -= translate;\n    axis.min = removePointDelta(axis.min, translate, scale, originPoint, boxScale);\n    axis.max = removePointDelta(axis.max, translate, scale, originPoint, boxScale);\n}\n/**\n * Remove a transforms from an axis. This is essentially the steps of applyAxisTransforms in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeAxisTransforms(axis, transforms, [key, scaleKey, originKey], origin, sourceAxis) {\n    removeAxisDelta(axis, transforms[key], transforms[scaleKey], transforms[originKey], transforms.scale, origin, sourceAxis);\n}\n/**\n * The names of the motion values we want to apply as translation, scale and origin.\n */\nconst xKeys = [\"x\", \"scaleX\", \"originX\"];\nconst yKeys = [\"y\", \"scaleY\", \"originY\"];\n/**\n * Remove a transforms from an box. This is essentially the steps of applyAxisBox in reverse\n * and acts as a bridge between motion values and removeAxisDelta\n */\nfunction removeBoxTransforms(box, transforms, originBox, sourceBox) {\n    removeAxisTransforms(box.x, transforms, xKeys, originBox ? originBox.x : undefined, sourceBox ? sourceBox.x : undefined);\n    removeAxisTransforms(box.y, transforms, yKeys, originBox ? originBox.y : undefined, sourceBox ? sourceBox.y : undefined);\n}\n\nexport { removeAxisDelta, removeAxisTransforms, removeBoxTransforms, removePointDelta };\n","import { calcLength } from './delta-calc.mjs';\n\nfunction isAxisDeltaZero(delta) {\n    return delta.translate === 0 && delta.scale === 1;\n}\nfunction isDeltaZero(delta) {\n    return isAxisDeltaZero(delta.x) && isAxisDeltaZero(delta.y);\n}\nfunction boxEquals(a, b) {\n    return (a.x.min === b.x.min &&\n        a.x.max === b.x.max &&\n        a.y.min === b.y.min &&\n        a.y.max === b.y.max);\n}\nfunction aspectRatio(box) {\n    return calcLength(box.x) / calcLength(box.y);\n}\n\nexport { aspectRatio, boxEquals, isDeltaZero };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\n\nclass NodeStack {\n    constructor() {\n        this.members = [];\n    }\n    add(node) {\n        addUniqueItem(this.members, node);\n        node.scheduleRender();\n    }\n    remove(node) {\n        removeItem(this.members, node);\n        if (node === this.prevLead) {\n            this.prevLead = undefined;\n        }\n        if (node === this.lead) {\n            const prevLead = this.members[this.members.length - 1];\n            if (prevLead) {\n                this.promote(prevLead);\n            }\n        }\n    }\n    relegate(node) {\n        const indexOfNode = this.members.findIndex((member) => node === member);\n        if (indexOfNode === 0)\n            return false;\n        /**\n         * Find the next projection node that is present\n         */\n        let prevLead;\n        for (let i = indexOfNode; i >= 0; i--) {\n            const member = this.members[i];\n            if (member.isPresent !== false) {\n                prevLead = member;\n                break;\n            }\n        }\n        if (prevLead) {\n            this.promote(prevLead);\n            return true;\n        }\n        else {\n            return false;\n        }\n    }\n    promote(node, preserveFollowOpacity) {\n        const prevLead = this.lead;\n        if (node === prevLead)\n            return;\n        this.prevLead = prevLead;\n        this.lead = node;\n        node.show();\n        if (prevLead) {\n            prevLead.instance && prevLead.scheduleRender();\n            node.scheduleRender();\n            node.resumeFrom = prevLead;\n            if (preserveFollowOpacity) {\n                node.resumeFrom.preserveOpacity = true;\n            }\n            if (prevLead.snapshot) {\n                node.snapshot = prevLead.snapshot;\n                node.snapshot.latestValues =\n                    prevLead.animationValues || prevLead.latestValues;\n            }\n            if (node.root && node.root.isUpdating) {\n                node.isLayoutDirty = true;\n            }\n            const { crossfade } = node.options;\n            if (crossfade === false) {\n                prevLead.hide();\n            }\n            /**\n             * TODO:\n             *   - Test border radius when previous node was deleted\n             *   - boxShadow mixing\n             *   - Shared between element A in scrolled container and element B (scroll stays the same or changes)\n             *   - Shared between element A in transformed container and element B (transform stays the same or changes)\n             *   - Shared between element A in scrolled page and element B (scroll stays the same or changes)\n             * ---\n             *   - Crossfade opacity of root nodes\n             *   - layoutId changes after animation\n             *   - layoutId changes mid animation\n             */\n        }\n    }\n    exitAnimationComplete() {\n        this.members.forEach((node) => {\n            const { options, resumingFrom } = node;\n            options.onExitComplete && options.onExitComplete();\n            if (resumingFrom) {\n                resumingFrom.options.onExitComplete &&\n                    resumingFrom.options.onExitComplete();\n            }\n        });\n    }\n    scheduleRender() {\n        this.members.forEach((node) => {\n            node.instance && node.scheduleRender(false);\n        });\n    }\n    /**\n     * Clear any leads that have been removed this render to prevent them from being\n     * used in future animations and to prevent memory leaks\n     */\n    removeLeadSnapshot() {\n        if (this.lead && this.lead.snapshot) {\n            this.lead.snapshot = undefined;\n        }\n    }\n}\n\nexport { NodeStack };\n","function buildProjectionTransform(delta, treeScale, latestTransform) {\n    let transform = \"\";\n    /**\n     * The translations we use to calculate are always relative to the viewport coordinate space.\n     * But when we apply scales, we also scale the coordinate space of an element and its children.\n     * For instance if we have a treeScale (the culmination of all parent scales) of 0.5 and we need\n     * to move an element 100 pixels, we actually need to move it 200 in within that scaled space.\n     */\n    const xTranslate = delta.x.translate / treeScale.x;\n    const yTranslate = delta.y.translate / treeScale.y;\n    if (xTranslate || yTranslate) {\n        transform = `translate3d(${xTranslate}px, ${yTranslate}px, 0) `;\n    }\n    /**\n     * Apply scale correction for the tree transform.\n     * This will apply scale to the screen-orientated axes.\n     */\n    if (treeScale.x !== 1 || treeScale.y !== 1) {\n        transform += `scale(${1 / treeScale.x}, ${1 / treeScale.y}) `;\n    }\n    if (latestTransform) {\n        const { rotate, rotateX, rotateY } = latestTransform;\n        if (rotate)\n            transform += `rotate(${rotate}deg) `;\n        if (rotateX)\n            transform += `rotateX(${rotateX}deg) `;\n        if (rotateY)\n            transform += `rotateY(${rotateY}deg) `;\n    }\n    /**\n     * Apply scale to match the size of the element to the size we want it.\n     * This will apply scale to the element-orientated axes.\n     */\n    const elementScaleX = delta.x.scale * treeScale.x;\n    const elementScaleY = delta.y.scale * treeScale.y;\n    if (elementScaleX !== 1 || elementScaleY !== 1) {\n        transform += `scale(${elementScaleX}, ${elementScaleY})`;\n    }\n    return transform || \"none\";\n}\n\nexport { buildProjectionTransform };\n","const compareByDepth = (a, b) => a.depth - b.depth;\n\nexport { compareByDepth };\n","import { addUniqueItem, removeItem } from '../../utils/array.mjs';\nimport { compareByDepth } from './compare-by-depth.mjs';\n\nclass FlatTree {\n    constructor() {\n        this.children = [];\n        this.isDirty = false;\n    }\n    add(child) {\n        addUniqueItem(this.children, child);\n        this.isDirty = true;\n    }\n    remove(child) {\n        removeItem(this.children, child);\n        this.isDirty = true;\n    }\n    forEach(callback) {\n        this.isDirty && this.children.sort(compareByDepth);\n        this.isDirty = false;\n        this.children.forEach(callback);\n    }\n}\n\nexport { FlatTree };\n","import { cancelFrame, steps, frame } from '../../frameloop/index.mjs';\nimport { SubscriptionManager } from '../../utils/subscription-manager.mjs';\nimport { mixValues } from '../animation/mix-values.mjs';\nimport { copyBoxInto } from '../geometry/copy.mjs';\nimport { translateAxis, transformBox, applyBoxDelta, applyTreeDeltas } from '../geometry/delta-apply.mjs';\nimport { calcRelativePosition, calcRelativeBox, calcBoxDelta, calcLength, isNear } from '../geometry/delta-calc.mjs';\nimport { removeBoxTransforms } from '../geometry/delta-remove.mjs';\nimport { createBox, createDelta } from '../geometry/models.mjs';\nimport { getValueTransition } from '../../animation/utils/transitions.mjs';\nimport { boxEquals, isDeltaZero, aspectRatio } from '../geometry/utils.mjs';\nimport { NodeStack } from '../shared/stack.mjs';\nimport { scaleCorrectors } from '../styles/scale-correction.mjs';\nimport { buildProjectionTransform } from '../styles/transform.mjs';\nimport { eachAxis } from '../utils/each-axis.mjs';\nimport { hasTransform, hasScale, has2DTranslate } from '../utils/has-transform.mjs';\nimport { FlatTree } from '../../render/utils/flat-tree.mjs';\nimport { resolveMotionValue } from '../../value/utils/resolve-motion-value.mjs';\nimport { globalProjectionState } from './state.mjs';\nimport { delay } from '../../utils/delay.mjs';\nimport { mix } from '../../utils/mix.mjs';\nimport { record } from '../../debug/record.mjs';\nimport { isSVGElement } from '../../render/dom/utils/is-svg-element.mjs';\nimport { animateSingleValue } from '../../animation/interfaces/single-value.mjs';\nimport { clamp } from '../../utils/clamp.mjs';\nimport { frameData } from '../../frameloop/data.mjs';\n\nconst transformAxes = [\"\", \"X\", \"Y\", \"Z\"];\n/**\n * We use 1000 as the animation target as 0-1000 maps better to pixels than 0-1\n * which has a noticeable difference in spring animations\n */\nconst animationTarget = 1000;\nlet id = 0;\n/**\n * Use a mutable data object for debug data so as to not create a new\n * object every frame.\n */\nconst projectionFrameData = {\n    type: \"projectionFrame\",\n    totalNodes: 0,\n    resolvedTargetDeltas: 0,\n    recalculatedProjection: 0,\n};\nfunction createProjectionNode({ attachResizeListener, defaultParent, measureScroll, checkIsScrollRoot, resetTransform, }) {\n    return class ProjectionNode {\n        constructor(latestValues = {}, parent = defaultParent === null || defaultParent === void 0 ? void 0 : defaultParent()) {\n            /**\n             * A unique ID generated for every projection node.\n             */\n            this.id = id++;\n            /**\n             * An id that represents a unique session instigated by startUpdate.\n             */\n            this.animationId = 0;\n            /**\n             * A Set containing all this component's children. This is used to iterate\n             * through the children.\n             *\n             * TODO: This could be faster to iterate as a flat array stored on the root node.\n             */\n            this.children = new Set();\n            /**\n             * Options for the node. We use this to configure what kind of layout animations\n             * we should perform (if any).\n             */\n            this.options = {};\n            /**\n             * We use this to detect when its safe to shut down part of a projection tree.\n             * We have to keep projecting children for scale correction and relative projection\n             * until all their parents stop performing layout animations.\n             */\n            this.isTreeAnimating = false;\n            this.isAnimationBlocked = false;\n            /**\n             * Flag to true if we think this layout has been changed. We can't always know this,\n             * currently we set it to true every time a component renders, or if it has a layoutDependency\n             * if that has changed between renders. Additionally, components can be grouped by LayoutGroup\n             * and if one node is dirtied, they all are.\n             */\n            this.isLayoutDirty = false;\n            /**\n             * Flag to true if we think the projection calculations for this node needs\n             * recalculating as a result of an updated transform or layout animation.\n             */\n            this.isProjectionDirty = false;\n            /**\n             * Flag to true if the layout *or* transform has changed. This then gets propagated\n             * throughout the projection tree, forcing any element below to recalculate on the next frame.\n             */\n            this.isSharedProjectionDirty = false;\n            /**\n             * Flag transform dirty. This gets propagated throughout the whole tree but is only\n             * respected by shared nodes.\n             */\n            this.isTransformDirty = false;\n            /**\n             * Block layout updates for instant layout transitions throughout the tree.\n             */\n            this.updateManuallyBlocked = false;\n            this.updateBlockedByResize = false;\n            /**\n             * Set to true between the start of the first `willUpdate` call and the end of the `didUpdate`\n             * call.\n             */\n            this.isUpdating = false;\n            /**\n             * If this is an SVG element we currently disable projection transforms\n             */\n            this.isSVG = false;\n            /**\n             * Flag to true (during promotion) if a node doing an instant layout transition needs to reset\n             * its projection styles.\n             */\n            this.needsReset = false;\n            /**\n             * Flags whether this node should have its transform reset prior to measuring.\n             */\n            this.shouldResetTransform = false;\n            /**\n             * An object representing the calculated contextual/accumulated/tree scale.\n             * This will be used to scale calculcated projection transforms, as these are\n             * calculated in screen-space but need to be scaled for elements to layoutly\n             * make it to their calculated destinations.\n             *\n             * TODO: Lazy-init\n             */\n            this.treeScale = { x: 1, y: 1 };\n            /**\n             *\n             */\n            this.eventHandlers = new Map();\n            this.hasTreeAnimated = false;\n            // Note: Currently only running on root node\n            this.updateScheduled = false;\n            this.checkUpdateFailed = () => {\n                if (this.isUpdating) {\n                    this.isUpdating = false;\n                    this.clearAllSnapshots();\n                }\n            };\n            /**\n             * This is a multi-step process as shared nodes might be of different depths. Nodes\n             * are sorted by depth order, so we need to resolve the entire tree before moving to\n             * the next step.\n             */\n            this.updateProjection = () => {\n                /**\n                 * Reset debug counts. Manually resetting rather than creating a new\n                 * object each frame.\n                 */\n                projectionFrameData.totalNodes =\n                    projectionFrameData.resolvedTargetDeltas =\n                        projectionFrameData.recalculatedProjection =\n                            0;\n                this.nodes.forEach(propagateDirtyNodes);\n                this.nodes.forEach(resolveTargetDelta);\n                this.nodes.forEach(calcProjection);\n                this.nodes.forEach(cleanDirtyNodes);\n                record(projectionFrameData);\n            };\n            this.hasProjected = false;\n            this.isVisible = true;\n            this.animationProgress = 0;\n            /**\n             * Shared layout\n             */\n            // TODO Only running on root node\n            this.sharedNodes = new Map();\n            this.latestValues = latestValues;\n            this.root = parent ? parent.root || parent : this;\n            this.path = parent ? [...parent.path, parent] : [];\n            this.parent = parent;\n            this.depth = parent ? parent.depth + 1 : 0;\n            for (let i = 0; i < this.path.length; i++) {\n                this.path[i].shouldResetTransform = true;\n            }\n            if (this.root === this)\n                this.nodes = new FlatTree();\n        }\n        addEventListener(name, handler) {\n            if (!this.eventHandlers.has(name)) {\n                this.eventHandlers.set(name, new SubscriptionManager());\n            }\n            return this.eventHandlers.get(name).add(handler);\n        }\n        notifyListeners(name, ...args) {\n            const subscriptionManager = this.eventHandlers.get(name);\n            subscriptionManager && subscriptionManager.notify(...args);\n        }\n        hasListeners(name) {\n            return this.eventHandlers.has(name);\n        }\n        /**\n         * Lifecycles\n         */\n        mount(instance, isLayoutDirty = this.root.hasTreeAnimated) {\n            if (this.instance)\n                return;\n            this.isSVG = isSVGElement(instance);\n            this.instance = instance;\n            const { layoutId, layout, visualElement } = this.options;\n            if (visualElement && !visualElement.current) {\n                visualElement.mount(instance);\n            }\n            this.root.nodes.add(this);\n            this.parent && this.parent.children.add(this);\n            if (isLayoutDirty && (layout || layoutId)) {\n                this.isLayoutDirty = true;\n            }\n            if (attachResizeListener) {\n                let cancelDelay;\n                const resizeUnblockUpdate = () => (this.root.updateBlockedByResize = false);\n                attachResizeListener(instance, () => {\n                    this.root.updateBlockedByResize = true;\n                    cancelDelay && cancelDelay();\n                    cancelDelay = delay(resizeUnblockUpdate, 250);\n                    if (globalProjectionState.hasAnimatedSinceResize) {\n                        globalProjectionState.hasAnimatedSinceResize = false;\n                        this.nodes.forEach(finishAnimation);\n                    }\n                });\n            }\n            if (layoutId) {\n                this.root.registerSharedNode(layoutId, this);\n            }\n            // Only register the handler if it requires layout animation\n            if (this.options.animate !== false &&\n                visualElement &&\n                (layoutId || layout)) {\n                this.addEventListener(\"didUpdate\", ({ delta, hasLayoutChanged, hasRelativeTargetChanged, layout: newLayout, }) => {\n                    if (this.isTreeAnimationBlocked()) {\n                        this.target = undefined;\n                        this.relativeTarget = undefined;\n                        return;\n                    }\n                    // TODO: Check here if an animation exists\n                    const layoutTransition = this.options.transition ||\n                        visualElement.getDefaultTransition() ||\n                        defaultLayoutTransition;\n                    const { onLayoutAnimationStart, onLayoutAnimationComplete, } = visualElement.getProps();\n                    /**\n                     * The target layout of the element might stay the same,\n                     * but its position relative to its parent has changed.\n                     */\n                    const targetChanged = !this.targetLayout ||\n                        !boxEquals(this.targetLayout, newLayout) ||\n                        hasRelativeTargetChanged;\n                    /**\n                     * If the layout hasn't seemed to have changed, it might be that the\n                     * element is visually in the same place in the document but its position\n                     * relative to its parent has indeed changed. So here we check for that.\n                     */\n                    const hasOnlyRelativeTargetChanged = !hasLayoutChanged && hasRelativeTargetChanged;\n                    if (this.options.layoutRoot ||\n                        (this.resumeFrom && this.resumeFrom.instance) ||\n                        hasOnlyRelativeTargetChanged ||\n                        (hasLayoutChanged &&\n                            (targetChanged || !this.currentAnimation))) {\n                        if (this.resumeFrom) {\n                            this.resumingFrom = this.resumeFrom;\n                            this.resumingFrom.resumingFrom = undefined;\n                        }\n                        this.setAnimationOrigin(delta, hasOnlyRelativeTargetChanged);\n                        const animationOptions = {\n                            ...getValueTransition(layoutTransition, \"layout\"),\n                            onPlay: onLayoutAnimationStart,\n                            onComplete: onLayoutAnimationComplete,\n                        };\n                        if (visualElement.shouldReduceMotion ||\n                            this.options.layoutRoot) {\n                            animationOptions.delay = 0;\n                            animationOptions.type = false;\n                        }\n                        this.startAnimation(animationOptions);\n                    }\n                    else {\n                        /**\n                         * If the layout hasn't changed and we have an animation that hasn't started yet,\n                         * finish it immediately. Otherwise it will be animating from a location\n                         * that was probably never commited to screen and look like a jumpy box.\n                         */\n                        if (!hasLayoutChanged) {\n                            finishAnimation(this);\n                        }\n                        if (this.isLead() && this.options.onExitComplete) {\n                            this.options.onExitComplete();\n                        }\n                    }\n                    this.targetLayout = newLayout;\n                });\n            }\n        }\n        unmount() {\n            this.options.layoutId && this.willUpdate();\n            this.root.nodes.remove(this);\n            const stack = this.getStack();\n            stack && stack.remove(this);\n            this.parent && this.parent.children.delete(this);\n            this.instance = undefined;\n            cancelFrame(this.updateProjection);\n        }\n        // only on the root\n        blockUpdate() {\n            this.updateManuallyBlocked = true;\n        }\n        unblockUpdate() {\n            this.updateManuallyBlocked = false;\n        }\n        isUpdateBlocked() {\n            return this.updateManuallyBlocked || this.updateBlockedByResize;\n        }\n        isTreeAnimationBlocked() {\n            return (this.isAnimationBlocked ||\n                (this.parent && this.parent.isTreeAnimationBlocked()) ||\n                false);\n        }\n        // Note: currently only running on root node\n        startUpdate() {\n            if (this.isUpdateBlocked())\n                return;\n            this.isUpdating = true;\n            this.nodes && this.nodes.forEach(resetRotation);\n            this.animationId++;\n        }\n        getTransformTemplate() {\n            const { visualElement } = this.options;\n            return visualElement && visualElement.getProps().transformTemplate;\n        }\n        willUpdate(shouldNotifyListeners = true) {\n            this.root.hasTreeAnimated = true;\n            if (this.root.isUpdateBlocked()) {\n                this.options.onExitComplete && this.options.onExitComplete();\n                return;\n            }\n            !this.root.isUpdating && this.root.startUpdate();\n            if (this.isLayoutDirty)\n                return;\n            this.isLayoutDirty = true;\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                node.shouldResetTransform = true;\n                node.updateScroll(\"snapshot\");\n                if (node.options.layoutRoot) {\n                    node.willUpdate(false);\n                }\n            }\n            const { layoutId, layout } = this.options;\n            if (layoutId === undefined && !layout)\n                return;\n            const transformTemplate = this.getTransformTemplate();\n            this.prevTransformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            this.updateSnapshot();\n            shouldNotifyListeners && this.notifyListeners(\"willUpdate\");\n        }\n        update() {\n            this.updateScheduled = false;\n            const updateWasBlocked = this.isUpdateBlocked();\n            // When doing an instant transition, we skip the layout update,\n            // but should still clean up the measurements so that the next\n            // snapshot could be taken correctly.\n            if (updateWasBlocked) {\n                this.unblockUpdate();\n                this.clearAllSnapshots();\n                this.nodes.forEach(clearMeasurements);\n                return;\n            }\n            if (!this.isUpdating) {\n                this.nodes.forEach(clearIsLayoutDirty);\n            }\n            this.isUpdating = false;\n            /**\n             * Write\n             */\n            this.nodes.forEach(resetTransformStyle);\n            /**\n             * Read ==================\n             */\n            // Update layout measurements of updated children\n            this.nodes.forEach(updateLayout);\n            /**\n             * Write\n             */\n            // Notify listeners that the layout is updated\n            this.nodes.forEach(notifyLayoutUpdate);\n            this.clearAllSnapshots();\n            /**\n             * Manually flush any pending updates. Ideally\n             * we could leave this to the following requestAnimationFrame but this seems\n             * to leave a flash of incorrectly styled content.\n             */\n            const now = performance.now();\n            frameData.delta = clamp(0, 1000 / 60, now - frameData.timestamp);\n            frameData.timestamp = now;\n            frameData.isProcessing = true;\n            steps.update.process(frameData);\n            steps.preRender.process(frameData);\n            steps.render.process(frameData);\n            frameData.isProcessing = false;\n        }\n        didUpdate() {\n            if (!this.updateScheduled) {\n                this.updateScheduled = true;\n                queueMicrotask(() => this.update());\n            }\n        }\n        clearAllSnapshots() {\n            this.nodes.forEach(clearSnapshot);\n            this.sharedNodes.forEach(removeLeadSnapshots);\n        }\n        scheduleUpdateProjection() {\n            frame.preRender(this.updateProjection, false, true);\n        }\n        scheduleCheckAfterUnmount() {\n            /**\n             * If the unmounting node is in a layoutGroup and did trigger a willUpdate,\n             * we manually call didUpdate to give a chance to the siblings to animate.\n             * Otherwise, cleanup all snapshots to prevents future nodes from reusing them.\n             */\n            frame.postRender(() => {\n                if (this.isLayoutDirty) {\n                    this.root.didUpdate();\n                }\n                else {\n                    this.root.checkUpdateFailed();\n                }\n            });\n        }\n        /**\n         * Update measurements\n         */\n        updateSnapshot() {\n            if (this.snapshot || !this.instance)\n                return;\n            this.snapshot = this.measure();\n        }\n        updateLayout() {\n            if (!this.instance)\n                return;\n            // TODO: Incorporate into a forwarded scroll offset\n            this.updateScroll();\n            if (!(this.options.alwaysMeasureLayout && this.isLead()) &&\n                !this.isLayoutDirty) {\n                return;\n            }\n            /**\n             * When a node is mounted, it simply resumes from the prevLead's\n             * snapshot instead of taking a new one, but the ancestors scroll\n             * might have updated while the prevLead is unmounted. We need to\n             * update the scroll again to make sure the layout we measure is\n             * up to date.\n             */\n            if (this.resumeFrom && !this.resumeFrom.instance) {\n                for (let i = 0; i < this.path.length; i++) {\n                    const node = this.path[i];\n                    node.updateScroll();\n                }\n            }\n            const prevLayout = this.layout;\n            this.layout = this.measure(false);\n            this.layoutCorrected = createBox();\n            this.isLayoutDirty = false;\n            this.projectionDelta = undefined;\n            this.notifyListeners(\"measure\", this.layout.layoutBox);\n            const { visualElement } = this.options;\n            visualElement &&\n                visualElement.notify(\"LayoutMeasure\", this.layout.layoutBox, prevLayout ? prevLayout.layoutBox : undefined);\n        }\n        updateScroll(phase = \"measure\") {\n            let needsMeasurement = Boolean(this.options.layoutScroll && this.instance);\n            if (this.scroll &&\n                this.scroll.animationId === this.root.animationId &&\n                this.scroll.phase === phase) {\n                needsMeasurement = false;\n            }\n            if (needsMeasurement) {\n                this.scroll = {\n                    animationId: this.root.animationId,\n                    phase,\n                    isRoot: checkIsScrollRoot(this.instance),\n                    offset: measureScroll(this.instance),\n                };\n            }\n        }\n        resetTransform() {\n            if (!resetTransform)\n                return;\n            const isResetRequested = this.isLayoutDirty || this.shouldResetTransform;\n            const hasProjection = this.projectionDelta && !isDeltaZero(this.projectionDelta);\n            const transformTemplate = this.getTransformTemplate();\n            const transformTemplateValue = transformTemplate\n                ? transformTemplate(this.latestValues, \"\")\n                : undefined;\n            const transformTemplateHasChanged = transformTemplateValue !== this.prevTransformTemplateValue;\n            if (isResetRequested &&\n                (hasProjection ||\n                    hasTransform(this.latestValues) ||\n                    transformTemplateHasChanged)) {\n                resetTransform(this.instance, transformTemplateValue);\n                this.shouldResetTransform = false;\n                this.scheduleRender();\n            }\n        }\n        measure(removeTransform = true) {\n            const pageBox = this.measurePageBox();\n            let layoutBox = this.removeElementScroll(pageBox);\n            /**\n             * Measurements taken during the pre-render stage\n             * still have transforms applied so we remove them\n             * via calculation.\n             */\n            if (removeTransform) {\n                layoutBox = this.removeTransform(layoutBox);\n            }\n            roundBox(layoutBox);\n            return {\n                animationId: this.root.animationId,\n                measuredBox: pageBox,\n                layoutBox,\n                latestValues: {},\n                source: this.id,\n            };\n        }\n        measurePageBox() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return createBox();\n            const box = visualElement.measureViewportBox();\n            // Remove viewport scroll to give page-relative coordinates\n            const { scroll } = this.root;\n            if (scroll) {\n                translateAxis(box.x, scroll.offset.x);\n                translateAxis(box.y, scroll.offset.y);\n            }\n            return box;\n        }\n        removeElementScroll(box) {\n            const boxWithoutScroll = createBox();\n            copyBoxInto(boxWithoutScroll, box);\n            /**\n             * Performance TODO: Keep a cumulative scroll offset down the tree\n             * rather than loop back up the path.\n             */\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                const { scroll, options } = node;\n                if (node !== this.root && scroll && options.layoutScroll) {\n                    /**\n                     * If this is a new scroll root, we want to remove all previous scrolls\n                     * from the viewport box.\n                     */\n                    if (scroll.isRoot) {\n                        copyBoxInto(boxWithoutScroll, box);\n                        const { scroll: rootScroll } = this.root;\n                        /**\n                         * Undo the application of page scroll that was originally added\n                         * to the measured bounding box.\n                         */\n                        if (rootScroll) {\n                            translateAxis(boxWithoutScroll.x, -rootScroll.offset.x);\n                            translateAxis(boxWithoutScroll.y, -rootScroll.offset.y);\n                        }\n                    }\n                    translateAxis(boxWithoutScroll.x, scroll.offset.x);\n                    translateAxis(boxWithoutScroll.y, scroll.offset.y);\n                }\n            }\n            return boxWithoutScroll;\n        }\n        applyTransform(box, transformOnly = false) {\n            const withTransforms = createBox();\n            copyBoxInto(withTransforms, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!transformOnly &&\n                    node.options.layoutScroll &&\n                    node.scroll &&\n                    node !== node.root) {\n                    transformBox(withTransforms, {\n                        x: -node.scroll.offset.x,\n                        y: -node.scroll.offset.y,\n                    });\n                }\n                if (!hasTransform(node.latestValues))\n                    continue;\n                transformBox(withTransforms, node.latestValues);\n            }\n            if (hasTransform(this.latestValues)) {\n                transformBox(withTransforms, this.latestValues);\n            }\n            return withTransforms;\n        }\n        removeTransform(box) {\n            const boxWithoutTransform = createBox();\n            copyBoxInto(boxWithoutTransform, box);\n            for (let i = 0; i < this.path.length; i++) {\n                const node = this.path[i];\n                if (!node.instance)\n                    continue;\n                if (!hasTransform(node.latestValues))\n                    continue;\n                hasScale(node.latestValues) && node.updateSnapshot();\n                const sourceBox = createBox();\n                const nodeBox = node.measurePageBox();\n                copyBoxInto(sourceBox, nodeBox);\n                removeBoxTransforms(boxWithoutTransform, node.latestValues, node.snapshot ? node.snapshot.layoutBox : undefined, sourceBox);\n            }\n            if (hasTransform(this.latestValues)) {\n                removeBoxTransforms(boxWithoutTransform, this.latestValues);\n            }\n            return boxWithoutTransform;\n        }\n        setTargetDelta(delta) {\n            this.targetDelta = delta;\n            this.root.scheduleUpdateProjection();\n            this.isProjectionDirty = true;\n        }\n        setOptions(options) {\n            this.options = {\n                ...this.options,\n                ...options,\n                crossfade: options.crossfade !== undefined ? options.crossfade : true,\n            };\n        }\n        clearMeasurements() {\n            this.scroll = undefined;\n            this.layout = undefined;\n            this.snapshot = undefined;\n            this.prevTransformTemplateValue = undefined;\n            this.targetDelta = undefined;\n            this.target = undefined;\n            this.isLayoutDirty = false;\n        }\n        forceRelativeParentToResolveTarget() {\n            if (!this.relativeParent)\n                return;\n            /**\n             * If the parent target isn't up-to-date, force it to update.\n             * This is an unfortunate de-optimisation as it means any updating relative\n             * projection will cause all the relative parents to recalculate back\n             * up the tree.\n             */\n            if (this.relativeParent.resolvedRelativeTargetAt !==\n                frameData.timestamp) {\n                this.relativeParent.resolveTargetDelta(true);\n            }\n        }\n        resolveTargetDelta(forceRecalculation = false) {\n            var _a;\n            /**\n             * Once the dirty status of nodes has been spread through the tree, we also\n             * need to check if we have a shared node of a different depth that has itself\n             * been dirtied.\n             */\n            const lead = this.getLead();\n            this.isProjectionDirty || (this.isProjectionDirty = lead.isProjectionDirty);\n            this.isTransformDirty || (this.isTransformDirty = lead.isTransformDirty);\n            this.isSharedProjectionDirty || (this.isSharedProjectionDirty = lead.isSharedProjectionDirty);\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            /**\n             * We don't use transform for this step of processing so we don't\n             * need to check whether any nodes have changed transform.\n             */\n            const canSkip = !(forceRecalculation ||\n                (isShared && this.isSharedProjectionDirty) ||\n                this.isProjectionDirty ||\n                ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty) ||\n                this.attemptToResolveRelativeTarget);\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If we have no layout, we can't perform projection, so early return\n             */\n            if (!this.layout || !(layout || layoutId))\n                return;\n            this.resolvedRelativeTargetAt = frameData.timestamp;\n            /**\n             * If we don't have a targetDelta but do have a layout, we can attempt to resolve\n             * a relativeParent. This will allow a component to perform scale correction\n             * even if no animation has started.\n             */\n            // TODO If this is unsuccessful this currently happens every frame\n            if (!this.targetDelta && !this.relativeTarget) {\n                // TODO: This is a semi-repetition of further down this function, make DRY\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    relativeParent.layout &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.layout.layoutBox, relativeParent.layout.layoutBox);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * If we have no relative target or no target delta our target isn't valid\n             * for this frame.\n             */\n            if (!this.relativeTarget && !this.targetDelta)\n                return;\n            /**\n             * Lazy-init target data structure\n             */\n            if (!this.target) {\n                this.target = createBox();\n                this.targetWithTransforms = createBox();\n            }\n            /**\n             * If we've got a relative box for this component, resolve it into a target relative to the parent.\n             */\n            if (this.relativeTarget &&\n                this.relativeTargetOrigin &&\n                this.relativeParent &&\n                this.relativeParent.target) {\n                this.forceRelativeParentToResolveTarget();\n                calcRelativeBox(this.target, this.relativeTarget, this.relativeParent.target);\n                /**\n                 * If we've only got a targetDelta, resolve it into a target\n                 */\n            }\n            else if (this.targetDelta) {\n                if (Boolean(this.resumingFrom)) {\n                    // TODO: This is creating a new object every frame\n                    this.target = this.applyTransform(this.layout.layoutBox);\n                }\n                else {\n                    copyBoxInto(this.target, this.layout.layoutBox);\n                }\n                applyBoxDelta(this.target, this.targetDelta);\n            }\n            else {\n                /**\n                 * If no target, use own layout as target\n                 */\n                copyBoxInto(this.target, this.layout.layoutBox);\n            }\n            /**\n             * If we've been told to attempt to resolve a relative target, do so.\n             */\n            if (this.attemptToResolveRelativeTarget) {\n                this.attemptToResolveRelativeTarget = false;\n                const relativeParent = this.getClosestProjectingParent();\n                if (relativeParent &&\n                    Boolean(relativeParent.resumingFrom) ===\n                        Boolean(this.resumingFrom) &&\n                    !relativeParent.options.layoutScroll &&\n                    relativeParent.target &&\n                    this.animationProgress !== 1) {\n                    this.relativeParent = relativeParent;\n                    this.forceRelativeParentToResolveTarget();\n                    this.relativeTarget = createBox();\n                    this.relativeTargetOrigin = createBox();\n                    calcRelativePosition(this.relativeTargetOrigin, this.target, relativeParent.target);\n                    copyBoxInto(this.relativeTarget, this.relativeTargetOrigin);\n                }\n                else {\n                    this.relativeParent = this.relativeTarget = undefined;\n                }\n            }\n            /**\n             * Increase debug counter for resolved target deltas\n             */\n            projectionFrameData.resolvedTargetDeltas++;\n        }\n        getClosestProjectingParent() {\n            if (!this.parent ||\n                hasScale(this.parent.latestValues) ||\n                has2DTranslate(this.parent.latestValues)) {\n                return undefined;\n            }\n            if (this.parent.isProjecting()) {\n                return this.parent;\n            }\n            else {\n                return this.parent.getClosestProjectingParent();\n            }\n        }\n        isProjecting() {\n            return Boolean((this.relativeTarget ||\n                this.targetDelta ||\n                this.options.layoutRoot) &&\n                this.layout);\n        }\n        calcProjection() {\n            var _a;\n            const lead = this.getLead();\n            const isShared = Boolean(this.resumingFrom) || this !== lead;\n            let canSkip = true;\n            /**\n             * If this is a normal layout animation and neither this node nor its nearest projecting\n             * is dirty then we can't skip.\n             */\n            if (this.isProjectionDirty || ((_a = this.parent) === null || _a === void 0 ? void 0 : _a.isProjectionDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If this is a shared layout animation and this node's shared projection is dirty then\n             * we can't skip.\n             */\n            if (isShared &&\n                (this.isSharedProjectionDirty || this.isTransformDirty)) {\n                canSkip = false;\n            }\n            /**\n             * If we have resolved the target this frame we must recalculate the\n             * projection to ensure it visually represents the internal calculations.\n             */\n            if (this.resolvedRelativeTargetAt === frameData.timestamp) {\n                canSkip = false;\n            }\n            if (canSkip)\n                return;\n            const { layout, layoutId } = this.options;\n            /**\n             * If this section of the tree isn't animating we can\n             * delete our target sources for the following frame.\n             */\n            this.isTreeAnimating = Boolean((this.parent && this.parent.isTreeAnimating) ||\n                this.currentAnimation ||\n                this.pendingAnimation);\n            if (!this.isTreeAnimating) {\n                this.targetDelta = this.relativeTarget = undefined;\n            }\n            if (!this.layout || !(layout || layoutId))\n                return;\n            /**\n             * Reset the corrected box with the latest values from box, as we're then going\n             * to perform mutative operations on it.\n             */\n            copyBoxInto(this.layoutCorrected, this.layout.layoutBox);\n            /**\n             * Record previous tree scales before updating.\n             */\n            const prevTreeScaleX = this.treeScale.x;\n            const prevTreeScaleY = this.treeScale.y;\n            /**\n             * Apply all the parent deltas to this box to produce the corrected box. This\n             * is the layout box, as it will appear on screen as a result of the transforms of its parents.\n             */\n            applyTreeDeltas(this.layoutCorrected, this.treeScale, this.path, isShared);\n            /**\n             * If this layer needs to perform scale correction but doesn't have a target,\n             * use the layout as the target.\n             */\n            if (lead.layout &&\n                !lead.target &&\n                (this.treeScale.x !== 1 || this.treeScale.y !== 1)) {\n                lead.target = lead.layout.layoutBox;\n            }\n            const { target } = lead;\n            if (!target) {\n                /**\n                 * If we don't have a target to project into, but we were previously\n                 * projecting, we want to remove the stored transform and schedule\n                 * a render to ensure the elements reflect the removed transform.\n                 */\n                if (this.projectionTransform) {\n                    this.projectionDelta = createDelta();\n                    this.projectionTransform = \"none\";\n                    this.scheduleRender();\n                }\n                return;\n            }\n            if (!this.projectionDelta) {\n                this.projectionDelta = createDelta();\n                this.projectionDeltaWithTransform = createDelta();\n            }\n            const prevProjectionTransform = this.projectionTransform;\n            /**\n             * Update the delta between the corrected box and the target box before user-set transforms were applied.\n             * This will allow us to calculate the corrected borderRadius and boxShadow to compensate\n             * for our layout reprojection, but still allow them to be scaled correctly by the user.\n             * It might be that to simplify this we may want to accept that user-set scale is also corrected\n             * and we wouldn't have to keep and calc both deltas, OR we could support a user setting\n             * to allow people to choose whether these styles are corrected based on just the\n             * layout reprojection or the final bounding box.\n             */\n            calcBoxDelta(this.projectionDelta, this.layoutCorrected, target, this.latestValues);\n            this.projectionTransform = buildProjectionTransform(this.projectionDelta, this.treeScale);\n            if (this.projectionTransform !== prevProjectionTransform ||\n                this.treeScale.x !== prevTreeScaleX ||\n                this.treeScale.y !== prevTreeScaleY) {\n                this.hasProjected = true;\n                this.scheduleRender();\n                this.notifyListeners(\"projectionUpdate\", target);\n            }\n            /**\n             * Increase debug counter for recalculated projections\n             */\n            projectionFrameData.recalculatedProjection++;\n        }\n        hide() {\n            this.isVisible = false;\n            // TODO: Schedule render\n        }\n        show() {\n            this.isVisible = true;\n            // TODO: Schedule render\n        }\n        scheduleRender(notifyAll = true) {\n            this.options.scheduleRender && this.options.scheduleRender();\n            if (notifyAll) {\n                const stack = this.getStack();\n                stack && stack.scheduleRender();\n            }\n            if (this.resumingFrom && !this.resumingFrom.instance) {\n                this.resumingFrom = undefined;\n            }\n        }\n        setAnimationOrigin(delta, hasOnlyRelativeTargetChanged = false) {\n            const snapshot = this.snapshot;\n            const snapshotLatestValues = snapshot\n                ? snapshot.latestValues\n                : {};\n            const mixedValues = { ...this.latestValues };\n            const targetDelta = createDelta();\n            if (!this.relativeParent ||\n                !this.relativeParent.options.layoutRoot) {\n                this.relativeTarget = this.relativeTargetOrigin = undefined;\n            }\n            this.attemptToResolveRelativeTarget = !hasOnlyRelativeTargetChanged;\n            const relativeLayout = createBox();\n            const snapshotSource = snapshot ? snapshot.source : undefined;\n            const layoutSource = this.layout ? this.layout.source : undefined;\n            const isSharedLayoutAnimation = snapshotSource !== layoutSource;\n            const stack = this.getStack();\n            const isOnlyMember = !stack || stack.members.length <= 1;\n            const shouldCrossfadeOpacity = Boolean(isSharedLayoutAnimation &&\n                !isOnlyMember &&\n                this.options.crossfade === true &&\n                !this.path.some(hasOpacityCrossfade));\n            this.animationProgress = 0;\n            let prevRelativeTarget;\n            this.mixTargetDelta = (latest) => {\n                const progress = latest / 1000;\n                mixAxisDelta(targetDelta.x, delta.x, progress);\n                mixAxisDelta(targetDelta.y, delta.y, progress);\n                this.setTargetDelta(targetDelta);\n                if (this.relativeTarget &&\n                    this.relativeTargetOrigin &&\n                    this.layout &&\n                    this.relativeParent &&\n                    this.relativeParent.layout) {\n                    calcRelativePosition(relativeLayout, this.layout.layoutBox, this.relativeParent.layout.layoutBox);\n                    mixBox(this.relativeTarget, this.relativeTargetOrigin, relativeLayout, progress);\n                    /**\n                     * If this is an unchanged relative target we can consider the\n                     * projection not dirty.\n                     */\n                    if (prevRelativeTarget &&\n                        boxEquals(this.relativeTarget, prevRelativeTarget)) {\n                        this.isProjectionDirty = false;\n                    }\n                    if (!prevRelativeTarget)\n                        prevRelativeTarget = createBox();\n                    copyBoxInto(prevRelativeTarget, this.relativeTarget);\n                }\n                if (isSharedLayoutAnimation) {\n                    this.animationValues = mixedValues;\n                    mixValues(mixedValues, snapshotLatestValues, this.latestValues, progress, shouldCrossfadeOpacity, isOnlyMember);\n                }\n                this.root.scheduleUpdateProjection();\n                this.scheduleRender();\n                this.animationProgress = progress;\n            };\n            this.mixTargetDelta(this.options.layoutRoot ? 1000 : 0);\n        }\n        startAnimation(options) {\n            this.notifyListeners(\"animationStart\");\n            this.currentAnimation && this.currentAnimation.stop();\n            if (this.resumingFrom && this.resumingFrom.currentAnimation) {\n                this.resumingFrom.currentAnimation.stop();\n            }\n            if (this.pendingAnimation) {\n                cancelFrame(this.pendingAnimation);\n                this.pendingAnimation = undefined;\n            }\n            /**\n             * Start the animation in the next frame to have a frame with progress 0,\n             * where the target is the same as when the animation started, so we can\n             * calculate the relative positions correctly for instant transitions.\n             */\n            this.pendingAnimation = frame.update(() => {\n                globalProjectionState.hasAnimatedSinceResize = true;\n                this.currentAnimation = animateSingleValue(0, animationTarget, {\n                    ...options,\n                    onUpdate: (latest) => {\n                        this.mixTargetDelta(latest);\n                        options.onUpdate && options.onUpdate(latest);\n                    },\n                    onComplete: () => {\n                        options.onComplete && options.onComplete();\n                        this.completeAnimation();\n                    },\n                });\n                if (this.resumingFrom) {\n                    this.resumingFrom.currentAnimation = this.currentAnimation;\n                }\n                this.pendingAnimation = undefined;\n            });\n        }\n        completeAnimation() {\n            if (this.resumingFrom) {\n                this.resumingFrom.currentAnimation = undefined;\n                this.resumingFrom.preserveOpacity = undefined;\n            }\n            const stack = this.getStack();\n            stack && stack.exitAnimationComplete();\n            this.resumingFrom =\n                this.currentAnimation =\n                    this.animationValues =\n                        undefined;\n            this.notifyListeners(\"animationComplete\");\n        }\n        finishAnimation() {\n            if (this.currentAnimation) {\n                this.mixTargetDelta && this.mixTargetDelta(animationTarget);\n                this.currentAnimation.stop();\n            }\n            this.completeAnimation();\n        }\n        applyTransformsToTarget() {\n            const lead = this.getLead();\n            let { targetWithTransforms, target, layout, latestValues } = lead;\n            if (!targetWithTransforms || !target || !layout)\n                return;\n            /**\n             * If we're only animating position, and this element isn't the lead element,\n             * then instead of projecting into the lead box we instead want to calculate\n             * a new target that aligns the two boxes but maintains the layout shape.\n             */\n            if (this !== lead &&\n                this.layout &&\n                layout &&\n                shouldAnimatePositionOnly(this.options.animationType, this.layout.layoutBox, layout.layoutBox)) {\n                target = this.target || createBox();\n                const xLength = calcLength(this.layout.layoutBox.x);\n                target.x.min = lead.target.x.min;\n                target.x.max = target.x.min + xLength;\n                const yLength = calcLength(this.layout.layoutBox.y);\n                target.y.min = lead.target.y.min;\n                target.y.max = target.y.min + yLength;\n            }\n            copyBoxInto(targetWithTransforms, target);\n            /**\n             * Apply the latest user-set transforms to the targetBox to produce the targetBoxFinal.\n             * This is the final box that we will then project into by calculating a transform delta and\n             * applying it to the corrected box.\n             */\n            transformBox(targetWithTransforms, latestValues);\n            /**\n             * Update the delta between the corrected box and the final target box, after\n             * user-set transforms are applied to it. This will be used by the renderer to\n             * create a transform style that will reproject the element from its layout layout\n             * into the desired bounding box.\n             */\n            calcBoxDelta(this.projectionDeltaWithTransform, this.layoutCorrected, targetWithTransforms, latestValues);\n        }\n        registerSharedNode(layoutId, node) {\n            if (!this.sharedNodes.has(layoutId)) {\n                this.sharedNodes.set(layoutId, new NodeStack());\n            }\n            const stack = this.sharedNodes.get(layoutId);\n            stack.add(node);\n            const config = node.options.initialPromotionConfig;\n            node.promote({\n                transition: config ? config.transition : undefined,\n                preserveFollowOpacity: config && config.shouldPreserveFollowOpacity\n                    ? config.shouldPreserveFollowOpacity(node)\n                    : undefined,\n            });\n        }\n        isLead() {\n            const stack = this.getStack();\n            return stack ? stack.lead === this : true;\n        }\n        getLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? ((_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.lead) || this : this;\n        }\n        getPrevLead() {\n            var _a;\n            const { layoutId } = this.options;\n            return layoutId ? (_a = this.getStack()) === null || _a === void 0 ? void 0 : _a.prevLead : undefined;\n        }\n        getStack() {\n            const { layoutId } = this.options;\n            if (layoutId)\n                return this.root.sharedNodes.get(layoutId);\n        }\n        promote({ needsReset, transition, preserveFollowOpacity, } = {}) {\n            const stack = this.getStack();\n            if (stack)\n                stack.promote(this, preserveFollowOpacity);\n            if (needsReset) {\n                this.projectionDelta = undefined;\n                this.needsReset = true;\n            }\n            if (transition)\n                this.setOptions({ transition });\n        }\n        relegate() {\n            const stack = this.getStack();\n            if (stack) {\n                return stack.relegate(this);\n            }\n            else {\n                return false;\n            }\n        }\n        resetRotation() {\n            const { visualElement } = this.options;\n            if (!visualElement)\n                return;\n            // If there's no detected rotation values, we can early return without a forced render.\n            let hasRotate = false;\n            /**\n             * An unrolled check for rotation values. Most elements don't have any rotation and\n             * skipping the nested loop and new object creation is 50% faster.\n             */\n            const { latestValues } = visualElement;\n            if (latestValues.rotate ||\n                latestValues.rotateX ||\n                latestValues.rotateY ||\n                latestValues.rotateZ) {\n                hasRotate = true;\n            }\n            // If there's no rotation values, we don't need to do any more.\n            if (!hasRotate)\n                return;\n            const resetValues = {};\n            // Check the rotate value of all axes and reset to 0\n            for (let i = 0; i < transformAxes.length; i++) {\n                const key = \"rotate\" + transformAxes[i];\n                // Record the rotation and then temporarily set it to 0\n                if (latestValues[key]) {\n                    resetValues[key] = latestValues[key];\n                    visualElement.setStaticValue(key, 0);\n                }\n            }\n            // Force a render of this element to apply the transform with all rotations\n            // set to 0.\n            visualElement.render();\n            // Put back all the values we reset\n            for (const key in resetValues) {\n                visualElement.setStaticValue(key, resetValues[key]);\n            }\n            // Schedule a render for the next frame. This ensures we won't visually\n            // see the element with the reset rotate value applied.\n            visualElement.scheduleRender();\n        }\n        getProjectionStyles(styleProp = {}) {\n            var _a, _b;\n            // TODO: Return lifecycle-persistent object\n            const styles = {};\n            if (!this.instance || this.isSVG)\n                return styles;\n            if (!this.isVisible) {\n                return { visibility: \"hidden\" };\n            }\n            else {\n                styles.visibility = \"\";\n            }\n            const transformTemplate = this.getTransformTemplate();\n            if (this.needsReset) {\n                this.needsReset = false;\n                styles.opacity = \"\";\n                styles.pointerEvents =\n                    resolveMotionValue(styleProp.pointerEvents) || \"\";\n                styles.transform = transformTemplate\n                    ? transformTemplate(this.latestValues, \"\")\n                    : \"none\";\n                return styles;\n            }\n            const lead = this.getLead();\n            if (!this.projectionDelta || !this.layout || !lead.target) {\n                const emptyStyles = {};\n                if (this.options.layoutId) {\n                    emptyStyles.opacity =\n                        this.latestValues.opacity !== undefined\n                            ? this.latestValues.opacity\n                            : 1;\n                    emptyStyles.pointerEvents =\n                        resolveMotionValue(styleProp.pointerEvents) || \"\";\n                }\n                if (this.hasProjected && !hasTransform(this.latestValues)) {\n                    emptyStyles.transform = transformTemplate\n                        ? transformTemplate({}, \"\")\n                        : \"none\";\n                    this.hasProjected = false;\n                }\n                return emptyStyles;\n            }\n            const valuesToRender = lead.animationValues || lead.latestValues;\n            this.applyTransformsToTarget();\n            styles.transform = buildProjectionTransform(this.projectionDeltaWithTransform, this.treeScale, valuesToRender);\n            if (transformTemplate) {\n                styles.transform = transformTemplate(valuesToRender, styles.transform);\n            }\n            const { x, y } = this.projectionDelta;\n            styles.transformOrigin = `${x.origin * 100}% ${y.origin * 100}% 0`;\n            if (lead.animationValues) {\n                /**\n                 * If the lead component is animating, assign this either the entering/leaving\n                 * opacity\n                 */\n                styles.opacity =\n                    lead === this\n                        ? (_b = (_a = valuesToRender.opacity) !== null && _a !== void 0 ? _a : this.latestValues.opacity) !== null && _b !== void 0 ? _b : 1\n                        : this.preserveOpacity\n                            ? this.latestValues.opacity\n                            : valuesToRender.opacityExit;\n            }\n            else {\n                /**\n                 * Or we're not animating at all, set the lead component to its layout\n                 * opacity and other components to hidden.\n                 */\n                styles.opacity =\n                    lead === this\n                        ? valuesToRender.opacity !== undefined\n                            ? valuesToRender.opacity\n                            : \"\"\n                        : valuesToRender.opacityExit !== undefined\n                            ? valuesToRender.opacityExit\n                            : 0;\n            }\n            /**\n             * Apply scale correction\n             */\n            for (const key in scaleCorrectors) {\n                if (valuesToRender[key] === undefined)\n                    continue;\n                const { correct, applyTo } = scaleCorrectors[key];\n                /**\n                 * Only apply scale correction to the value if we have an\n                 * active projection transform. Otherwise these values become\n                 * vulnerable to distortion if the element changes size without\n                 * a corresponding layout animation.\n                 */\n                const corrected = styles.transform === \"none\"\n                    ? valuesToRender[key]\n                    : correct(valuesToRender[key], lead);\n                if (applyTo) {\n                    const num = applyTo.length;\n                    for (let i = 0; i < num; i++) {\n                        styles[applyTo[i]] = corrected;\n                    }\n                }\n                else {\n                    styles[key] = corrected;\n                }\n            }\n            /**\n             * Disable pointer events on follow components. This is to ensure\n             * that if a follow component covers a lead component it doesn't block\n             * pointer events on the lead.\n             */\n            if (this.options.layoutId) {\n                styles.pointerEvents =\n                    lead === this\n                        ? resolveMotionValue(styleProp.pointerEvents) || \"\"\n                        : \"none\";\n            }\n            return styles;\n        }\n        clearSnapshot() {\n            this.resumeFrom = this.snapshot = undefined;\n        }\n        // Only run on root\n        resetTree() {\n            this.root.nodes.forEach((node) => { var _a; return (_a = node.currentAnimation) === null || _a === void 0 ? void 0 : _a.stop(); });\n            this.root.nodes.forEach(clearMeasurements);\n            this.root.sharedNodes.clear();\n        }\n    };\n}\nfunction updateLayout(node) {\n    node.updateLayout();\n}\nfunction notifyLayoutUpdate(node) {\n    var _a;\n    const snapshot = ((_a = node.resumeFrom) === null || _a === void 0 ? void 0 : _a.snapshot) || node.snapshot;\n    if (node.isLead() &&\n        node.layout &&\n        snapshot &&\n        node.hasListeners(\"didUpdate\")) {\n        const { layoutBox: layout, measuredBox: measuredLayout } = node.layout;\n        const { animationType } = node.options;\n        const isShared = snapshot.source !== node.layout.source;\n        // TODO Maybe we want to also resize the layout snapshot so we don't trigger\n        // animations for instance if layout=\"size\" and an element has only changed position\n        if (animationType === \"size\") {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(axisSnapshot);\n                axisSnapshot.min = layout[axis].min;\n                axisSnapshot.max = axisSnapshot.min + length;\n            });\n        }\n        else if (shouldAnimatePositionOnly(animationType, snapshot.layoutBox, layout)) {\n            eachAxis((axis) => {\n                const axisSnapshot = isShared\n                    ? snapshot.measuredBox[axis]\n                    : snapshot.layoutBox[axis];\n                const length = calcLength(layout[axis]);\n                axisSnapshot.max = axisSnapshot.min + length;\n                /**\n                 * Ensure relative target gets resized and rerendererd\n                 */\n                if (node.relativeTarget && !node.currentAnimation) {\n                    node.isProjectionDirty = true;\n                    node.relativeTarget[axis].max =\n                        node.relativeTarget[axis].min + length;\n                }\n            });\n        }\n        const layoutDelta = createDelta();\n        calcBoxDelta(layoutDelta, layout, snapshot.layoutBox);\n        const visualDelta = createDelta();\n        if (isShared) {\n            calcBoxDelta(visualDelta, node.applyTransform(measuredLayout, true), snapshot.measuredBox);\n        }\n        else {\n            calcBoxDelta(visualDelta, layout, snapshot.layoutBox);\n        }\n        const hasLayoutChanged = !isDeltaZero(layoutDelta);\n        let hasRelativeTargetChanged = false;\n        if (!node.resumeFrom) {\n            const relativeParent = node.getClosestProjectingParent();\n            /**\n             * If the relativeParent is itself resuming from a different element then\n             * the relative snapshot is not relavent\n             */\n            if (relativeParent && !relativeParent.resumeFrom) {\n                const { snapshot: parentSnapshot, layout: parentLayout } = relativeParent;\n                if (parentSnapshot && parentLayout) {\n                    const relativeSnapshot = createBox();\n                    calcRelativePosition(relativeSnapshot, snapshot.layoutBox, parentSnapshot.layoutBox);\n                    const relativeLayout = createBox();\n                    calcRelativePosition(relativeLayout, layout, parentLayout.layoutBox);\n                    if (!boxEquals(relativeSnapshot, relativeLayout)) {\n                        hasRelativeTargetChanged = true;\n                    }\n                    if (relativeParent.options.layoutRoot) {\n                        node.relativeTarget = relativeLayout;\n                        node.relativeTargetOrigin = relativeSnapshot;\n                        node.relativeParent = relativeParent;\n                    }\n                }\n            }\n        }\n        node.notifyListeners(\"didUpdate\", {\n            layout,\n            snapshot,\n            delta: visualDelta,\n            layoutDelta,\n            hasLayoutChanged,\n            hasRelativeTargetChanged,\n        });\n    }\n    else if (node.isLead()) {\n        const { onExitComplete } = node.options;\n        onExitComplete && onExitComplete();\n    }\n    /**\n     * Clearing transition\n     * TODO: Investigate why this transition is being passed in as {type: false } from Framer\n     * and why we need it at all\n     */\n    node.options.transition = undefined;\n}\nfunction propagateDirtyNodes(node) {\n    /**\n     * Increase debug counter for nodes encountered this frame\n     */\n    projectionFrameData.totalNodes++;\n    if (!node.parent)\n        return;\n    /**\n     * If this node isn't projecting, propagate isProjectionDirty. It will have\n     * no performance impact but it will allow the next child that *is* projecting\n     * but *isn't* dirty to just check its parent to see if *any* ancestor needs\n     * correcting.\n     */\n    if (!node.isProjecting()) {\n        node.isProjectionDirty = node.parent.isProjectionDirty;\n    }\n    /**\n     * Propagate isSharedProjectionDirty and isTransformDirty\n     * throughout the whole tree. A future revision can take another look at\n     * this but for safety we still recalcualte shared nodes.\n     */\n    node.isSharedProjectionDirty || (node.isSharedProjectionDirty = Boolean(node.isProjectionDirty ||\n        node.parent.isProjectionDirty ||\n        node.parent.isSharedProjectionDirty));\n    node.isTransformDirty || (node.isTransformDirty = node.parent.isTransformDirty);\n}\nfunction cleanDirtyNodes(node) {\n    node.isProjectionDirty =\n        node.isSharedProjectionDirty =\n            node.isTransformDirty =\n                false;\n}\nfunction clearSnapshot(node) {\n    node.clearSnapshot();\n}\nfunction clearMeasurements(node) {\n    node.clearMeasurements();\n}\nfunction clearIsLayoutDirty(node) {\n    node.isLayoutDirty = false;\n}\nfunction resetTransformStyle(node) {\n    const { visualElement } = node.options;\n    if (visualElement && visualElement.getProps().onBeforeLayoutMeasure) {\n        visualElement.notify(\"BeforeLayoutMeasure\");\n    }\n    node.resetTransform();\n}\nfunction finishAnimation(node) {\n    node.finishAnimation();\n    node.targetDelta = node.relativeTarget = node.target = undefined;\n    node.isProjectionDirty = true;\n}\nfunction resolveTargetDelta(node) {\n    node.resolveTargetDelta();\n}\nfunction calcProjection(node) {\n    node.calcProjection();\n}\nfunction resetRotation(node) {\n    node.resetRotation();\n}\nfunction removeLeadSnapshots(stack) {\n    stack.removeLeadSnapshot();\n}\nfunction mixAxisDelta(output, delta, p) {\n    output.translate = mix(delta.translate, 0, p);\n    output.scale = mix(delta.scale, 1, p);\n    output.origin = delta.origin;\n    output.originPoint = delta.originPoint;\n}\nfunction mixAxis(output, from, to, p) {\n    output.min = mix(from.min, to.min, p);\n    output.max = mix(from.max, to.max, p);\n}\nfunction mixBox(output, from, to, p) {\n    mixAxis(output.x, from.x, to.x, p);\n    mixAxis(output.y, from.y, to.y, p);\n}\nfunction hasOpacityCrossfade(node) {\n    return (node.animationValues && node.animationValues.opacityExit !== undefined);\n}\nconst defaultLayoutTransition = {\n    duration: 0.45,\n    ease: [0.4, 0, 0.1, 1],\n};\nfunction roundAxis(axis) {\n    axis.min = Math.round(axis.min);\n    axis.max = Math.round(axis.max);\n}\nfunction roundBox(box) {\n    roundAxis(box.x);\n    roundAxis(box.y);\n}\nfunction shouldAnimatePositionOnly(animationType, snapshot, layout) {\n    return (animationType === \"position\" ||\n        (animationType === \"preserve-aspect\" &&\n            !isNear(aspectRatio(snapshot), aspectRatio(layout), 0.2)));\n}\n\nexport { cleanDirtyNodes, createProjectionNode, mixAxis, mixAxisDelta, mixBox, propagateDirtyNodes };\n","function record(data) {\n    if (window.MotionDebug) {\n        window.MotionDebug.record(data);\n    }\n}\n\nexport { record };\n","function isSVGElement(element) {\n    return element instanceof SVGElement && element.tagName !== \"svg\";\n}\n\nexport { isSVGElement };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\n\n/**\n * Timeout defined in ms\n */\nfunction delay(callback, timeout) {\n    const start = performance.now();\n    const checkElapsed = ({ timestamp }) => {\n        const elapsed = timestamp - start;\n        if (elapsed >= timeout) {\n            cancelFrame(checkElapsed);\n            callback(elapsed - timeout);\n        }\n    };\n    frame.read(checkElapsed, true);\n    return () => cancelFrame(checkElapsed);\n}\n\nexport { delay };\n","import { animateMotionValue } from './motion-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction animateSingleValue(value, keyframes, options) {\n    const motionValue$1 = isMotionValue(value) ? value : motionValue(value);\n    motionValue$1.start(animateMotionValue(\"\", motionValue$1, keyframes, options));\n    return motionValue$1.animation;\n}\n\nexport { animateSingleValue };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { addDomEvent } from '../../events/add-dom-event.mjs';\n\nconst DocumentProjectionNode = createProjectionNode({\n    attachResizeListener: (ref, notify) => addDomEvent(ref, \"resize\", notify),\n    measureScroll: () => ({\n        x: document.documentElement.scrollLeft || document.body.scrollLeft,\n        y: document.documentElement.scrollTop || document.body.scrollTop,\n    }),\n    checkIsScrollRoot: () => true,\n});\n\nexport { DocumentProjectionNode };\n","import { createProjectionNode } from './create-projection-node.mjs';\nimport { DocumentProjectionNode } from './DocumentProjectionNode.mjs';\n\nconst rootProjectionNode = {\n    current: undefined,\n};\nconst HTMLProjectionNode = createProjectionNode({\n    measureScroll: (instance) => ({\n        x: instance.scrollLeft,\n        y: instance.scrollTop,\n    }),\n    defaultParent: () => {\n        if (!rootProjectionNode.current) {\n            const documentNode = new DocumentProjectionNode({});\n            documentNode.mount(window);\n            documentNode.setOptions({ layoutScroll: true });\n            rootProjectionNode.current = documentNode;\n        }\n        return rootProjectionNode.current;\n    },\n    resetTransform: (instance, value) => {\n        instance.style.transform = value !== undefined ? value : \"none\";\n    },\n    checkIsScrollRoot: (instance) => Boolean(window.getComputedStyle(instance).position === \"fixed\"),\n});\n\nexport { HTMLProjectionNode, rootProjectionNode };\n","import { DragGesture } from '../../gestures/drag/index.mjs';\nimport { PanGesture } from '../../gestures/pan/index.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\nimport { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\n\nconst drag = {\n    pan: {\n        Feature: PanGesture,\n    },\n    drag: {\n        Feature: DragGesture,\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { drag };\n","import { HTMLProjectionNode } from '../../projection/node/HTMLProjectionNode.mjs';\nimport { MeasureLayout } from './layout/MeasureLayout.mjs';\n\nconst layout = {\n    layout: {\n        ProjectionNode: HTMLProjectionNode,\n        MeasureLayout,\n    },\n};\n\nexport { layout };\n","function shallowCompare(next, prev) {\n    if (!Array.isArray(prev))\n        return false;\n    const prevLength = prev.length;\n    if (prevLength !== next.length)\n        return false;\n    for (let i = 0; i < prevLength; i++) {\n        if (prev[i] !== next[i])\n            return false;\n    }\n    return true;\n}\n\nexport { shallowCompare };\n","import { resolveVariantFromProps } from './resolve-variants.mjs';\n\n/**\n * Creates an object containing the latest state of every MotionValue on a VisualElement\n */\nfunction getCurrent(visualElement) {\n    const current = {};\n    visualElement.values.forEach((value, key) => (current[key] = value.get()));\n    return current;\n}\n/**\n * Creates an object containing the latest velocity of every MotionValue on a VisualElement\n */\nfunction getVelocity(visualElement) {\n    const velocity = {};\n    visualElement.values.forEach((value, key) => (velocity[key] = value.getVelocity()));\n    return velocity;\n}\nfunction resolveVariant(visualElement, definition, custom) {\n    const props = visualElement.getProps();\n    return resolveVariantFromProps(props, definition, custom !== undefined ? custom : props.custom, getCurrent(visualElement), getVelocity(visualElement));\n}\n\nexport { resolveVariant };\n","import { camelToDash } from '../../render/dom/utils/camel-to-dash.mjs';\n\nconst optimizedAppearDataId = \"framerAppearId\";\nconst optimizedAppearDataAttribute = \"data-\" + camelToDash(optimizedAppearDataId);\n\nexport { optimizedAppearDataAttribute, optimizedAppearDataId };\n","import { isMotionValue } from '../utils/is-motion-value.mjs';\n\nfunction isWillChangeMotionValue(value) {\n    return Boolean(isMotionValue(value) && value.add);\n}\n\nexport { isWillChangeMotionValue };\n","/**\n * Check if value is a numerical string, ie a string that is purely a number eg \"100\" or \"-100.1\"\n */\nconst isNumericalString = (v) => /^\\-?\\d*\\.?\\d+$/.test(v);\n\nexport { isNumericalString };\n","/**\n * Tests a provided value against a ValueType\n */\nconst testValueType = (v) => (type) => type.test(v);\n\nexport { testValueType };\n","import { number } from '../../../value/types/numbers/index.mjs';\nimport { px, percent, degrees, vw, vh } from '../../../value/types/numbers/units.mjs';\nimport { testValueType } from './test.mjs';\nimport { auto } from './type-auto.mjs';\n\n/**\n * A list of value types commonly used for dimensions\n */\nconst dimensionValueTypes = [number, px, percent, degrees, vw, vh, auto];\n/**\n * Tests a dimensional value against the list of dimension ValueTypes\n */\nconst findDimensionValueType = (v) => dimensionValueTypes.find(testValueType(v));\n\nexport { dimensionValueTypes, findDimensionValueType };\n","/**\n * ValueType for \"auto\"\n */\nconst auto = {\n    test: (v) => v === \"auto\",\n    parse: (v) => v,\n};\n\nexport { auto };\n","import { color } from '../../../value/types/color/index.mjs';\nimport { complex } from '../../../value/types/complex/index.mjs';\nimport { dimensionValueTypes } from './dimensions.mjs';\nimport { testValueType } from './test.mjs';\n\n/**\n * A list of all ValueTypes\n */\nconst valueTypes = [...dimensionValueTypes, color, complex];\n/**\n * Tests a value against the list of ValueTypes\n */\nconst findValueType = (v) => valueTypes.find(testValueType(v));\n\nexport { findValueType };\n","import { isNumericalString } from '../../utils/is-numerical-string.mjs';\nimport { isZeroValueString } from '../../utils/is-zero-value-string.mjs';\nimport { resolveFinalValueInKeyframes } from '../../utils/resolve-value.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { complex } from '../../value/types/complex/index.mjs';\nimport { getAnimatableNone } from '../dom/value-types/animatable-none.mjs';\nimport { findValueType } from '../dom/value-types/find.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\n\n/**\n * Set VisualElement's MotionValue, creating a new MotionValue for it if\n * it doesn't exist.\n */\nfunction setMotionValue(visualElement, key, value) {\n    if (visualElement.hasValue(key)) {\n        visualElement.getValue(key).set(value);\n    }\n    else {\n        visualElement.addValue(key, motionValue(value));\n    }\n}\nfunction setTarget(visualElement, definition) {\n    const resolved = resolveVariant(visualElement, definition);\n    let { transitionEnd = {}, transition = {}, ...target } = resolved ? visualElement.makeTargetAnimatable(resolved, false) : {};\n    target = { ...target, ...transitionEnd };\n    for (const key in target) {\n        const value = resolveFinalValueInKeyframes(target[key]);\n        setMotionValue(visualElement, key, value);\n    }\n}\nfunction setVariants(visualElement, variantLabels) {\n    const reversedLabels = [...variantLabels].reverse();\n    reversedLabels.forEach((key) => {\n        const variant = visualElement.getVariant(key);\n        variant && setTarget(visualElement, variant);\n        if (visualElement.variantChildren) {\n            visualElement.variantChildren.forEach((child) => {\n                setVariants(child, variantLabels);\n            });\n        }\n    });\n}\nfunction setValues(visualElement, definition) {\n    if (Array.isArray(definition)) {\n        return setVariants(visualElement, definition);\n    }\n    else if (typeof definition === \"string\") {\n        return setVariants(visualElement, [definition]);\n    }\n    else {\n        setTarget(visualElement, definition);\n    }\n}\nfunction checkTargetForNewValues(visualElement, target, origin) {\n    var _a, _b;\n    const newValueKeys = Object.keys(target).filter((key) => !visualElement.hasValue(key));\n    const numNewValues = newValueKeys.length;\n    if (!numNewValues)\n        return false;\n    for (let i = 0; i < numNewValues; i++) {\n        const key = newValueKeys[i];\n        const targetValue = target[key];\n        let value = null;\n        /**\n         * If the target is a series of keyframes, we can use the first value\n         * in the array. If this first value is null, we'll still need to read from the DOM.\n         */\n        if (Array.isArray(targetValue)) {\n            value = targetValue[0];\n        }\n        /**\n         * If the target isn't keyframes, or the first keyframe was null, we need to\n         * first check if an origin value was explicitly defined in the transition as \"from\",\n         * if not read the value from the DOM. As an absolute fallback, take the defined target value.\n         */\n        if (value === null) {\n            value = (_b = (_a = origin[key]) !== null && _a !== void 0 ? _a : visualElement.readValue(key)) !== null && _b !== void 0 ? _b : target[key];\n        }\n        /**\n         * If value is still undefined or null, ignore it. Preferably this would throw,\n         * but this was causing issues in Framer.\n         */\n        if (value === undefined || value === null)\n            continue;\n        if (typeof value === \"string\" &&\n            (isNumericalString(value) || isZeroValueString(value))) {\n            // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n            value = parseFloat(value);\n        }\n        else if (!findValueType(value) && complex.test(targetValue)) {\n            value = getAnimatableNone(key, targetValue);\n        }\n        visualElement.addValue(key, motionValue(value, { owner: visualElement }));\n        if (origin[key] === undefined) {\n            origin[key] = value;\n        }\n        if (value !== null)\n            visualElement.setBaseTarget(key, value);\n    }\n    return true;\n}\nfunction getOriginFromTransition(key, transition) {\n    if (!transition)\n        return;\n    const valueTransition = transition[key] || transition[\"default\"] || transition;\n    return valueTransition.from;\n}\nfunction getOrigin(target, transition, visualElement) {\n    const origin = {};\n    for (const key in target) {\n        const transitionOrigin = getOriginFromTransition(key, transition);\n        if (transitionOrigin !== undefined) {\n            origin[key] = transitionOrigin;\n        }\n        else {\n            const value = visualElement.getValue(key);\n            if (value) {\n                origin[key] = value.get();\n            }\n        }\n    }\n    return origin;\n}\n\nexport { checkTargetForNewValues, getOrigin, getOriginFromTransition, setTarget, setValues };\n","import { frame } from '../../frameloop/index.mjs';\nimport { transformProps } from '../../render/html/utils/transform.mjs';\nimport { optimizedAppearDataAttribute } from '../optimized-appear/data-id.mjs';\nimport { animateMotionValue } from './motion-value.mjs';\nimport { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { setTarget } from '../../render/utils/setters.mjs';\n\n/**\n * Decide whether we should block this animation. Previously, we achieved this\n * just by checking whether the key was listed in protectedKeys, but this\n * posed problems if an animation was triggered by afterChildren and protectedKeys\n * had been set to true in the meantime.\n */\nfunction shouldBlockAnimation({ protectedKeys, needsAnimating }, key) {\n    const shouldBlock = protectedKeys.hasOwnProperty(key) && needsAnimating[key] !== true;\n    needsAnimating[key] = false;\n    return shouldBlock;\n}\nfunction animateTarget(visualElement, definition, { delay = 0, transitionOverride, type } = {}) {\n    let { transition = visualElement.getDefaultTransition(), transitionEnd, ...target } = visualElement.makeTargetAnimatable(definition);\n    const willChange = visualElement.getValue(\"willChange\");\n    if (transitionOverride)\n        transition = transitionOverride;\n    const animations = [];\n    const animationTypeState = type &&\n        visualElement.animationState &&\n        visualElement.animationState.getState()[type];\n    for (const key in target) {\n        const value = visualElement.getValue(key);\n        const valueTarget = target[key];\n        if (!value ||\n            valueTarget === undefined ||\n            (animationTypeState &&\n                shouldBlockAnimation(animationTypeState, key))) {\n            continue;\n        }\n        const valueTransition = { delay, elapsed: 0, ...transition };\n        /**\n         * If this is the first time a value is being animated, check\n         * to see if we're handling off from an existing animation.\n         */\n        if (window.HandoffAppearAnimations && !value.hasAnimated) {\n            const appearId = visualElement.getProps()[optimizedAppearDataAttribute];\n            if (appearId) {\n                valueTransition.elapsed = window.HandoffAppearAnimations(appearId, key, value, frame);\n            }\n        }\n        value.start(animateMotionValue(key, value, valueTarget, visualElement.shouldReduceMotion && transformProps.has(key)\n            ? { type: false }\n            : valueTransition));\n        const animation = value.animation;\n        if (isWillChangeMotionValue(willChange)) {\n            willChange.add(key);\n            animation.then(() => willChange.remove(key));\n        }\n        animations.push(animation);\n    }\n    if (transitionEnd) {\n        Promise.all(animations).then(() => {\n            transitionEnd && setTarget(visualElement, transitionEnd);\n        });\n    }\n    return animations;\n}\n\nexport { animateTarget };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\n\nfunction animateVariant(visualElement, variant, options = {}) {\n    const resolved = resolveVariant(visualElement, variant, options.custom);\n    let { transition = visualElement.getDefaultTransition() || {} } = resolved || {};\n    if (options.transitionOverride) {\n        transition = options.transitionOverride;\n    }\n    /**\n     * If we have a variant, create a callback that runs it as an animation.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getAnimation = resolved\n        ? () => Promise.all(animateTarget(visualElement, resolved, options))\n        : () => Promise.resolve();\n    /**\n     * If we have children, create a callback that runs all their animations.\n     * Otherwise, we resolve a Promise immediately for a composable no-op.\n     */\n    const getChildAnimations = visualElement.variantChildren && visualElement.variantChildren.size\n        ? (forwardDelay = 0) => {\n            const { delayChildren = 0, staggerChildren, staggerDirection, } = transition;\n            return animateChildren(visualElement, variant, delayChildren + forwardDelay, staggerChildren, staggerDirection, options);\n        }\n        : () => Promise.resolve();\n    /**\n     * If the transition explicitly defines a \"when\" option, we need to resolve either\n     * this animation or all children animations before playing the other.\n     */\n    const { when } = transition;\n    if (when) {\n        const [first, last] = when === \"beforeChildren\"\n            ? [getAnimation, getChildAnimations]\n            : [getChildAnimations, getAnimation];\n        return first().then(() => last());\n    }\n    else {\n        return Promise.all([getAnimation(), getChildAnimations(options.delay)]);\n    }\n}\nfunction animateChildren(visualElement, variant, delayChildren = 0, staggerChildren = 0, staggerDirection = 1, options) {\n    const animations = [];\n    const maxStaggerDuration = (visualElement.variantChildren.size - 1) * staggerChildren;\n    const generateStaggerDuration = staggerDirection === 1\n        ? (i = 0) => i * staggerChildren\n        : (i = 0) => maxStaggerDuration - i * staggerChildren;\n    Array.from(visualElement.variantChildren)\n        .sort(sortByTreeOrder)\n        .forEach((child, i) => {\n        child.notify(\"AnimationStart\", variant);\n        animations.push(animateVariant(child, variant, {\n            ...options,\n            delay: delayChildren + generateStaggerDuration(i),\n        }).then(() => child.notify(\"AnimationComplete\", variant)));\n    });\n    return Promise.all(animations);\n}\nfunction sortByTreeOrder(a, b) {\n    return a.sortNodePosition(b);\n}\n\nexport { animateVariant, sortByTreeOrder };\n","import { isAnimationControls } from '../../animation/utils/is-animation-controls.mjs';\nimport { isKeyframesTarget } from '../../animation/utils/is-keyframes-target.mjs';\nimport { shallowCompare } from '../../utils/shallow-compare.mjs';\nimport { isVariantLabel } from './is-variant-label.mjs';\nimport { resolveVariant } from './resolve-dynamic-variants.mjs';\nimport { variantPriorityOrder } from './variant-props.mjs';\nimport { animateVisualElement } from '../../animation/interfaces/visual-element.mjs';\n\nconst reversePriorityOrder = [...variantPriorityOrder].reverse();\nconst numAnimationTypes = variantPriorityOrder.length;\nfunction animateList(visualElement) {\n    return (animations) => Promise.all(animations.map(({ animation, options }) => animateVisualElement(visualElement, animation, options)));\n}\nfunction createAnimationState(visualElement) {\n    let animate = animateList(visualElement);\n    const state = createState();\n    let isInitialRender = true;\n    /**\n     * This function will be used to reduce the animation definitions for\n     * each active animation type into an object of resolved values for it.\n     */\n    const buildResolvedTypeValues = (acc, definition) => {\n        const resolved = resolveVariant(visualElement, definition);\n        if (resolved) {\n            const { transition, transitionEnd, ...target } = resolved;\n            acc = { ...acc, ...target, ...transitionEnd };\n        }\n        return acc;\n    };\n    /**\n     * This just allows us to inject mocked animation functions\n     * @internal\n     */\n    function setAnimateFunction(makeAnimator) {\n        animate = makeAnimator(visualElement);\n    }\n    /**\n     * When we receive new props, we need to:\n     * 1. Create a list of protected keys for each type. This is a directory of\n     *    value keys that are currently being \"handled\" by types of a higher priority\n     *    so that whenever an animation is played of a given type, these values are\n     *    protected from being animated.\n     * 2. Determine if an animation type needs animating.\n     * 3. Determine if any values have been removed from a type and figure out\n     *    what to animate those to.\n     */\n    function animateChanges(options, changedActiveType) {\n        const props = visualElement.getProps();\n        const context = visualElement.getVariantContext(true) || {};\n        /**\n         * A list of animations that we'll build into as we iterate through the animation\n         * types. This will get executed at the end of the function.\n         */\n        const animations = [];\n        /**\n         * Keep track of which values have been removed. Then, as we hit lower priority\n         * animation types, we can check if they contain removed values and animate to that.\n         */\n        const removedKeys = new Set();\n        /**\n         * A dictionary of all encountered keys. This is an object to let us build into and\n         * copy it without iteration. Each time we hit an animation type we set its protected\n         * keys - the keys its not allowed to animate - to the latest version of this object.\n         */\n        let encounteredKeys = {};\n        /**\n         * If a variant has been removed at a given index, and this component is controlling\n         * variant animations, we want to ensure lower-priority variants are forced to animate.\n         */\n        let removedVariantIndex = Infinity;\n        /**\n         * Iterate through all animation types in reverse priority order. For each, we want to\n         * detect which values it's handling and whether or not they've changed (and therefore\n         * need to be animated). If any values have been removed, we want to detect those in\n         * lower priority props and flag for animation.\n         */\n        for (let i = 0; i < numAnimationTypes; i++) {\n            const type = reversePriorityOrder[i];\n            const typeState = state[type];\n            const prop = props[type] !== undefined ? props[type] : context[type];\n            const propIsVariant = isVariantLabel(prop);\n            /**\n             * If this type has *just* changed isActive status, set activeDelta\n             * to that status. Otherwise set to null.\n             */\n            const activeDelta = type === changedActiveType ? typeState.isActive : null;\n            if (activeDelta === false)\n                removedVariantIndex = i;\n            /**\n             * If this prop is an inherited variant, rather than been set directly on the\n             * component itself, we want to make sure we allow the parent to trigger animations.\n             *\n             * TODO: Can probably change this to a !isControllingVariants check\n             */\n            let isInherited = prop === context[type] && prop !== props[type] && propIsVariant;\n            /**\n             *\n             */\n            if (isInherited &&\n                isInitialRender &&\n                visualElement.manuallyAnimateOnMount) {\n                isInherited = false;\n            }\n            /**\n             * Set all encountered keys so far as the protected keys for this type. This will\n             * be any key that has been animated or otherwise handled by active, higher-priortiy types.\n             */\n            typeState.protectedKeys = { ...encounteredKeys };\n            // Check if we can skip analysing this prop early\n            if (\n            // If it isn't active and hasn't *just* been set as inactive\n            (!typeState.isActive && activeDelta === null) ||\n                // If we didn't and don't have any defined prop for this animation type\n                (!prop && !typeState.prevProp) ||\n                // Or if the prop doesn't define an animation\n                isAnimationControls(prop) ||\n                typeof prop === \"boolean\") {\n                continue;\n            }\n            /**\n             * As we go look through the values defined on this type, if we detect\n             * a changed value or a value that was removed in a higher priority, we set\n             * this to true and add this prop to the animation list.\n             */\n            const variantDidChange = checkVariantsDidChange(typeState.prevProp, prop);\n            let shouldAnimateType = variantDidChange ||\n                // If we're making this variant active, we want to always make it active\n                (type === changedActiveType &&\n                    typeState.isActive &&\n                    !isInherited &&\n                    propIsVariant) ||\n                // If we removed a higher-priority variant (i is in reverse order)\n                (i > removedVariantIndex && propIsVariant);\n            /**\n             * As animations can be set as variant lists, variants or target objects, we\n             * coerce everything to an array if it isn't one already\n             */\n            const definitionList = Array.isArray(prop) ? prop : [prop];\n            /**\n             * Build an object of all the resolved values. We'll use this in the subsequent\n             * animateChanges calls to determine whether a value has changed.\n             */\n            let resolvedValues = definitionList.reduce(buildResolvedTypeValues, {});\n            if (activeDelta === false)\n                resolvedValues = {};\n            /**\n             * Now we need to loop through all the keys in the prev prop and this prop,\n             * and decide:\n             * 1. If the value has changed, and needs animating\n             * 2. If it has been removed, and needs adding to the removedKeys set\n             * 3. If it has been removed in a higher priority type and needs animating\n             * 4. If it hasn't been removed in a higher priority but hasn't changed, and\n             *    needs adding to the type's protectedKeys list.\n             */\n            const { prevResolvedValues = {} } = typeState;\n            const allKeys = {\n                ...prevResolvedValues,\n                ...resolvedValues,\n            };\n            const markToAnimate = (key) => {\n                shouldAnimateType = true;\n                removedKeys.delete(key);\n                typeState.needsAnimating[key] = true;\n            };\n            for (const key in allKeys) {\n                const next = resolvedValues[key];\n                const prev = prevResolvedValues[key];\n                // If we've already handled this we can just skip ahead\n                if (encounteredKeys.hasOwnProperty(key))\n                    continue;\n                /**\n                 * If the value has changed, we probably want to animate it.\n                 */\n                if (next !== prev) {\n                    /**\n                     * If both values are keyframes, we need to shallow compare them to\n                     * detect whether any value has changed. If it has, we animate it.\n                     */\n                    if (isKeyframesTarget(next) && isKeyframesTarget(prev)) {\n                        if (!shallowCompare(next, prev) || variantDidChange) {\n                            markToAnimate(key);\n                        }\n                        else {\n                            /**\n                             * If it hasn't changed, we want to ensure it doesn't animate by\n                             * adding it to the list of protected keys.\n                             */\n                            typeState.protectedKeys[key] = true;\n                        }\n                    }\n                    else if (next !== undefined) {\n                        // If next is defined and doesn't equal prev, it needs animating\n                        markToAnimate(key);\n                    }\n                    else {\n                        // If it's undefined, it's been removed.\n                        removedKeys.add(key);\n                    }\n                }\n                else if (next !== undefined && removedKeys.has(key)) {\n                    /**\n                     * If next hasn't changed and it isn't undefined, we want to check if it's\n                     * been removed by a higher priority\n                     */\n                    markToAnimate(key);\n                }\n                else {\n                    /**\n                     * If it hasn't changed, we add it to the list of protected values\n                     * to ensure it doesn't get animated.\n                     */\n                    typeState.protectedKeys[key] = true;\n                }\n            }\n            /**\n             * Update the typeState so next time animateChanges is called we can compare the\n             * latest prop and resolvedValues to these.\n             */\n            typeState.prevProp = prop;\n            typeState.prevResolvedValues = resolvedValues;\n            /**\n             *\n             */\n            if (typeState.isActive) {\n                encounteredKeys = { ...encounteredKeys, ...resolvedValues };\n            }\n            if (isInitialRender && visualElement.blockInitialAnimation) {\n                shouldAnimateType = false;\n            }\n            /**\n             * If this is an inherited prop we want to hard-block animations\n             * TODO: Test as this should probably still handle animations triggered\n             * by removed values?\n             */\n            if (shouldAnimateType && !isInherited) {\n                animations.push(...definitionList.map((animation) => ({\n                    animation: animation,\n                    options: { type, ...options },\n                })));\n            }\n        }\n        /**\n         * If there are some removed value that haven't been dealt with,\n         * we need to create a new animation that falls back either to the value\n         * defined in the style prop, or the last read value.\n         */\n        if (removedKeys.size) {\n            const fallbackAnimation = {};\n            removedKeys.forEach((key) => {\n                const fallbackTarget = visualElement.getBaseTarget(key);\n                if (fallbackTarget !== undefined) {\n                    fallbackAnimation[key] = fallbackTarget;\n                }\n            });\n            animations.push({ animation: fallbackAnimation });\n        }\n        let shouldAnimate = Boolean(animations.length);\n        if (isInitialRender &&\n            props.initial === false &&\n            !visualElement.manuallyAnimateOnMount) {\n            shouldAnimate = false;\n        }\n        isInitialRender = false;\n        return shouldAnimate ? animate(animations) : Promise.resolve();\n    }\n    /**\n     * Change whether a certain animation type is active.\n     */\n    function setActive(type, isActive, options) {\n        var _a;\n        // If the active state hasn't changed, we can safely do nothing here\n        if (state[type].isActive === isActive)\n            return Promise.resolve();\n        // Propagate active change to children\n        (_a = visualElement.variantChildren) === null || _a === void 0 ? void 0 : _a.forEach((child) => { var _a; return (_a = child.animationState) === null || _a === void 0 ? void 0 : _a.setActive(type, isActive); });\n        state[type].isActive = isActive;\n        const animations = animateChanges(options, type);\n        for (const key in state) {\n            state[key].protectedKeys = {};\n        }\n        return animations;\n    }\n    return {\n        animateChanges,\n        setActive,\n        setAnimateFunction,\n        getState: () => state,\n    };\n}\nfunction checkVariantsDidChange(prev, next) {\n    if (typeof next === \"string\") {\n        return next !== prev;\n    }\n    else if (Array.isArray(next)) {\n        return !shallowCompare(next, prev);\n    }\n    return false;\n}\nfunction createTypeState(isActive = false) {\n    return {\n        isActive,\n        protectedKeys: {},\n        needsAnimating: {},\n        prevResolvedValues: {},\n    };\n}\nfunction createState() {\n    return {\n        animate: createTypeState(true),\n        whileInView: createTypeState(),\n        whileHover: createTypeState(),\n        whileTap: createTypeState(),\n        whileDrag: createTypeState(),\n        whileFocus: createTypeState(),\n        exit: createTypeState(),\n    };\n}\n\nexport { checkVariantsDidChange, createAnimationState };\n","import { resolveVariant } from '../../render/utils/resolve-dynamic-variants.mjs';\nimport { animateTarget } from './visual-element-target.mjs';\nimport { animateVariant } from './visual-element-variant.mjs';\n\nfunction animateVisualElement(visualElement, definition, options = {}) {\n    visualElement.notify(\"AnimationStart\", definition);\n    let animation;\n    if (Array.isArray(definition)) {\n        const animations = definition.map((variant) => animateVariant(visualElement, variant, options));\n        animation = Promise.all(animations);\n    }\n    else if (typeof definition === \"string\") {\n        animation = animateVariant(visualElement, definition, options);\n    }\n    else {\n        const resolvedDefinition = typeof definition === \"function\"\n            ? resolveVariant(visualElement, definition, options.custom)\n            : definition;\n        animation = Promise.all(animateTarget(visualElement, resolvedDefinition, options));\n    }\n    return animation.then(() => visualElement.notify(\"AnimationComplete\", definition));\n}\n\nexport { animateVisualElement };\n","import { isAnimationControls } from '../../../animation/utils/is-animation-controls.mjs';\nimport { createAnimationState } from '../../../render/utils/animation-state.mjs';\nimport { Feature } from '../Feature.mjs';\n\nclass AnimationFeature extends Feature {\n    /**\n     * We dynamically generate the AnimationState manager as it contains a reference\n     * to the underlying animation library. We only want to load that if we load this,\n     * so people can optionally code split it out using the `m` component.\n     */\n    constructor(node) {\n        super(node);\n        node.animationState || (node.animationState = createAnimationState(node));\n    }\n    updateAnimationControlsSubscription() {\n        const { animate } = this.node.getProps();\n        this.unmount();\n        if (isAnimationControls(animate)) {\n            this.unmount = animate.subscribe(this.node);\n        }\n    }\n    /**\n     * Subscribe any provided AnimationControls to the component's VisualElement\n     */\n    mount() {\n        this.updateAnimationControlsSubscription();\n    }\n    update() {\n        const { animate } = this.node.getProps();\n        const { animate: prevAnimate } = this.node.prevProps || {};\n        if (animate !== prevAnimate) {\n            this.updateAnimationControlsSubscription();\n        }\n    }\n    unmount() { }\n}\n\nexport { AnimationFeature };\n","import { Feature } from '../Feature.mjs';\n\nlet id = 0;\nclass ExitAnimationFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.id = id++;\n    }\n    update() {\n        if (!this.node.presenceContext)\n            return;\n        const { isPresent, onExitComplete, custom } = this.node.presenceContext;\n        const { isPresent: prevIsPresent } = this.node.prevPresenceContext || {};\n        if (!this.node.animationState || isPresent === prevIsPresent) {\n            return;\n        }\n        const exitAnimation = this.node.animationState.setActive(\"exit\", !isPresent, { custom: custom !== null && custom !== void 0 ? custom : this.node.getProps().custom });\n        if (onExitComplete && !isPresent) {\n            exitAnimation.then(() => onExitComplete(this.id));\n        }\n    }\n    mount() {\n        const { register } = this.node.presenceContext || {};\n        if (register) {\n            this.unmount = register(this.id);\n        }\n    }\n    unmount() { }\n}\n\nexport { ExitAnimationFeature };\n","import { AnimationFeature } from './animation/index.mjs';\nimport { ExitAnimationFeature } from './animation/exit.mjs';\n\nconst animations = {\n    animation: {\n        Feature: AnimationFeature,\n    },\n    exit: {\n        Feature: ExitAnimationFeature,\n    },\n};\n\nexport { animations };\n","import { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction addHoverEvent(node, isActive) {\n    const eventName = \"pointer\" + (isActive ? \"enter\" : \"leave\");\n    const callbackName = \"onHover\" + (isActive ? \"Start\" : \"End\");\n    const handleEvent = (event, info) => {\n        if (event.type === \"touch\" || isDragActive())\n            return;\n        const props = node.getProps();\n        if (node.animationState && props.whileHover) {\n            node.animationState.setActive(\"whileHover\", isActive);\n        }\n        if (props[callbackName]) {\n            frame.update(() => props[callbackName](event, info));\n        }\n    };\n    return addPointerEvent(node.current, eventName, handleEvent, {\n        passive: !node.getProps()[callbackName],\n    });\n}\nclass HoverGesture extends Feature {\n    mount() {\n        this.unmount = pipe(addHoverEvent(this.node, true), addHoverEvent(this.node, false));\n    }\n    unmount() { }\n}\n\nexport { HoverGesture };\n","import { addDomEvent } from '../events/add-dom-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\n\nclass FocusGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.isActive = false;\n    }\n    onFocus() {\n        let isFocusVisible = false;\n        /**\n         * If this element doesn't match focus-visible then don't\n         * apply whileHover. But, if matches throws that focus-visible\n         * is not a valid selector then in that browser outline styles will be applied\n         * to the element by default and we want to match that behaviour with whileFocus.\n         */\n        try {\n            isFocusVisible = this.node.current.matches(\":focus-visible\");\n        }\n        catch (e) {\n            isFocusVisible = true;\n        }\n        if (!isFocusVisible || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", true);\n        this.isActive = true;\n    }\n    onBlur() {\n        if (!this.isActive || !this.node.animationState)\n            return;\n        this.node.animationState.setActive(\"whileFocus\", false);\n        this.isActive = false;\n    }\n    mount() {\n        this.unmount = pipe(addDomEvent(this.node.current, \"focus\", () => this.onFocus()), addDomEvent(this.node.current, \"blur\", () => this.onBlur()));\n    }\n    unmount() { }\n}\n\nexport { FocusGesture };\n","/**\n * Recursively traverse up the tree to check whether the provided child node\n * is the parent or a descendant of it.\n *\n * @param parent - Element to find\n * @param child - Element to test against parent\n */\nconst isNodeOrChild = (parent, child) => {\n    if (!child) {\n        return false;\n    }\n    else if (parent === child) {\n        return true;\n    }\n    else {\n        return isNodeOrChild(parent, child.parentElement);\n    }\n};\n\nexport { isNodeOrChild };\n","import { extractEventInfo } from '../events/event-info.mjs';\nimport { addDomEvent } from '../events/add-dom-event.mjs';\nimport { addPointerEvent } from '../events/add-pointer-event.mjs';\nimport { Feature } from '../motion/features/Feature.mjs';\nimport { pipe } from '../utils/pipe.mjs';\nimport { isDragActive } from './drag/utils/lock.mjs';\nimport { isNodeOrChild } from './utils/is-node-or-child.mjs';\nimport { noop } from '../utils/noop.mjs';\nimport { frame } from '../frameloop/index.mjs';\n\nfunction fireSyntheticPointerEvent(name, handler) {\n    if (!handler)\n        return;\n    const syntheticPointerEvent = new PointerEvent(\"pointer\" + name);\n    handler(syntheticPointerEvent, extractEventInfo(syntheticPointerEvent));\n}\nclass PressGesture extends Feature {\n    constructor() {\n        super(...arguments);\n        this.removeStartListeners = noop;\n        this.removeEndListeners = noop;\n        this.removeAccessibleListeners = noop;\n        this.startPointerPress = (startEvent, startInfo) => {\n            this.removeEndListeners();\n            if (this.isPressing)\n                return;\n            const props = this.node.getProps();\n            const endPointerPress = (endEvent, endInfo) => {\n                if (!this.checkPressEnd())\n                    return;\n                const { onTap, onTapCancel } = this.node.getProps();\n                frame.update(() => {\n                    /**\n                     * We only count this as a tap gesture if the event.target is the same\n                     * as, or a child of, this component's element\n                     */\n                    !isNodeOrChild(this.node.current, endEvent.target)\n                        ? onTapCancel && onTapCancel(endEvent, endInfo)\n                        : onTap && onTap(endEvent, endInfo);\n                });\n            };\n            const removePointerUpListener = addPointerEvent(window, \"pointerup\", endPointerPress, { passive: !(props.onTap || props[\"onPointerUp\"]) });\n            const removePointerCancelListener = addPointerEvent(window, \"pointercancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo), { passive: !(props.onTapCancel || props[\"onPointerCancel\"]) });\n            this.removeEndListeners = pipe(removePointerUpListener, removePointerCancelListener);\n            this.startPress(startEvent, startInfo);\n        };\n        this.startAccessiblePress = () => {\n            const handleKeydown = (keydownEvent) => {\n                if (keydownEvent.key !== \"Enter\" || this.isPressing)\n                    return;\n                const handleKeyup = (keyupEvent) => {\n                    if (keyupEvent.key !== \"Enter\" || !this.checkPressEnd())\n                        return;\n                    fireSyntheticPointerEvent(\"up\", (event, info) => {\n                        const { onTap } = this.node.getProps();\n                        if (onTap) {\n                            frame.update(() => onTap(event, info));\n                        }\n                    });\n                };\n                this.removeEndListeners();\n                this.removeEndListeners = addDomEvent(this.node.current, \"keyup\", handleKeyup);\n                fireSyntheticPointerEvent(\"down\", (event, info) => {\n                    this.startPress(event, info);\n                });\n            };\n            const removeKeydownListener = addDomEvent(this.node.current, \"keydown\", handleKeydown);\n            const handleBlur = () => {\n                if (!this.isPressing)\n                    return;\n                fireSyntheticPointerEvent(\"cancel\", (cancelEvent, cancelInfo) => this.cancelPress(cancelEvent, cancelInfo));\n            };\n            const removeBlurListener = addDomEvent(this.node.current, \"blur\", handleBlur);\n            this.removeAccessibleListeners = pipe(removeKeydownListener, removeBlurListener);\n        };\n    }\n    startPress(event, info) {\n        this.isPressing = true;\n        const { onTapStart, whileTap } = this.node.getProps();\n        /**\n         * Ensure we trigger animations before firing event callback\n         */\n        if (whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", true);\n        }\n        if (onTapStart) {\n            frame.update(() => onTapStart(event, info));\n        }\n    }\n    checkPressEnd() {\n        this.removeEndListeners();\n        this.isPressing = false;\n        const props = this.node.getProps();\n        if (props.whileTap && this.node.animationState) {\n            this.node.animationState.setActive(\"whileTap\", false);\n        }\n        return !isDragActive();\n    }\n    cancelPress(event, info) {\n        if (!this.checkPressEnd())\n            return;\n        const { onTapCancel } = this.node.getProps();\n        if (onTapCancel) {\n            frame.update(() => onTapCancel(event, info));\n        }\n    }\n    mount() {\n        const props = this.node.getProps();\n        const removePointerListener = addPointerEvent(this.node.current, \"pointerdown\", this.startPointerPress, { passive: !(props.onTapStart || props[\"onPointerStart\"]) });\n        const removeFocusListener = addDomEvent(this.node.current, \"focus\", this.startAccessiblePress);\n        this.removeStartListeners = pipe(removePointerListener, removeFocusListener);\n    }\n    unmount() {\n        this.removeStartListeners();\n        this.removeEndListeners();\n        this.removeAccessibleListeners();\n    }\n}\n\nexport { PressGesture };\n","/**\n * Map an IntersectionHandler callback to an element. We only ever make one handler for one\n * element, so even though these handlers might all be triggered by different\n * observers, we can keep them in the same map.\n */\nconst observerCallbacks = new WeakMap();\n/**\n * Multiple observers can be created for multiple element/document roots. Each with\n * different settings. So here we store dictionaries of observers to each root,\n * using serialised settings (threshold/margin) as lookup keys.\n */\nconst observers = new WeakMap();\nconst fireObserverCallback = (entry) => {\n    const callback = observerCallbacks.get(entry.target);\n    callback && callback(entry);\n};\nconst fireAllObserverCallbacks = (entries) => {\n    entries.forEach(fireObserverCallback);\n};\nfunction initIntersectionObserver({ root, ...options }) {\n    const lookupRoot = root || document;\n    /**\n     * If we don't have an observer lookup map for this root, create one.\n     */\n    if (!observers.has(lookupRoot)) {\n        observers.set(lookupRoot, {});\n    }\n    const rootObservers = observers.get(lookupRoot);\n    const key = JSON.stringify(options);\n    /**\n     * If we don't have an observer for this combination of root and settings,\n     * create one.\n     */\n    if (!rootObservers[key]) {\n        rootObservers[key] = new IntersectionObserver(fireAllObserverCallbacks, { root, ...options });\n    }\n    return rootObservers[key];\n}\nfunction observeIntersection(element, options, callback) {\n    const rootInteresectionObserver = initIntersectionObserver(options);\n    observerCallbacks.set(element, callback);\n    rootInteresectionObserver.observe(element);\n    return () => {\n        observerCallbacks.delete(element);\n        rootInteresectionObserver.unobserve(element);\n    };\n}\n\nexport { observeIntersection };\n","import { Feature } from '../Feature.mjs';\nimport { observeIntersection } from './observers.mjs';\n\nconst thresholdNames = {\n    some: 0,\n    all: 1,\n};\nclass InViewFeature extends Feature {\n    constructor() {\n        super(...arguments);\n        this.hasEnteredView = false;\n        this.isInView = false;\n    }\n    startObserver() {\n        this.unmount();\n        const { viewport = {} } = this.node.getProps();\n        const { root, margin: rootMargin, amount = \"some\", once } = viewport;\n        const options = {\n            root: root ? root.current : undefined,\n            rootMargin,\n            threshold: typeof amount === \"number\" ? amount : thresholdNames[amount],\n        };\n        const onIntersectionUpdate = (entry) => {\n            const { isIntersecting } = entry;\n            /**\n             * If there's been no change in the viewport state, early return.\n             */\n            if (this.isInView === isIntersecting)\n                return;\n            this.isInView = isIntersecting;\n            /**\n             * Handle hasEnteredView. If this is only meant to run once, and\n             * element isn't visible, early return. Otherwise set hasEnteredView to true.\n             */\n            if (once && !isIntersecting && this.hasEnteredView) {\n                return;\n            }\n            else if (isIntersecting) {\n                this.hasEnteredView = true;\n            }\n            if (this.node.animationState) {\n                this.node.animationState.setActive(\"whileInView\", isIntersecting);\n            }\n            /**\n             * Use the latest committed props rather than the ones in scope\n             * when this observer is created\n             */\n            const { onViewportEnter, onViewportLeave } = this.node.getProps();\n            const callback = isIntersecting ? onViewportEnter : onViewportLeave;\n            callback && callback(entry);\n        };\n        return observeIntersection(this.node.current, options, onIntersectionUpdate);\n    }\n    mount() {\n        this.startObserver();\n    }\n    update() {\n        if (typeof IntersectionObserver === \"undefined\")\n            return;\n        const { props, prevProps } = this.node;\n        const hasOptionsChanged = [\"amount\", \"margin\", \"root\"].some(hasViewportOptionChanged(props, prevProps));\n        if (hasOptionsChanged) {\n            this.startObserver();\n        }\n    }\n    unmount() { }\n}\nfunction hasViewportOptionChanged({ viewport = {} }, { viewport: prevViewport = {} } = {}) {\n    return (name) => viewport[name] !== prevViewport[name];\n}\n\nexport { InViewFeature };\n","import { HoverGesture } from '../../gestures/hover.mjs';\nimport { FocusGesture } from '../../gestures/focus.mjs';\nimport { PressGesture } from '../../gestures/press.mjs';\nimport { InViewFeature } from './viewport/index.mjs';\n\nconst gestureAnimations = {\n    inView: {\n        Feature: InViewFeature,\n    },\n    tap: {\n        Feature: PressGesture,\n    },\n    focus: {\n        Feature: FocusGesture,\n    },\n    hover: {\n        Feature: HoverGesture,\n    },\n};\n\nexport { gestureAnimations };\n","import { invariant } from '../../../utils/errors.mjs';\nimport { isCSSVariableToken } from './is-css-variable.mjs';\n\n/**\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\n *\n * ```\n * `var(--foo, #fff)` => [`--foo`, '#fff']\n * ```\n *\n * @param current\n */\nconst splitCSSVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\nfunction parseCSSVariable(current) {\n    const match = splitCSSVariableRegex.exec(current);\n    if (!match)\n        return [,];\n    const [, token, fallback] = match;\n    return [token, fallback];\n}\nconst maxDepth = 4;\nfunction getVariableValue(current, element, depth = 1) {\n    invariant(depth <= maxDepth, `Max CSS variable fallback depth detected in property \"${current}\". This may indicate a circular fallback dependency.`);\n    const [token, fallback] = parseCSSVariable(current);\n    // No CSS variable detected\n    if (!token)\n        return;\n    // Attempt to read this CSS variable off the element\n    const resolved = window.getComputedStyle(element).getPropertyValue(token);\n    if (resolved) {\n        return resolved.trim();\n    }\n    else if (isCSSVariableToken(fallback)) {\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n        return getVariableValue(fallback, element, depth + 1);\n    }\n    else {\n        return fallback;\n    }\n}\n/**\n * Resolve CSS variables from\n *\n * @internal\n */\nfunction resolveCSSVariables(visualElement, { ...target }, transitionEnd) {\n    const element = visualElement.current;\n    if (!(element instanceof Element))\n        return { target, transitionEnd };\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\n    if (transitionEnd) {\n        transitionEnd = { ...transitionEnd };\n    }\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n    visualElement.values.forEach((value) => {\n        const current = value.get();\n        if (!isCSSVariableToken(current))\n            return;\n        const resolved = getVariableValue(current, element);\n        if (resolved)\n            value.set(resolved);\n    });\n    // Cycle through every target property and resolve CSS variables. Currently\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n    for (const key in target) {\n        const current = target[key];\n        if (!isCSSVariableToken(current))\n            continue;\n        const resolved = getVariableValue(current, element);\n        if (!resolved)\n            continue;\n        // Clone target if it hasn't already been\n        target[key] = resolved;\n        if (!transitionEnd)\n            transitionEnd = {};\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n        // CSS variable. This will ensure that after the animation the component will reflect\n        // changes in the value of the CSS variable.\n        if (transitionEnd[key] === undefined) {\n            transitionEnd[key] = current;\n        }\n    }\n    return { target, transitionEnd };\n}\n\nexport { parseCSSVariable, resolveCSSVariables };\n","import { isKeyframesTarget } from '../../../animation/utils/is-keyframes-target.mjs';\nimport { invariant } from '../../../utils/errors.mjs';\nimport { transformPropOrder } from '../../html/utils/transform.mjs';\nimport { findDimensionValueType } from '../value-types/dimensions.mjs';\nimport { isBrowser } from '../../../utils/is-browser.mjs';\nimport { number } from '../../../value/types/numbers/index.mjs';\nimport { px } from '../../../value/types/numbers/units.mjs';\n\nconst positionalKeys = new Set([\n    \"width\",\n    \"height\",\n    \"top\",\n    \"left\",\n    \"right\",\n    \"bottom\",\n    \"x\",\n    \"y\",\n    \"translateX\",\n    \"translateY\",\n]);\nconst isPositionalKey = (key) => positionalKeys.has(key);\nconst hasPositionalKey = (target) => {\n    return Object.keys(target).some(isPositionalKey);\n};\nconst isNumOrPxType = (v) => v === number || v === px;\nconst getPosFromMatrix = (matrix, pos) => parseFloat(matrix.split(\", \")[pos]);\nconst getTranslateFromMatrix = (pos2, pos3) => (_bbox, { transform }) => {\n    if (transform === \"none\" || !transform)\n        return 0;\n    const matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n    if (matrix3d) {\n        return getPosFromMatrix(matrix3d[1], pos3);\n    }\n    else {\n        const matrix = transform.match(/^matrix\\((.+)\\)$/);\n        if (matrix) {\n            return getPosFromMatrix(matrix[1], pos2);\n        }\n        else {\n            return 0;\n        }\n    }\n};\nconst transformKeys = new Set([\"x\", \"y\", \"z\"]);\nconst nonTranslationalTransformKeys = transformPropOrder.filter((key) => !transformKeys.has(key));\nfunction removeNonTranslationalTransform(visualElement) {\n    const removedTransforms = [];\n    nonTranslationalTransformKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (value !== undefined) {\n            removedTransforms.push([key, value.get()]);\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\n        }\n    });\n    // Apply changes to element before measurement\n    if (removedTransforms.length)\n        visualElement.render();\n    return removedTransforms;\n}\nconst positionalValues = {\n    // Dimensions\n    width: ({ x }, { paddingLeft = \"0\", paddingRight = \"0\" }) => x.max - x.min - parseFloat(paddingLeft) - parseFloat(paddingRight),\n    height: ({ y }, { paddingTop = \"0\", paddingBottom = \"0\" }) => y.max - y.min - parseFloat(paddingTop) - parseFloat(paddingBottom),\n    top: (_bbox, { top }) => parseFloat(top),\n    left: (_bbox, { left }) => parseFloat(left),\n    bottom: ({ y }, { top }) => parseFloat(top) + (y.max - y.min),\n    right: ({ x }, { left }) => parseFloat(left) + (x.max - x.min),\n    // Transform\n    x: getTranslateFromMatrix(4, 13),\n    y: getTranslateFromMatrix(5, 14),\n};\n// Alias translate longform names\npositionalValues.translateX = positionalValues.x;\npositionalValues.translateY = positionalValues.y;\nconst convertChangedValueTypes = (target, visualElement, changedKeys) => {\n    const originBbox = visualElement.measureViewportBox();\n    const element = visualElement.current;\n    const elementComputedStyle = getComputedStyle(element);\n    const { display } = elementComputedStyle;\n    const origin = {};\n    // If the element is currently set to display: \"none\", make it visible before\n    // measuring the target bounding box\n    if (display === \"none\") {\n        visualElement.setStaticValue(\"display\", target.display || \"block\");\n    }\n    /**\n     * Record origins before we render and update styles\n     */\n    changedKeys.forEach((key) => {\n        origin[key] = positionalValues[key](originBbox, elementComputedStyle);\n    });\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n    visualElement.render();\n    const targetBbox = visualElement.measureViewportBox();\n    changedKeys.forEach((key) => {\n        // Restore styles to their **calculated computed style**, not their actual\n        // originally set style. This allows us to animate between equivalent pixel units.\n        const value = visualElement.getValue(key);\n        value && value.jump(origin[key]);\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n    });\n    return target;\n};\nconst checkAndConvertChangedValueTypes = (visualElement, target, origin = {}, transitionEnd = {}) => {\n    target = { ...target };\n    transitionEnd = { ...transitionEnd };\n    const targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\n    // We want to remove any transform values that could affect the element's bounding box before\n    // it's measured. We'll reapply these later.\n    let removedTransformValues = [];\n    let hasAttemptedToRemoveTransformValues = false;\n    const changedValueTypeKeys = [];\n    targetPositionalKeys.forEach((key) => {\n        const value = visualElement.getValue(key);\n        if (!visualElement.hasValue(key))\n            return;\n        let from = origin[key];\n        let fromType = findDimensionValueType(from);\n        const to = target[key];\n        let toType;\n        // TODO: The current implementation of this basically throws an error\n        // if you try and do value conversion via keyframes. There's probably\n        // a way of doing this but the performance implications would need greater scrutiny,\n        // as it'd be doing multiple resize-remeasure operations.\n        if (isKeyframesTarget(to)) {\n            const numKeyframes = to.length;\n            const fromIndex = to[0] === null ? 1 : 0;\n            from = to[fromIndex];\n            fromType = findDimensionValueType(from);\n            for (let i = fromIndex; i < numKeyframes; i++) {\n                /**\n                 * Don't allow wildcard keyframes to be used to detect\n                 * a difference in value types.\n                 */\n                if (to[i] === null)\n                    break;\n                if (!toType) {\n                    toType = findDimensionValueType(to[i]);\n                    invariant(toType === fromType ||\n                        (isNumOrPxType(fromType) && isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\n                }\n                else {\n                    invariant(findDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n                }\n            }\n        }\n        else {\n            toType = findDimensionValueType(to);\n        }\n        if (fromType !== toType) {\n            // If they're both just number or px, convert them both to numbers rather than\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n                const current = value.get();\n                if (typeof current === \"string\") {\n                    value.set(parseFloat(current));\n                }\n                if (typeof to === \"string\") {\n                    target[key] = parseFloat(to);\n                }\n                else if (Array.isArray(to) && toType === px) {\n                    target[key] = to.map(parseFloat);\n                }\n            }\n            else if ((fromType === null || fromType === void 0 ? void 0 : fromType.transform) &&\n                (toType === null || toType === void 0 ? void 0 : toType.transform) &&\n                (from === 0 || to === 0)) {\n                // If one or the other value is 0, it's safe to coerce it to the\n                // type of the other without measurement\n                if (from === 0) {\n                    value.set(toType.transform(from));\n                }\n                else {\n                    target[key] = fromType.transform(to);\n                }\n            }\n            else {\n                // If we're going to do value conversion via DOM measurements, we first\n                // need to remove non-positional transform values that could affect the bbox measurements.\n                if (!hasAttemptedToRemoveTransformValues) {\n                    removedTransformValues =\n                        removeNonTranslationalTransform(visualElement);\n                    hasAttemptedToRemoveTransformValues = true;\n                }\n                changedValueTypeKeys.push(key);\n                transitionEnd[key] =\n                    transitionEnd[key] !== undefined\n                        ? transitionEnd[key]\n                        : target[key];\n                value.jump(to);\n            }\n        }\n    });\n    if (changedValueTypeKeys.length) {\n        const scrollY = changedValueTypeKeys.indexOf(\"height\") >= 0\n            ? window.pageYOffset\n            : null;\n        const convertedTarget = convertChangedValueTypes(target, visualElement, changedValueTypeKeys);\n        // If we removed transform values, reapply them before the next render\n        if (removedTransformValues.length) {\n            removedTransformValues.forEach(([key, value]) => {\n                visualElement.getValue(key).set(value);\n            });\n        }\n        // Reapply original values\n        visualElement.render();\n        // Restore scroll position\n        if (isBrowser && scrollY !== null) {\n            window.scrollTo({ top: scrollY });\n        }\n        return { target: convertedTarget, transitionEnd };\n    }\n    else {\n        return { target, transitionEnd };\n    }\n};\n/**\n * Convert value types for x/y/width/height/top/left/bottom/right\n *\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\n *\n * @internal\n */\nfunction unitConversion(visualElement, target, origin, transitionEnd) {\n    return hasPositionalKey(target)\n        ? checkAndConvertChangedValueTypes(visualElement, target, origin, transitionEnd)\n        : { target, transitionEnd };\n}\n\nexport { positionalValues, unitConversion };\n","import { resolveCSSVariables } from './css-variables-conversion.mjs';\nimport { unitConversion } from './unit-conversion.mjs';\n\n/**\n * Parse a DOM variant to make it animatable. This involves resolving CSS variables\n * and ensuring animations like \"20%\" => \"calc(50vw)\" are performed in pixels.\n */\nconst parseDomVariant = (visualElement, target, origin, transitionEnd) => {\n    const resolved = resolveCSSVariables(visualElement, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(visualElement, target, origin, transitionEnd);\n};\n\nexport { parseDomVariant };\n","// Does this device prefer reduced motion? Returns `null` server-side.\nconst prefersReducedMotion = { current: null };\nconst hasReducedMotionListener = { current: false };\n\nexport { hasReducedMotionListener, prefersReducedMotion };\n","const visualElementStore = new WeakMap();\n\nexport { visualElementStore };\n","import { frame, cancelFrame } from '../frameloop/index.mjs';\nimport { warning, invariant } from '../utils/errors.mjs';\nimport { createBox } from '../projection/geometry/models.mjs';\nimport { isRefObject } from '../utils/is-ref-object.mjs';\nimport { initPrefersReducedMotion } from '../utils/reduced-motion/index.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from '../utils/reduced-motion/state.mjs';\nimport { SubscriptionManager } from '../utils/subscription-manager.mjs';\nimport { motionValue } from '../value/index.mjs';\nimport { isWillChangeMotionValue } from '../value/use-will-change/is.mjs';\nimport { isMotionValue } from '../value/utils/is-motion-value.mjs';\nimport { transformProps } from './html/utils/transform.mjs';\nimport { isControllingVariants, isVariantNode } from './utils/is-controlling-variants.mjs';\nimport { isVariantLabel } from './utils/is-variant-label.mjs';\nimport { updateMotionValuesFromProps } from './utils/motion-values.mjs';\nimport { resolveVariantFromProps } from './utils/resolve-variants.mjs';\nimport { warnOnce } from '../utils/warn-once.mjs';\nimport { featureDefinitions } from '../motion/features/definitions.mjs';\nimport { variantProps } from './utils/variant-props.mjs';\nimport { visualElementStore } from './store.mjs';\n\nconst featureNames = Object.keys(featureDefinitions);\nconst numFeatures = featureNames.length;\nconst propEventHandlers = [\n    \"AnimationStart\",\n    \"AnimationComplete\",\n    \"Update\",\n    \"BeforeLayoutMeasure\",\n    \"LayoutMeasure\",\n    \"LayoutAnimationStart\",\n    \"LayoutAnimationComplete\",\n];\nconst numVariantProps = variantProps.length;\n/**\n * A VisualElement is an imperative abstraction around UI elements such as\n * HTMLElement, SVGElement, Three.Object3D etc.\n */\nclass VisualElement {\n    constructor({ parent, props, presenceContext, reducedMotionConfig, visualState, }, options = {}) {\n        /**\n         * A reference to the current underlying Instance, e.g. a HTMLElement\n         * or Three.Mesh etc.\n         */\n        this.current = null;\n        /**\n         * A set containing references to this VisualElement's children.\n         */\n        this.children = new Set();\n        /**\n         * Determine what role this visual element should take in the variant tree.\n         */\n        this.isVariantNode = false;\n        this.isControllingVariants = false;\n        /**\n         * Decides whether this VisualElement should animate in reduced motion\n         * mode.\n         *\n         * TODO: This is currently set on every individual VisualElement but feels\n         * like it could be set globally.\n         */\n        this.shouldReduceMotion = null;\n        /**\n         * A map of all motion values attached to this visual element. Motion\n         * values are source of truth for any given animated value. A motion\n         * value might be provided externally by the component via props.\n         */\n        this.values = new Map();\n        /**\n         * Cleanup functions for active features (hover/tap/exit etc)\n         */\n        this.features = {};\n        /**\n         * A map of every subscription that binds the provided or generated\n         * motion values onChange listeners to this visual element.\n         */\n        this.valueSubscriptions = new Map();\n        /**\n         * A reference to the previously-provided motion values as returned\n         * from scrapeMotionValuesFromProps. We use the keys in here to determine\n         * if any motion values need to be removed after props are updated.\n         */\n        this.prevMotionValues = {};\n        /**\n         * An object containing a SubscriptionManager for each active event.\n         */\n        this.events = {};\n        /**\n         * An object containing an unsubscribe function for each prop event subscription.\n         * For example, every \"Update\" event can have multiple subscribers via\n         * VisualElement.on(), but only one of those can be defined via the onUpdate prop.\n         */\n        this.propEventSubscriptions = {};\n        this.notifyUpdate = () => this.notify(\"Update\", this.latestValues);\n        this.render = () => {\n            if (!this.current)\n                return;\n            this.triggerBuild();\n            this.renderInstance(this.current, this.renderState, this.props.style, this.projection);\n        };\n        this.scheduleRender = () => frame.render(this.render, false, true);\n        const { latestValues, renderState } = visualState;\n        this.latestValues = latestValues;\n        this.baseTarget = { ...latestValues };\n        this.initialValues = props.initial ? { ...latestValues } : {};\n        this.renderState = renderState;\n        this.parent = parent;\n        this.props = props;\n        this.presenceContext = presenceContext;\n        this.depth = parent ? parent.depth + 1 : 0;\n        this.reducedMotionConfig = reducedMotionConfig;\n        this.options = options;\n        this.isControllingVariants = isControllingVariants(props);\n        this.isVariantNode = isVariantNode(props);\n        if (this.isVariantNode) {\n            this.variantChildren = new Set();\n        }\n        this.manuallyAnimateOnMount = Boolean(parent && parent.current);\n        /**\n         * Any motion values that are provided to the element when created\n         * aren't yet bound to the element, as this would technically be impure.\n         * However, we iterate through the motion values and set them to the\n         * initial values for this component.\n         *\n         * TODO: This is impure and we should look at changing this to run on mount.\n         * Doing so will break some tests but this isn't neccessarily a breaking change,\n         * more a reflection of the test.\n         */\n        const { willChange, ...initialMotionValues } = this.scrapeMotionValuesFromProps(props, {});\n        for (const key in initialMotionValues) {\n            const value = initialMotionValues[key];\n            if (latestValues[key] !== undefined && isMotionValue(value)) {\n                value.set(latestValues[key], false);\n                if (isWillChangeMotionValue(willChange)) {\n                    willChange.add(key);\n                }\n            }\n        }\n    }\n    /**\n     * This method takes React props and returns found MotionValues. For example, HTML\n     * MotionValues will be found within the style prop, whereas for Three.js within attribute arrays.\n     *\n     * This isn't an abstract method as it needs calling in the constructor, but it is\n     * intended to be one.\n     */\n    scrapeMotionValuesFromProps(_props, _prevProps) {\n        return {};\n    }\n    mount(instance) {\n        this.current = instance;\n        visualElementStore.set(instance, this);\n        if (this.projection && !this.projection.instance) {\n            this.projection.mount(instance);\n        }\n        if (this.parent && this.isVariantNode && !this.isControllingVariants) {\n            this.removeFromVariantTree = this.parent.addVariantChild(this);\n        }\n        this.values.forEach((value, key) => this.bindToMotionValue(key, value));\n        if (!hasReducedMotionListener.current) {\n            initPrefersReducedMotion();\n        }\n        this.shouldReduceMotion =\n            this.reducedMotionConfig === \"never\"\n                ? false\n                : this.reducedMotionConfig === \"always\"\n                    ? true\n                    : prefersReducedMotion.current;\n        if (process.env.NODE_ENV !== \"production\") {\n            warnOnce(this.shouldReduceMotion !== true, \"You have Reduced Motion enabled on your device. Animations may not appear as expected.\");\n        }\n        if (this.parent)\n            this.parent.children.add(this);\n        this.update(this.props, this.presenceContext);\n    }\n    unmount() {\n        visualElementStore.delete(this.current);\n        this.projection && this.projection.unmount();\n        cancelFrame(this.notifyUpdate);\n        cancelFrame(this.render);\n        this.valueSubscriptions.forEach((remove) => remove());\n        this.removeFromVariantTree && this.removeFromVariantTree();\n        this.parent && this.parent.children.delete(this);\n        for (const key in this.events) {\n            this.events[key].clear();\n        }\n        for (const key in this.features) {\n            this.features[key].unmount();\n        }\n        this.current = null;\n    }\n    bindToMotionValue(key, value) {\n        const valueIsTransform = transformProps.has(key);\n        const removeOnChange = value.on(\"change\", (latestValue) => {\n            this.latestValues[key] = latestValue;\n            this.props.onUpdate &&\n                frame.update(this.notifyUpdate, false, true);\n            if (valueIsTransform && this.projection) {\n                this.projection.isTransformDirty = true;\n            }\n        });\n        const removeOnRenderRequest = value.on(\"renderRequest\", this.scheduleRender);\n        this.valueSubscriptions.set(key, () => {\n            removeOnChange();\n            removeOnRenderRequest();\n        });\n    }\n    sortNodePosition(other) {\n        /**\n         * If these nodes aren't even of the same type we can't compare their depth.\n         */\n        if (!this.current ||\n            !this.sortInstanceNodePosition ||\n            this.type !== other.type) {\n            return 0;\n        }\n        return this.sortInstanceNodePosition(this.current, other.current);\n    }\n    loadFeatures({ children, ...renderedProps }, isStrict, preloadedFeatures, initialLayoutGroupConfig) {\n        let ProjectionNodeConstructor;\n        let MeasureLayout;\n        /**\n         * If we're in development mode, check to make sure we're not rendering a motion component\n         * as a child of LazyMotion, as this will break the file-size benefits of using it.\n         */\n        if (process.env.NODE_ENV !== \"production\" &&\n            preloadedFeatures &&\n            isStrict) {\n            const strictMessage = \"You have rendered a `motion` component within a `LazyMotion` component. This will break tree shaking. Import and render a `m` component instead.\";\n            renderedProps.ignoreStrict\n                ? warning(false, strictMessage)\n                : invariant(false, strictMessage);\n        }\n        for (let i = 0; i < numFeatures; i++) {\n            const name = featureNames[i];\n            const { isEnabled, Feature: FeatureConstructor, ProjectionNode, MeasureLayout: MeasureLayoutComponent, } = featureDefinitions[name];\n            if (ProjectionNode)\n                ProjectionNodeConstructor = ProjectionNode;\n            if (isEnabled(renderedProps)) {\n                if (!this.features[name] && FeatureConstructor) {\n                    this.features[name] = new FeatureConstructor(this);\n                }\n                if (MeasureLayoutComponent) {\n                    MeasureLayout = MeasureLayoutComponent;\n                }\n            }\n        }\n        if (!this.projection && ProjectionNodeConstructor) {\n            this.projection = new ProjectionNodeConstructor(this.latestValues, this.parent && this.parent.projection);\n            const { layoutId, layout, drag, dragConstraints, layoutScroll, layoutRoot, } = renderedProps;\n            this.projection.setOptions({\n                layoutId,\n                layout,\n                alwaysMeasureLayout: Boolean(drag) ||\n                    (dragConstraints && isRefObject(dragConstraints)),\n                visualElement: this,\n                scheduleRender: () => this.scheduleRender(),\n                /**\n                 * TODO: Update options in an effect. This could be tricky as it'll be too late\n                 * to update by the time layout animations run.\n                 * We also need to fix this safeToRemove by linking it up to the one returned by usePresence,\n                 * ensuring it gets called if there's no potential layout animations.\n                 *\n                 */\n                animationType: typeof layout === \"string\" ? layout : \"both\",\n                initialPromotionConfig: initialLayoutGroupConfig,\n                layoutScroll,\n                layoutRoot,\n            });\n        }\n        return MeasureLayout;\n    }\n    updateFeatures() {\n        for (const key in this.features) {\n            const feature = this.features[key];\n            if (feature.isMounted) {\n                feature.update();\n            }\n            else {\n                feature.mount();\n                feature.isMounted = true;\n            }\n        }\n    }\n    triggerBuild() {\n        this.build(this.renderState, this.latestValues, this.options, this.props);\n    }\n    /**\n     * Measure the current viewport box with or without transforms.\n     * Only measures axis-aligned boxes, rotate and skew must be manually\n     * removed with a re-render to work.\n     */\n    measureViewportBox() {\n        return this.current\n            ? this.measureInstanceViewportBox(this.current, this.props)\n            : createBox();\n    }\n    getStaticValue(key) {\n        return this.latestValues[key];\n    }\n    setStaticValue(key, value) {\n        this.latestValues[key] = value;\n    }\n    /**\n     * Make a target animatable by Popmotion. For instance, if we're\n     * trying to animate width from 100px to 100vw we need to measure 100vw\n     * in pixels to determine what we really need to animate to. This is also\n     * pluggable to support Framer's custom value types like Color,\n     * and CSS variables.\n     */\n    makeTargetAnimatable(target, canMutate = true) {\n        return this.makeTargetAnimatableFromInstance(target, this.props, canMutate);\n    }\n    /**\n     * Update the provided props. Ensure any newly-added motion values are\n     * added to our map, old ones removed, and listeners updated.\n     */\n    update(props, presenceContext) {\n        if (props.transformTemplate || this.props.transformTemplate) {\n            this.scheduleRender();\n        }\n        this.prevProps = this.props;\n        this.props = props;\n        this.prevPresenceContext = this.presenceContext;\n        this.presenceContext = presenceContext;\n        /**\n         * Update prop event handlers ie onAnimationStart, onAnimationComplete\n         */\n        for (let i = 0; i < propEventHandlers.length; i++) {\n            const key = propEventHandlers[i];\n            if (this.propEventSubscriptions[key]) {\n                this.propEventSubscriptions[key]();\n                delete this.propEventSubscriptions[key];\n            }\n            const listener = props[\"on\" + key];\n            if (listener) {\n                this.propEventSubscriptions[key] = this.on(key, listener);\n            }\n        }\n        this.prevMotionValues = updateMotionValuesFromProps(this, this.scrapeMotionValuesFromProps(props, this.prevProps), this.prevMotionValues);\n        if (this.handleChildMotionValue) {\n            this.handleChildMotionValue();\n        }\n    }\n    getProps() {\n        return this.props;\n    }\n    /**\n     * Returns the variant definition with a given name.\n     */\n    getVariant(name) {\n        return this.props.variants ? this.props.variants[name] : undefined;\n    }\n    /**\n     * Returns the defined default transition on this component.\n     */\n    getDefaultTransition() {\n        return this.props.transition;\n    }\n    getTransformPagePoint() {\n        return this.props.transformPagePoint;\n    }\n    getClosestVariantNode() {\n        return this.isVariantNode\n            ? this\n            : this.parent\n                ? this.parent.getClosestVariantNode()\n                : undefined;\n    }\n    getVariantContext(startAtParent = false) {\n        if (startAtParent) {\n            return this.parent ? this.parent.getVariantContext() : undefined;\n        }\n        if (!this.isControllingVariants) {\n            const context = this.parent\n                ? this.parent.getVariantContext() || {}\n                : {};\n            if (this.props.initial !== undefined) {\n                context.initial = this.props.initial;\n            }\n            return context;\n        }\n        const context = {};\n        for (let i = 0; i < numVariantProps; i++) {\n            const name = variantProps[i];\n            const prop = this.props[name];\n            if (isVariantLabel(prop) || prop === false) {\n                context[name] = prop;\n            }\n        }\n        return context;\n    }\n    /**\n     * Add a child visual element to our set of children.\n     */\n    addVariantChild(child) {\n        const closestVariantNode = this.getClosestVariantNode();\n        if (closestVariantNode) {\n            closestVariantNode.variantChildren &&\n                closestVariantNode.variantChildren.add(child);\n            return () => closestVariantNode.variantChildren.delete(child);\n        }\n    }\n    /**\n     * Add a motion value and bind it to this visual element.\n     */\n    addValue(key, value) {\n        // Remove existing value if it exists\n        if (value !== this.values.get(key)) {\n            this.removeValue(key);\n            this.bindToMotionValue(key, value);\n        }\n        this.values.set(key, value);\n        this.latestValues[key] = value.get();\n    }\n    /**\n     * Remove a motion value and unbind any active subscriptions.\n     */\n    removeValue(key) {\n        this.values.delete(key);\n        const unsubscribe = this.valueSubscriptions.get(key);\n        if (unsubscribe) {\n            unsubscribe();\n            this.valueSubscriptions.delete(key);\n        }\n        delete this.latestValues[key];\n        this.removeValueFromRenderState(key, this.renderState);\n    }\n    /**\n     * Check whether we have a motion value for this key\n     */\n    hasValue(key) {\n        return this.values.has(key);\n    }\n    getValue(key, defaultValue) {\n        if (this.props.values && this.props.values[key]) {\n            return this.props.values[key];\n        }\n        let value = this.values.get(key);\n        if (value === undefined && defaultValue !== undefined) {\n            value = motionValue(defaultValue, { owner: this });\n            this.addValue(key, value);\n        }\n        return value;\n    }\n    /**\n     * If we're trying to animate to a previously unencountered value,\n     * we need to check for it in our state and as a last resort read it\n     * directly from the instance (which might have performance implications).\n     */\n    readValue(key) {\n        var _a;\n        return this.latestValues[key] !== undefined || !this.current\n            ? this.latestValues[key]\n            : (_a = this.getBaseTargetFromProps(this.props, key)) !== null && _a !== void 0 ? _a : this.readValueFromInstance(this.current, key, this.options);\n    }\n    /**\n     * Set the base target to later animate back to. This is currently\n     * only hydrated on creation and when we first read a value.\n     */\n    setBaseTarget(key, value) {\n        this.baseTarget[key] = value;\n    }\n    /**\n     * Find the base target for a value thats been removed from all animation\n     * props.\n     */\n    getBaseTarget(key) {\n        var _a;\n        const { initial } = this.props;\n        const valueFromInitial = typeof initial === \"string\" || typeof initial === \"object\"\n            ? (_a = resolveVariantFromProps(this.props, initial)) === null || _a === void 0 ? void 0 : _a[key]\n            : undefined;\n        /**\n         * If this value still exists in the current initial variant, read that.\n         */\n        if (initial && valueFromInitial !== undefined) {\n            return valueFromInitial;\n        }\n        /**\n         * Alternatively, if this VisualElement config has defined a getBaseTarget\n         * so we can read the value from an alternative source, try that.\n         */\n        const target = this.getBaseTargetFromProps(this.props, key);\n        if (target !== undefined && !isMotionValue(target))\n            return target;\n        /**\n         * If the value was initially defined on initial, but it doesn't any more,\n         * return undefined. Otherwise return the value as initially read from the DOM.\n         */\n        return this.initialValues[key] !== undefined &&\n            valueFromInitial === undefined\n            ? undefined\n            : this.baseTarget[key];\n    }\n    on(eventName, callback) {\n        if (!this.events[eventName]) {\n            this.events[eventName] = new SubscriptionManager();\n        }\n        return this.events[eventName].add(callback);\n    }\n    notify(eventName, ...args) {\n        if (this.events[eventName]) {\n            this.events[eventName].notify(...args);\n        }\n    }\n}\n\nexport { VisualElement };\n","import { isBrowser } from '../is-browser.mjs';\nimport { hasReducedMotionListener, prefersReducedMotion } from './state.mjs';\n\nfunction initPrefersReducedMotion() {\n    hasReducedMotionListener.current = true;\n    if (!isBrowser)\n        return;\n    if (window.matchMedia) {\n        const motionMediaQuery = window.matchMedia(\"(prefers-reduced-motion)\");\n        const setReducedMotionPreferences = () => (prefersReducedMotion.current = motionMediaQuery.matches);\n        motionMediaQuery.addListener(setReducedMotionPreferences);\n        setReducedMotionPreferences();\n    }\n    else {\n        prefersReducedMotion.current = false;\n    }\n}\n\nexport { initPrefersReducedMotion };\n","import { isWillChangeMotionValue } from '../../value/use-will-change/is.mjs';\nimport { warnOnce } from '../../utils/warn-once.mjs';\nimport { motionValue } from '../../value/index.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction updateMotionValuesFromProps(element, next, prev) {\n    const { willChange } = next;\n    for (const key in next) {\n        const nextValue = next[key];\n        const prevValue = prev[key];\n        if (isMotionValue(nextValue)) {\n            /**\n             * If this is a motion value found in props or style, we want to add it\n             * to our visual element's motion value map.\n             */\n            element.addValue(key, nextValue);\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.add(key);\n            }\n            /**\n             * Check the version of the incoming motion value with this version\n             * and warn against mismatches.\n             */\n            if (process.env.NODE_ENV === \"development\") {\n                warnOnce(nextValue.version === \"10.12.21\", `Attempting to mix Framer Motion versions ${nextValue.version} with 10.12.21 may not work as expected.`);\n            }\n        }\n        else if (isMotionValue(prevValue)) {\n            /**\n             * If we're swapping from a motion value to a static value,\n             * create a new motion value from that\n             */\n            element.addValue(key, motionValue(nextValue, { owner: element }));\n            if (isWillChangeMotionValue(willChange)) {\n                willChange.remove(key);\n            }\n        }\n        else if (prevValue !== nextValue) {\n            /**\n             * If this is a flat value that has changed, update the motion value\n             * or create one if it doesn't exist. We only want to do this if we're\n             * not handling the value with our animation state.\n             */\n            if (element.hasValue(key)) {\n                const existingValue = element.getValue(key);\n                // TODO: Only update values that aren't being animated or even looked at\n                !existingValue.hasAnimated && existingValue.set(nextValue);\n            }\n            else {\n                const latestValue = element.getStaticValue(key);\n                element.addValue(key, motionValue(latestValue !== undefined ? latestValue : nextValue, { owner: element }));\n            }\n        }\n    }\n    // Handle removed values\n    for (const key in prev) {\n        if (next[key] === undefined)\n            element.removeValue(key);\n    }\n    return next;\n}\n\nexport { updateMotionValuesFromProps };\n","import { getOrigin, checkTargetForNewValues } from '../utils/setters.mjs';\nimport { parseDomVariant } from './utils/parse-dom-variant.mjs';\nimport { VisualElement } from '../VisualElement.mjs';\n\nclass DOMVisualElement extends VisualElement {\n    sortInstanceNodePosition(a, b) {\n        /**\n         * compareDocumentPosition returns a bitmask, by using the bitwise &\n         * we're returning true if 2 in that bitmask is set to true. 2 is set\n         * to true if b preceeds a.\n         */\n        return a.compareDocumentPosition(b) & 2 ? 1 : -1;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props.style ? props.style[key] : undefined;\n    }\n    removeValueFromRenderState(key, { vars, style }) {\n        delete vars[key];\n        delete style[key];\n    }\n    makeTargetAnimatableFromInstance({ transition, transitionEnd, ...target }, { transformValues }, isMounted) {\n        let origin = getOrigin(target, transition || {}, this);\n        /**\n         * If Framer has provided a function to convert `Color` etc value types, convert them\n         */\n        if (transformValues) {\n            if (transitionEnd)\n                transitionEnd = transformValues(transitionEnd);\n            if (target)\n                target = transformValues(target);\n            if (origin)\n                origin = transformValues(origin);\n        }\n        if (isMounted) {\n            const newValues = checkTargetForNewValues(this, target, origin);\n            // If new values have been added, for instance named color values, transform these\n            if (transformValues && newValues) {\n                origin = transformValues(origin);\n            }\n            const parsed = parseDomVariant(this, target, origin, transitionEnd);\n            transitionEnd = parsed.transitionEnd;\n            target = parsed.target;\n        }\n        return {\n            transition,\n            transitionEnd,\n            ...target,\n        };\n    }\n}\n\nexport { DOMVisualElement };\n","import { buildHTMLStyles } from './utils/build-styles.mjs';\nimport { isCSSVariableName } from '../dom/utils/is-css-variable.mjs';\nimport { transformProps } from './utils/transform.mjs';\nimport { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { renderHTML } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { measureViewportBox } from '../../projection/utils/measure.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { isMotionValue } from '../../value/utils/is-motion-value.mjs';\n\nfunction getComputedStyle(element) {\n    return window.getComputedStyle(element);\n}\nclass HTMLVisualElement extends DOMVisualElement {\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        else {\n            const computedStyle = getComputedStyle(instance);\n            const value = (isCSSVariableName(key)\n                ? computedStyle.getPropertyValue(key)\n                : computedStyle[key]) || 0;\n            return typeof value === \"string\" ? value.trim() : value;\n        }\n    }\n    measureInstanceViewportBox(instance, { transformPagePoint }) {\n        return measureViewportBox(instance, transformPagePoint);\n    }\n    build(renderState, latestValues, options, props) {\n        buildHTMLStyles(renderState, latestValues, options, props.transformTemplate);\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    handleChildMotionValue() {\n        if (this.childSubscription) {\n            this.childSubscription();\n            delete this.childSubscription;\n        }\n        const { children } = this.props;\n        if (isMotionValue(children)) {\n            this.childSubscription = children.on(\"change\", (latest) => {\n                if (this.current)\n                    this.current.textContent = `${latest}`;\n            });\n        }\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderHTML(instance, renderState, styleProp, projection);\n    }\n}\n\nexport { HTMLVisualElement, getComputedStyle };\n","import { scrapeMotionValuesFromProps } from './utils/scrape-motion-values.mjs';\nimport { DOMVisualElement } from '../dom/DOMVisualElement.mjs';\nimport { buildSVGAttrs } from './utils/build-attrs.mjs';\nimport { camelToDash } from '../dom/utils/camel-to-dash.mjs';\nimport { camelCaseAttributes } from './utils/camel-case-attrs.mjs';\nimport { transformProps } from '../html/utils/transform.mjs';\nimport { renderSVG } from './utils/render.mjs';\nimport { getDefaultValueType } from '../dom/value-types/defaults.mjs';\nimport { createBox } from '../../projection/geometry/models.mjs';\nimport { isSVGTag } from './utils/is-svg-tag.mjs';\n\nclass SVGVisualElement extends DOMVisualElement {\n    constructor() {\n        super(...arguments);\n        this.isSVGTag = false;\n    }\n    getBaseTargetFromProps(props, key) {\n        return props[key];\n    }\n    readValueFromInstance(instance, key) {\n        if (transformProps.has(key)) {\n            const defaultType = getDefaultValueType(key);\n            return defaultType ? defaultType.default || 0 : 0;\n        }\n        key = !camelCaseAttributes.has(key) ? camelToDash(key) : key;\n        return instance.getAttribute(key);\n    }\n    measureInstanceViewportBox() {\n        return createBox();\n    }\n    scrapeMotionValuesFromProps(props, prevProps) {\n        return scrapeMotionValuesFromProps(props, prevProps);\n    }\n    build(renderState, latestValues, options, props) {\n        buildSVGAttrs(renderState, latestValues, options, this.isSVGTag, props.transformTemplate);\n    }\n    renderInstance(instance, renderState, styleProp, projection) {\n        renderSVG(instance, renderState, styleProp, projection);\n    }\n    mount(instance) {\n        this.isSVGTag = isSVGTag(instance.tagName);\n        super.mount(instance);\n    }\n}\n\nexport { SVGVisualElement };\n","import { animations } from '../../motion/features/animations.mjs';\nimport { gestureAnimations } from '../../motion/features/gestures.mjs';\nimport { createDomVisualElement } from './create-visual-element.mjs';\n\n/**\n * @public\n */\nconst domAnimation = {\n    renderer: createDomVisualElement,\n    ...animations,\n    ...gestureAnimations,\n};\n\nexport { domAnimation };\n","import { HTMLVisualElement } from '../html/HTMLVisualElement.mjs';\nimport { SVGVisualElement } from '../svg/SVGVisualElement.mjs';\nimport { isSVGComponent } from './utils/is-svg-component.mjs';\n\nconst createDomVisualElement = (Component, options) => {\n    return isSVGComponent(Component)\n        ? new SVGVisualElement(options, { enableHardwareAcceleration: false })\n        : new HTMLVisualElement(options, { enableHardwareAcceleration: true });\n};\n\nexport { createDomVisualElement };\n","import { drag } from '../../motion/features/drag.mjs';\nimport { layout } from '../../motion/features/layout.mjs';\nimport { domAnimation } from './features-animation.mjs';\n\n/**\n * @public\n */\nconst domMax = {\n    ...domAnimation,\n    ...drag,\n    ...layout,\n};\n\nexport { domMax };\n"],"names":["_get","Reflect","get","bind","target","property","receiver","base","object","Object","prototype","hasOwnProperty","call","getPrototypeOf","desc","getOwnPropertyDescriptor","arguments","length","value","apply","this","Feature","node","_classCallCheck","isMounted","_createClass","key","isPrimaryPointer","event","pointerType","button","isPrimary","extractEventInfo","pointType","undefined","point","x","y","addPointerInfo","handler","addDomEvent","eventName","options","passive","addEventListener","removeEventListener","addPointerEvent","distance","a","b","Math","abs","PanSession","handlers","_this","transformPagePoint","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","xDelta","yDelta","sqrt","pow","distance2D","offset","timestamp","frameData","push","_objectSpread","_this$handlers","onStart","onMove","handlePointerMove","transformPoint","frame","update","handlePointerUp","end","_this$handlers2","onEnd","onSessionEnd","panInfo","type","initialInfo","onSessionStart","removeListeners","pipe","window","cancelFrame","subtractPoint","_ref2","delta","lastDevicePoint","startDevicePoint","velocity","getVelocity","timeDelta","i","timestampedPoint","lastPoint","secondsToMilliseconds","time","millisecondsToSeconds","currentVelocity","Infinity","createLock","name","lock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal","openVertical","isDragActive","openGestureLock","calcLength","axis","max","min","isNear","maxDistance","calcAxisDelta","source","origin","originPoint","mix","scale","isNaN","translate","calcBoxDelta","originX","originY","calcRelativeAxis","relative","parent","calcRelativeAxisPosition","layout","calcRelativePosition","calcRelativeAxisConstraints","calcViewportAxisConstraints","layoutAxis","constraintsAxis","_ref3","defaultElastic","resolveAxisElastic","dragElastic","minLabel","maxLabel","resolvePointElastic","label","createDelta","createBox","eachAxis","callback","convertBoundingBoxToBox","_ref","top","left","right","bottom","isIdentityScale","hasScale","scaleX","scaleY","hasTransform","values","has2DTranslate","z","rotate","rotateX","rotateY","is2DTranslate","scalePoint","applyPointDelta","boxScale","applyAxisDelta","applyBoxDelta","box","snapToDefault","Number","isInteger","translateAxis","transformAxis","transforms","_slicedToArray","scaleKey","originKey","axisOrigin","xKeys","yKeys","transformBox","transform","measureViewportBox","instance","topLeft","bottomRight","transformBoxPoints","getBoundingClientRect","instantAnimationState","isBezierDefinition","easing","Array","isArray","isWaapiSupportedEasing","Boolean","supportedWaapiEasing","every","cubicBezierAsString","c","d","concat","linear","ease","easeIn","easeOut","easeInOut","circIn","circOut","backIn","backOut","mapEasingToNativeEasing","map","featureTests","waapi","Element","results","supports","_loop","acceleratedValues","Set","createAcceleratedAnimation","valueName","onUpdate","onComplete","_objectWithoutProperties","_excluded","has","repeatDelay","repeatType","damping","resolveFinishedPromise","currentFinishedPromise","hasStopped","updateFinishedPromise","Promise","resolve","keyframes","_options$duration","duration","times","requiresPregeneratedKeyframes","sampleAnimation","animateValue","repeat","delay","state","done","pregeneratedKeyframes","t","sample","animation","element","_ref$delay","_ref$repeat","_ref$repeatType","keyframeOptions","_defineProperty","animate","fill","iterations","direction","animateStyle","owner","current","cancelAnimation","cancel","safeCancel","onfinish","set","getFinalKeyframe","then","reject","currentTime","newTime","speed","playbackRate","newSpeed","play","pause","stop","playState","autoplay","setWithVelocity","complete","finish","underDampedSpring","stiffness","restSpeed","keyframesTransition","getDefaultTransition","valueKey","transformProps","startsWith","isAnimatable","complex","test","maxDefaults","applyDefaultFilter","v","_v$slice$split","slice","split","_v$slice$split2","match","floatRegex","number","unit","replace","defaultValue","functionRegex","filter","getAnimatableNone","functions","join","defaultValueTypes","numberValueTypes","color","backgroundColor","outlineColor","stroke","borderColor","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","WebkitFilter","getDefaultValueType","defaultValueType","isZeroValueString","isNone","getValueTransition","transition","animateMotionValue","valueTransition","_transition$elapsed","elapsed","isTargetAnimatable","_toConsumableArray","defaultOrigin","from","animatableTemplateValue","noneKeyframeIndexes","getKeyframes","originKeyframe","targetKeyframe","isOriginAnimatable","warning","when","delayChildren","staggerChildren","staggerDirection","keys","isTransitionDefined","setValue","noop","createInstantAnimation","HTMLElement","getProps","acceleratedAnimation","elementDragControls","WeakMap","VisualElementDragControls","visualElement","openGlobalLock","isDragging","currentDirection","constraints","hasMutatedConstraints","elastic","originEvent","_ref$snapToCursor","snapToCursor","presenceContext","isPresent","panSession","stopAnimation","_this$getProps","dragPropagation","onDragStart","resolveConstraints","projection","isAnimationBlocked","getAxisMotionValue","percent","measuredAxis","layoutBox","parseFloat","animationState","setActive","_this$getProps2","dragDirectionLock","onDirectionLock","onDrag","lockThreshold","getCurrentDirection","updateAxis","render","getTransformPagePoint","startAnimation","onDragEnd","_this$visualElement","_point","shouldDrag","axisValue","next","applyConstraints","_this2","_this$getProps6","dragConstraints","prevConstraints","isRefObject","resolveRefConstraints","calcRelativeConstraints","resolveDragElastic","relativeConstraints","rebaseAxisConstraints","_this$getProps7","onMeasureDragConstraints","constraintsElement","invariant","constraintsBox","rootProjectionNode","viewportBox","scroll","measurePageBox","root","measuredConstraints","calcViewportConstraints","userConstraints","convertBoxToBoundingBox","_this3","_this$getProps8","dragMomentum","dragTransition","dragSnapToOrigin","onDragTransitionEnd","momentumAnimations","bounceStiffness","bounceDamping","inertia","timeConstant","restDelta","startAxisValueAnimation","all","start","_this4","dragKey","toUpperCase","props","externalMotionValue","getValue","initial","_this5","_projection$layout$la","_this6","_this$getProps9","boxProgress","latest","sourceLength","targetLength","progress","clamp","calcOrigin","transformTemplate","style","updateScroll","updateLayout","_this6$constraints$ax","_this7","stopPointerListener","_this7$getProps","_this7$getProps$dragL","dragListener","measureDragConstraints","stopMeasureLayoutListener","stopResizeListener","scalePositionWithinConstraints","stopLayoutUpdateListener","hasLayoutChanged","motionValue","_props$drag","_props$dragDirectionL","_props$dragPropagatio","_props$dragConstraint","_props$dragElastic","_props$dragMomentum","DragGesture","_Feature","_inherits","_super","_createSuper","removeGroupControls","controls","dragControls","subscribe","addListeners","asyncHandler","PanGesture","removePointerDownListener","pointerDownEvent","session","createPanHandlers","_this$node$getProps","onPanSessionStart","onPanStart","onPan","onPanEnd","onPointerDown","updateHandlers","globalProjectionState","hasAnimatedSinceResize","hasEverUpdated","pixelsToPercent","pixels","correctBorderRadius","correct","px","correctBoxShadow","treeScale","projectionDelta","original","shadow","parse","template","createTransformer","xScale","yScale","averageScale","MeasureLayoutWithContext","_React__default$Compo","_this$props","layoutGroup","switchLayoutGroup","layoutId","addScaleCorrector","defaultScaleCorrectors","group","add","register","didUpdate","safeToRemove","setOptions","onExitComplete","prevProps","_this$props2","layoutDependency","willUpdate","promote","relegate","postRender","stack","getStack","members","queueMicrotask","currentAnimation","isLead","_this$props3","promoteContext","scheduleCheckAfterUnmount","remove","deregister","React__default","MeasureLayout","_usePresence","context","useContext","PresenceContext","id","useId","useEffect","usePresence","_usePresence2","LayoutGroupContext","SwitchLayoutGroupContext","borderRadius","applyTo","borderTopLeftRadius","borderTopRightRadius","borderBottomLeftRadius","borderBottomRightRadius","boxShadow","borders","numBorders","asNumber","isPx","getRadius","radiusName","easeCrossfadeIn","compress","easeCrossfadeOut","p","copyAxisInto","originAxis","copyBoxInto","originBox","removePointDelta","removeAxisTransforms","sourceAxis","removeAxisDelta","removeBoxTransforms","sourceBox","isAxisDeltaZero","isDeltaZero","boxEquals","aspectRatio","NodeStack","addUniqueItem","scheduleRender","removeItem","prevLead","lead","indexOfNode","findIndex","member","preserveFollowOpacity","show","resumeFrom","preserveOpacity","snapshot","latestValues","animationValues","isUpdating","isLayoutDirty","crossfade","hide","forEach","resumingFrom","buildProjectionTransform","latestTransform","xTranslate","yTranslate","elementScaleX","elementScaleY","compareByDepth","depth","FlatTree","children","isDirty","child","sort","transformAxes","projectionFrameData","totalNodes","resolvedTargetDeltas","recalculatedProjection","createProjectionNode","attachResizeListener","defaultParent","measureScroll","checkIsScrollRoot","resetTransform","ProjectionNode","animationId","isTreeAnimating","isProjectionDirty","isSharedProjectionDirty","isTransformDirty","updateManuallyBlocked","updateBlockedByResize","isSVG","needsReset","shouldResetTransform","eventHandlers","Map","hasTreeAnimated","updateScheduled","checkUpdateFailed","clearAllSnapshots","updateProjection","nodes","propagateDirtyNodes","resolveTargetDelta","calcProjection","cleanDirtyNodes","data","MotionDebug","record","hasProjected","isVisible","animationProgress","sharedNodes","path","SubscriptionManager","subscriptionManager","_len","args","_key","notify","SVGElement","tagName","_this$options","mount","cancelDelay","resizeUnblockUpdate","timeout","performance","now","checkElapsed","read","finishAnimation","registerSharedNode","hasRelativeTargetChanged","newLayout","isTreeAnimationBlocked","relativeTarget","layoutTransition","defaultLayoutTransition","_visualElement$getPro","onLayoutAnimationStart","onLayoutAnimationComplete","targetChanged","targetLayout","hasOnlyRelativeTargetChanged","layoutRoot","setAnimationOrigin","animationOptions","onPlay","shouldReduceMotion","delete","isUpdateBlocked","resetRotation","shouldNotifyListeners","startUpdate","_this$options2","getTransformTemplate","prevTransformTemplateValue","updateSnapshot","notifyListeners","unblockUpdate","clearMeasurements","clearIsLayoutDirty","resetTransformStyle","notifyLayoutUpdate","isProcessing","steps","process","preRender","clearSnapshot","removeLeadSnapshots","measure","alwaysMeasureLayout","prevLayout","layoutCorrected","phase","needsMeasurement","layoutScroll","isRoot","isResetRequested","hasProjection","transformTemplateValue","transformTemplateHasChanged","removeTransform","pageBox","removeElementScroll","roundAxis","measuredBox","boxWithoutScroll","rootScroll","transformOnly","withTransforms","boxWithoutTransform","targetDelta","scheduleUpdateProjection","relativeParent","resolvedRelativeTargetAt","_a","forceRecalculation","getLead","isShared","attemptToResolveRelativeTarget","_this$options3","getClosestProjectingParent","forceRelativeParentToResolveTarget","relativeTargetOrigin","targetWithTransforms","applyTransform","isProjecting","canSkip","_this$options4","pendingAnimation","prevTreeScaleX","prevTreeScaleY","treePath","isSharedTransition","treeLength","display","applyTreeDeltas","projectionDeltaWithTransform","prevProjectionTransform","projectionTransform","notifyAll","snapshotLatestValues","mixedValues","prevRelativeTarget","relativeLayout","isSharedLayoutAnimation","isOnlyMember","shouldCrossfadeOpacity","some","hasOpacityCrossfade","mixTargetDelta","output","to","mixAxisDelta","setTargetDelta","mixAxis","follow","opacity","opacityExit","borderLabel","followRadius","leadRadius","mixValues","motionValue$1","isMotionValue","animateSingleValue","completeAnimation","exitAnimationComplete","shouldAnimatePositionOnly","animationType","xLength","yLength","config","initialPromotionConfig","shouldPreserveFollowOpacity","hasRotate","rotateZ","resetValues","setStaticValue","_b","styleProp","styles","visibility","pointerEvents","resolveMotionValue","emptyStyles","valuesToRender","applyTransformsToTarget","_this$projectionDelta","transformOrigin","scaleCorrectors","_scaleCorrectors$key","corrected","num","clear","hasListeners","_node$layout","measuredLayout","axisSnapshot","layoutDelta","visualDelta","parentSnapshot","parentLayout","relativeSnapshot","onBeforeLayoutMeasure","removeLeadSnapshot","round","DocumentProjectionNode","ref","document","documentElement","scrollLeft","body","scrollTop","HTMLProjectionNode","documentNode","getComputedStyle","position","pan","shallowCompare","prev","prevLength","resolveVariant","definition","custom","resolveVariantFromProps","getCurrent","optimizedAppearDataAttribute","camelToDash","isWillChangeMotionValue","testValueType","dimensionValueTypes","degrees","vw","vh","findDimensionValueType","find","valueTypes","findValueType","setMotionValue","hasValue","addValue","setTarget","resolved","makeTargetAnimatable","_ref$transitionEnd","transitionEnd","resolveFinalValueInKeyframes","getOriginFromTransition","animateTarget","_ref2$delay","transitionOverride","_visualElement$makeTa","_visualElement$makeTa2","willChange","animations","animationTypeState","getState","valueTarget","protectedKeys","needsAnimating","shouldBlock","shouldBlockAnimation","HandoffAppearAnimations","hasAnimated","appearId","animateVariant","variant","_ref$transition","getAnimation","getChildAnimations","variantChildren","size","forwardDelay","_transition","_transition$delayChil","maxStaggerDuration","generateStaggerDuration","sortByTreeOrder","animateChildren","first","last","sortNodePosition","reversePriorityOrder","variantPriorityOrder","reverse","numAnimationTypes","animateList","resolvedDefinition","animateVisualElement","createAnimationState","createTypeState","whileInView","whileHover","whileTap","whileDrag","whileFocus","exit","isInitialRender","buildResolvedTypeValues","acc","animateChanges","changedActiveType","getVariantContext","removedKeys","encounteredKeys","removedVariantIndex","typeState","prop","propIsVariant","isVariantLabel","activeDelta","isActive","isInherited","manuallyAnimateOnMount","prevProp","isAnimationControls","variantDidChange","checkVariantsDidChange","shouldAnimateType","definitionList","resolvedValues","reduce","_typeState$prevResolv","prevResolvedValues","allKeys","markToAnimate","isKeyframesTarget","blockInitialAnimation","fallbackAnimation","fallbackTarget","getBaseTarget","shouldAnimate","setAnimateFunction","makeAnimator","AnimationFeature","unmount","updateAnimationControlsSubscription","ExitAnimationFeature","_this$node$presenceCo","prevIsPresent","prevPresenceContext","exitAnimation","addHoverEvent","callbackName","HoverGesture","FocusGesture","isFocusVisible","matches","e","onFocus","onBlur","isNodeOrChild","parentElement","fireSyntheticPointerEvent","syntheticPointerEvent","PointerEvent","PressGesture","removeStartListeners","removeEndListeners","removeAccessibleListeners","startPointerPress","startInfo","isPressing","removePointerUpListener","endEvent","endInfo","checkPressEnd","onTap","onTapCancel","removePointerCancelListener","cancelEvent","cancelInfo","cancelPress","startPress","startAccessiblePress","removeKeydownListener","keydownEvent","keyupEvent","removeBlurListener","_this$node$getProps3","onTapStart","removePointerListener","removeFocusListener","observerCallbacks","observers","fireObserverCallback","entry","fireAllObserverCallbacks","entries","observeIntersection","rootInteresectionObserver","lookupRoot","rootObservers","JSON","stringify","IntersectionObserver","initIntersectionObserver","observe","unobserve","thresholdNames","InViewFeature","hasEnteredView","isInView","_this$node$getProps$v","viewport","rootMargin","margin","_viewport$amount","amount","once","threshold","isIntersecting","_this2$node$getProps","onViewportEnter","onViewportLeave","startObserver","_this$node","hasOptionsChanged","_ref$viewport","_ref2$viewport","prevViewport","hasViewportOptionChanged","gestureAnimations","inView","tap","focus","hover","splitCSSVariableRegex","maxDepth","getVariableValue","_parseCSSVariable","exec","_match","parseCSSVariable","_parseCSSVariable2","token","fallback","getPropertyValue","trim","isCSSVariableToken","positionalKeys","isPositionalKey","isNumOrPxType","getPosFromMatrix","matrix","pos","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","transformPropOrder","positionalValues","width","_ref3$paddingLeft","paddingLeft","_ref3$paddingRight","paddingRight","height","_ref4","_ref5","_ref5$paddingTop","paddingTop","_ref5$paddingBottom","paddingBottom","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","translateX","translateY","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","toType","fromType","numKeyframes","fromIndex","removedTransforms","removeNonTranslationalTransform","jump","scrollY","indexOf","pageYOffset","convertedTarget","changedKeys","originBbox","elementComputedStyle","targetBbox","convertChangedValueTypes","_ref12","_ref13","isBrowser","scrollTo","unitConversion","hasPositionalKey","parseDomVariant","assign","_objectDestructuringEmpty","resolveCSSVariables","prefersReducedMotion","hasReducedMotionListener","visualElementStore","featureNames","featureDefinitions","numFeatures","propEventHandlers","numVariantProps","variantProps","VisualElement","reducedMotionConfig","visualState","isVariantNode","isControllingVariants","features","valueSubscriptions","prevMotionValues","events","propEventSubscriptions","notifyUpdate","triggerBuild","renderInstance","renderState","baseTarget","initialValues","_this$scrapeMotionVal","scrapeMotionValuesFromProps","initialMotionValues","_props","_prevProps","removeFromVariantTree","addVariantChild","bindToMotionValue","matchMedia","motionMediaQuery","setReducedMotionPreferences","addListener","initPrefersReducedMotion","valueIsTransform","removeOnChange","on","latestValue","removeOnRenderRequest","other","sortInstanceNodePosition","isStrict","preloadedFeatures","initialLayoutGroupConfig","ProjectionNodeConstructor","renderedProps","_excluded2","_featureDefinitions$n","isEnabled","FeatureConstructor","MeasureLayoutComponent","feature","build","measureInstanceViewportBox","canMutate","makeTargetAnimatableFromInstance","listener","nextValue","prevValue","existingValue","getStaticValue","removeValue","updateMotionValuesFromProps","handleChildMotionValue","variants","getClosestVariantNode","closestVariantNode","unsubscribe","removeValueFromRenderState","getBaseTargetFromProps","readValueFromInstance","valueFromInitial","_this$events$eventNam","_key2","DOMVisualElement","_VisualElement","compareDocumentPosition","vars","transformValues","transitionOrigin","getOrigin","newValues","newValueKeys","numNewValues","targetValue","readValue","setBaseTarget","checkTargetForNewValues","parsed","HTMLVisualElement","_DOMVisualElement","defaultType","default","computedStyle","isCSSVariableName","buildHTMLStyles","childSubscription","textContent","renderHTML","SVGVisualElement","isSVGTag","camelCaseAttributes","getAttribute","buildSVGAttrs","renderSVG","_getPrototypeOf","domAnimation","renderer","Component","isSVGComponent","enableHardwareAcceleration","domMax"],"sourceRoot":""}